{"version":3,"sources":["webpack:///./app/components/searchBar.tsx"],"names":["SearchBar","query","props","defaultQuery","dropdownVisible","React","searchInputRef","current","blur","evt","preventDefault","onSearch","state","setState","callIfFunction","onChange","value","target","nextProps","this","className","width","classNames","onSubmit","StyledInput","type","placeholder","name","ref","autoComplete","onBlur","onQueryBlur","onQueryChange","StyledIconSearch","size","color","SearchClearButton","priority","onClick","clearSearch","icon","label","t","Input","p","undefined","IconSearch","Button","theme","fontSizeLarge","gray200","gray300"],"mappings":"iuCA6BMA,E,wnBAOW,CACbC,MAAO,EAAKC,MAAMD,OAAS,EAAKC,MAAMC,aACtCC,iBAAiB,K,mCAWFC,gB,0BAEV,WACD,EAAKC,eAAeC,SACtB,EAAKD,eAAeC,QAAQC,W,8BAIrB,SAACC,GACVA,EAAIC,iBACJ,EAAKF,OACL,EAAKN,MAAMS,SAAS,EAAKC,MAAMX,W,iCAGnB,WACZ,EAAKY,SAAS,CAACZ,MAAO,EAAKC,MAAMC,eAAe,WAC9C,EAAKD,MAAMS,SAAS,EAAKC,MAAMX,QAC/Ba,OAAe,EAAKZ,MAAMa,SAAU,EAAKH,MAAMX,c,kCAIpC,WACb,EAAKY,SAAS,CACZT,iBAAiB,Q,iCAIP,WACZ,EAAKS,SAAS,CAACT,iBAAiB,Q,mCAGlB,SAACK,GACf,IAAOO,EAASP,EAAIQ,OAAbD,MAEP,EAAKH,SAAS,CAACZ,MAAOe,KACtBF,OAAe,EAAKZ,MAAMa,SAAUC,M,iEA3CtC,SAAiCE,GAC3BA,EAAUjB,QAAUkB,KAAKjB,MAAMD,OACjCkB,KAAKN,SAAS,CACZZ,MAAOiB,EAAUjB,U,oBA2CvB,WACE,MAA2BkB,KAAKjB,MAAzBkB,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,MAElB,OACE,eAAKD,UAAWE,IAAW,SAAUF,GAArC,UACE,gBAAMA,UAAU,kBAAkBG,SAAUJ,KAAKI,SAAjD,UACE,0BACE,QAACC,EAAD,CACEC,KAAK,OACLL,UAAU,eACVM,YAAaP,KAAKjB,MAAMwB,YACxBC,KAAK,QACLC,IAAKT,KAAKb,eACVuB,aAAa,MACbb,MAAOG,KAAKP,MAAMX,MAClB6B,OAAQX,KAAKY,YACbhB,SAAUI,KAAKa,cACfX,MAAOA,KAET,QAACY,EAAD,CAAkBb,UAAU,oBAAoBc,KAAK,KAAKC,MAAM,YAC/DhB,KAAKP,MAAMX,QAAUkB,KAAKjB,MAAMC,eAC/B,QAACiC,EAAD,CACEX,KAAK,SACLL,UAAU,oBACViB,SAAS,OACTC,QAASnB,KAAKoB,YACdL,KAAK,SACLM,MAAM,QAAC,IAAD,IACNC,OAAOC,OAAE,sB,GAtFDrC,iBAAlBL,E,gCAAAA,E,eACgC,CAClCC,MAAO,GACPE,aAAc,GACdQ,SAAU,eA4Fd,IAAMa,GAAc,OAAOmB,IAAP,qBAAH,UACN,SAAAC,GAAC,OAAKA,EAAEvB,MAAQuB,EAAEvB,WAAQwB,IADpB,sIASXZ,GAAmB,OAAOa,KAAP,qBAAH,yFAOhBV,GAAoB,OAAOW,KAAP,qBAAH,0FAMR,SAAAH,GAAC,OAAIA,EAAEI,MAAMC,gBANL,WAOZ,SAAAL,GAAC,OAAIA,EAAEI,MAAME,UAPD,mBAUV,SAAAN,GAAC,OAAIA,EAAEI,MAAMG,UAVH,MAcvB","file":"chunks/app_components_searchBar_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport {IconSearch} from 'app/icons';\nimport {IconClose} from 'app/icons/iconClose';\nimport {t} from 'app/locale';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport Input from 'app/views/settings/components/forms/controls/input';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state: State = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              type=\"text\"\n              className=\"search-input\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n  &.focus-visible {\n    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04), 0 0 6px rgba(177, 171, 225, 0.3);\n    border-color: #a598b2;\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n"],"sourceRoot":""}