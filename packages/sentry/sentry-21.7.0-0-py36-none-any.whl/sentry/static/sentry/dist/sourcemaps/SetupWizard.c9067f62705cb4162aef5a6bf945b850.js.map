{"version":3,"sources":["webpack:///./app/views/setupWizard/index.tsx"],"names":["SetupWizard","finished","this","pollFinished","Promise","resolve","props","api","request","hash","method","success","setTimeout","error","setState","window","close","className","t","onClick","state","style","margin","renderSuccess","renderLoading","Component","withApi"],"mappings":"skCAgBMA,E,wnBAKW,CACbC,UAAU,I,0DAGZ,WACEC,KAAKC,iB,0BAGP,WAAe,WACb,OAAO,IAAIC,SAAc,SAAAC,GACvB,EAAKC,MAAMC,IAAIC,QAAf,kBAAkC,EAAKF,MAAMG,KAA7C,KAAsD,CACpDC,OAAQ,MACRC,QAAS,WACPC,YAAW,kBAAM,EAAKT,iBAAgB,MAExCU,MAAO,WACLR,IACA,EAAKS,SAAS,CAACb,UAAU,IACzBW,YAAW,kBAAMG,OAAOC,UAAS,a,2BAMzC,WACE,OACE,eAAKC,UAAU,MAAf,WACE,wBAAKC,OAAE,qDACP,wBAAKA,OAAE,6CACP,kBAAQD,UAAU,kBAAkBE,QAAS,kBAAMJ,OAAOC,SAA1D,oC,2BAON,WACE,OACE,eAAKC,UAAU,MAAf,UACE,wBAAKC,OAAE,uC,oBAKb,WACE,IAAOjB,EAAYC,KAAKkB,MAAjBnB,SAEP,OACE,eAAKgB,UAAU,YAAf,UACE,QAAC,IAAD,CAAkBI,MAAO,CAACC,OAAQ,YAAarB,SAAUA,EAAzD,SACGA,EAAWC,KAAKqB,gBAAkBrB,KAAKsB,wB,GAvDxBC,aAApBzB,E,kCAAAA,E,eACkB,CACpBS,MAAM,IA4DV,WAAeiB,OAAQ1B","file":"chunks/SetupWizard.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {Component} from 'react';\n\nimport {Client} from 'app/api';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {t} from 'app/locale';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  api: Client;\n  hash?: boolean | string;\n};\n\ntype State = {\n  finished: boolean;\n};\n\nclass SetupWizard extends Component<Props, State> {\n  static defaultProps = {\n    hash: false,\n  };\n\n  state: State = {\n    finished: false,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.pollFinished();\n  }\n\n  pollFinished() {\n    return new Promise<void>(resolve => {\n      this.props.api.request(`/wizard/${this.props.hash}/`, {\n        method: 'GET',\n        success: () => {\n          setTimeout(() => this.pollFinished(), 1000);\n        },\n        error: () => {\n          resolve();\n          this.setState({finished: true});\n          setTimeout(() => window.close(), 10000);\n        },\n      });\n    });\n  }\n\n  renderSuccess() {\n    return (\n      <div className=\"row\">\n        <h5>{t('Return to your terminal to complete your setup')}</h5>\n        <h5>{t('(This window will close in 10 seconds)')}</h5>\n        <button className=\"btn btn-default\" onClick={() => window.close()}>\n          Close browser tab\n        </button>\n      </div>\n    );\n  }\n\n  renderLoading() {\n    return (\n      <div className=\"row\">\n        <h5>{t('Waiting for wizard to connect')}</h5>\n      </div>\n    );\n  }\n\n  render() {\n    const {finished} = this.state;\n\n    return (\n      <div className=\"container\">\n        <LoadingIndicator style={{margin: '2em auto'}} finished={finished}>\n          {finished ? this.renderSuccess() : this.renderLoading()}\n        </LoadingIndicator>\n      </div>\n    );\n  }\n}\n\nexport default withApi(SetupWizard);\n"],"sourceRoot":""}