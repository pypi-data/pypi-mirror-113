import typing

import kubernetes.client

class CertificatesV1beta1Api:
    def get_api_resources(self) -> kubernetes.client.V1APIResourceList:
        ...
    def list_certificate_signing_request(self, *, pretty: typing.Optional[str] = ..., allowWatchBookmarks: typing.Optional[bool] = ..., continue: typing.Optional[str] = ..., fieldSelector: typing.Optional[str] = ..., labelSelector: typing.Optional[str] = ..., limit: typing.Optional[int] = ..., resourceVersion: typing.Optional[str] = ..., timeoutSeconds: typing.Optional[int] = ..., watch: typing.Optional[bool] = ...) -> kubernetes.client.V1beta1CertificateSigningRequestList:
        ...
    def create_certificate_signing_request(self, body: kubernetes.client.V1beta1CertificateSigningRequest, *, pretty: typing.Optional[str] = ..., dryRun: typing.Optional[str] = ..., fieldManager: typing.Optional[str] = ...) -> kubernetes.client.V1beta1CertificateSigningRequest:
        ...
    def delete_collection_certificate_signing_request(self, *, pretty: typing.Optional[str] = ..., body: typing.Optional[kubernetes.client.V1DeleteOptions] = ..., continue: typing.Optional[str] = ..., dryRun: typing.Optional[str] = ..., fieldSelector: typing.Optional[str] = ..., gracePeriodSeconds: typing.Optional[int] = ..., labelSelector: typing.Optional[str] = ..., limit: typing.Optional[int] = ..., orphanDependents: typing.Optional[bool] = ..., propagationPolicy: typing.Optional[str] = ..., resourceVersion: typing.Optional[str] = ..., timeoutSeconds: typing.Optional[int] = ...) -> kubernetes.client.V1Status:
        ...
    def read_certificate_signing_request(self, name: str, *, pretty: typing.Optional[str] = ..., exact: typing.Optional[bool] = ..., export: typing.Optional[bool] = ...) -> kubernetes.client.V1beta1CertificateSigningRequest:
        ...
    def replace_certificate_signing_request(self, name: str, body: kubernetes.client.V1beta1CertificateSigningRequest, *, pretty: typing.Optional[str] = ..., dryRun: typing.Optional[str] = ..., fieldManager: typing.Optional[str] = ...) -> kubernetes.client.V1beta1CertificateSigningRequest:
        ...
    def delete_certificate_signing_request(self, name: str, *, pretty: typing.Optional[str] = ..., body: typing.Optional[kubernetes.client.V1DeleteOptions] = ..., dryRun: typing.Optional[str] = ..., gracePeriodSeconds: typing.Optional[int] = ..., orphanDependents: typing.Optional[bool] = ..., propagationPolicy: typing.Optional[str] = ...) -> kubernetes.client.V1Status:
        ...
    def patch_certificate_signing_request(self, name: str, body: typing.Any, *, pretty: typing.Optional[str] = ..., dryRun: typing.Optional[str] = ..., fieldManager: typing.Optional[str] = ..., force: typing.Optional[bool] = ...) -> kubernetes.client.V1beta1CertificateSigningRequest:
        ...
    def replace_certificate_signing_request_approval(self, name: str, body: kubernetes.client.V1beta1CertificateSigningRequest, *, dryRun: typing.Optional[str] = ..., fieldManager: typing.Optional[str] = ..., pretty: typing.Optional[str] = ...) -> kubernetes.client.V1beta1CertificateSigningRequest:
        ...
    def read_certificate_signing_request_status(self, name: str, *, pretty: typing.Optional[str] = ...) -> kubernetes.client.V1beta1CertificateSigningRequest:
        ...
    def replace_certificate_signing_request_status(self, name: str, body: kubernetes.client.V1beta1CertificateSigningRequest, *, pretty: typing.Optional[str] = ..., dryRun: typing.Optional[str] = ..., fieldManager: typing.Optional[str] = ...) -> kubernetes.client.V1beta1CertificateSigningRequest:
        ...
    def patch_certificate_signing_request_status(self, name: str, body: typing.Any, *, pretty: typing.Optional[str] = ..., dryRun: typing.Optional[str] = ..., fieldManager: typing.Optional[str] = ..., force: typing.Optional[bool] = ...) -> kubernetes.client.V1beta1CertificateSigningRequest:
        ...
