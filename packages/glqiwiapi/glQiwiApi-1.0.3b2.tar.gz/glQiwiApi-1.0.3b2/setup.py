# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['glQiwiApi',
 'glQiwiApi.core',
 'glQiwiApi.core.builtin',
 'glQiwiApi.core.web_hooks',
 'glQiwiApi.ext',
 'glQiwiApi.qiwi',
 'glQiwiApi.types',
 'glQiwiApi.types.qiwi_types',
 'glQiwiApi.types.yoomoney_types',
 'glQiwiApi.utils',
 'glQiwiApi.yoo_money']

package_data = \
{'': ['*']}

install_requires = \
['aiofiles>=0.6.0,<0.7.0',
 'aiohttp>=3.7.4.post0,<4.0.0',
 'loguru>=0.5.3,<0.6.0',
 'pydantic==1.8.2',
 'pytz==2021.1',
 'wheel>=0.36.2,<0.37.0']

extras_require = \
{':python_version < "3.7"': ['contextvars>=2.4,<3.0']}

setup_kwargs = {
    'name': 'glqiwiapi',
    'version': '1.0.3b2',
    'description': "The fast and lightweight wrapper of QIWI and YooMoney API's",
    'long_description': '<h2 align="center">\n<img src="https://github.com/GLEF1X/glQiwiApi/blob/master/docs/static/logo.png" width="200"></img>\n\n\n[![PyPI version](https://img.shields.io/pypi/v/glQiwiApi.svg)](https://pypi.org/project/glQiwiApi/) [![Python](https://img.shields.io/badge/Python-3.7+-blue)](https://www.python.org/downloads/) [![Code Quality Score](https://www.code-inspector.com/project/20780/score/svg)](https://frontend.code-inspector.com/public/project/20780/glQiwiApi/dashboard) ![Code Grade](https://www.code-inspector.com/project/20780/status/svg) ![Downloads](https://img.shields.io/pypi/dm/glQiwiApi) ![docs](https://readthedocs.org/projects/pip/badge/?version=latest)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/GLEF1X/glQiwiApi.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/GLEF1X/glQiwiApi/context:python) [![CodeFactor](https://www.codefactor.io/repository/github/glef1x/glqiwiapi/badge)](https://www.codefactor.io/repository/github/glef1x/glqiwiapi)\n![codecov](https://codecov.io/gh/GLEF1X/glQiwiApi/branch/dev-1.x/graph/badge.svg?token=OD538HKV15)\n![CI](https://github.com/GLEF1X/glQiwiApi/actions/workflows/python-package.yml/badge.svg)\n\n<img src="https://github.com/GLEF1X/glQiwiApi/blob/master/demo.gif"/>\n</h2>\n\n## üåéOfficial api resources:\n\n* üéì __Docs: [here](https://glqiwiapi.readthedocs.io/en/master/index.html)__\n* üñ±Ô∏è __Developer\n  contacts: [![Dev-Telegram](https://img.shields.io/badge/Telegram-blue.svg?style=flat-square&logo=telegram)](https://t.me/GLEF1X)__\n\n### üì£Why glQiwiApi?\n\n* :boom:__It\'s working faster than other async libraries for qiwi__\n* :dizzy:__Frequent updates and edits__\n* :innocent: __The library developer will always help you with any problems you\n  might encounter__\n\n### üíæInstallation\n\n```bash\npip install glQiwiApi\n```\n\n---\n\n## üê¶Dependencies\n\n| Library | Description                                    |\n|:-------:|:----------------------------------------------:|\n|aiohttp  | default http server                            |\n|aiofiles | saving receipts in pdf                         |\n|uvloop   | Optional(can boost API), but work only on Linux|\n|pydantic | Json data validator. Very fast instead of custom|\n|loguru   | library which aims to bring enjoyable logging in Python|\n\n---\n\n## üß∏Dive-in Examples\n\n```python\nimport asyncio\n\nfrom glQiwiApi import QiwiWrapper\n\n\nasync def main():\n    # If you want to use qiwi wrapper without async context just \n    # pass on "without_context=True"\n    wallet = QiwiWrapper(\n        api_access_token=\'your_token\',\n        phone_number=\'+number\',\n        without_context=True\n    )\n    print((await wallet.get_balance()).amount)\n    # OR(x3 performance boost with async context,\n    # because it use only 1 aiohttp session to get response for all requests\n    # in async with context manager)\n    async with QiwiWrapper(api_access_token=\'your_token\') as w:\n        w.phone_number = \'+number\'\n        # –î–∞–Ω–Ω—ã–º –≤—ã–∑–æ–≤–æ–º –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞. \n        print((await w.get_balance()).amount)\n\n\n# Also you can use it like here\nmy_wallet = QiwiWrapper(\n    api_access_token=\'your_token\',\n    phone_number=\'+phone_number\'\n)\n\n\nasync def main_2():\n    async with my_wallet as w:\n        print(await w.get_balance())\n\n\nasyncio.run(main())\n```\n\n---\n\n## üåÄChecking transactions\n\n```python\nimport asyncio\n\nfrom glQiwiApi import QiwiWrapper\n\n\nasync def main():\n    async with QiwiWrapper(api_access_token=\'your_token\') as w:\n        w.phone_number = \'+number\'\n        # –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º—ã –ø—Ä–æ–≤–µ—Ä–∏–º, –±—ã–ª–∞ –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞ —Å—É–º–º—É 999 —Ä—É–±–ª–µ–π —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º\n        # \'I like glQiwiApi!\' –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–º —Å –Ω–æ–º–µ—Ä–æ–º +7904832168\n        is_paid = await w.check_transaction(\n            amount=999,\n            comment=\'I like glQiwiApi!\',\n            sender_number=\'+7904832168\'\n        )\n        print(is_paid)\n\n\nasyncio.run(main())\n```\n\n## üå±Create & check p2p bills\n\n```python\nimport asyncio\n\nfrom glQiwiApi import QiwiWrapper\n\n\nasync def main():\n  # You can pass on only p2p tokens, if you want to use only p2p api\n  async with QiwiWrapper(\n          secret_p2p="your_secret_p2p"\n  ) as w:\n    # –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å p2p —Å—á–µ—Ç\n    # –í –ø—Ä–∏–º–µ—Ä–µ —É–∫–∞–∑–∞–Ω —Å—á—ë—Ç –Ω–∞ 1 —Ä—É–±–ª—å —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º some_comment\n    bill = await w.create_p2p_bill(\n      amount=1,\n      comment=\'my_comm\'\n    )\n    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å "–æ–ø–ª–∞—á–µ–Ω–æ" —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ p2p —Å—á—ë—Ç–∞\n    if (await w.check_p2p_bill_status(bill_id=bill.bill_id)) == \'PAID\':\n      print(\'–£—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–æ\')\n    else:\n      print(\'–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\')\n    # –ò–ª–∏, –Ω–∞—á–∏–Ω–∞—è —Å –≤–µ—Ä—Å–∏–∏ –∞–ø–∏ 0.2.0\n    print(await bill.paid)  # This will print you bool answer\n\n\nasyncio.run(main())\n```\n\n#### That will create a form like that\n\n![form](https://i.ibb.co/T0C5RYz/2021-03-21-14-58-33.png)\n\n## ‚õèSend to another wallet & get receipt(–ø–æ–ª—É—á–µ–Ω–∏–µ —á–µ–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)\n\n```python\nimport asyncio\n\nfrom glQiwiApi import QiwiWrapper\n\n\nasync def main():\n    async with QiwiWrapper(api_access_token="token") as w:\n        w.phone_number = "+number"\n        # –¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –¥—Ä—É–≥–æ–π –∫–∏–≤–∏ –∫–æ—à–µ–ª–µ–∫\n        # –≤ –ø—Ä–∏–º–µ—Ä–µ –ø–µ—Ä–µ–≤–æ–¥ –±—É–¥–µ—Ç –Ω–∞ –Ω–æ–º–µ—Ä +7904832168 —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º "–ù–∞ —à–æ–∫–æ–ª–∞–¥–∫—É" –∏ —Å—É–º–º–æ–π 1 —Ä—É–±–ª—å\n        trans_id = await w.to_wallet(\n            to_number=\'+7904832168\',\n            comment=\'–ù–∞ —à–æ–∫–æ–ª–∞–¥–∫—É\',\n            trans_sum=1\n        )\n        # –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã —Å–æ—Ö—Ä–∞–Ω–∏–º —á–µ–∫ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∫–∞–∫ my_receipt.pdf\n        await w.get_receipt(\n            transaction_id=trans_id,\n            transaction_type=\'OUT\',\n            file_path=\'my_receipt\'\n        )\n\n\nasyncio.run(main())\n\n```\n\n## üåüWebhooks & handlers\n\n```python\n\nfrom glQiwiApi import QiwiWrapper, types\nfrom glQiwiApi.utils import executor\n\nwallet = QiwiWrapper(\n    api_access_token=\'token from https://qiwi.com/api/\',\n    secret_p2p=\'secret token from https://qiwi.com/p2p-admin/\'\n)\n\n\n@wallet.transaction_handler(lambda event: ...)\nasync def get_transaction(event: types.WebHook):\n    print(event)\n\n\n@wallet.bill_handler()\nasync def fetch_bill(notification: types.Notification):\n    print(notification)\n\n    \nexecutor.start_webhook(wallet, port=80)\n```\n\n## üßëüèªüî¨Polling updates\n\n```python\nimport datetime\n\nfrom glQiwiApi import QiwiWrapper, types\nfrom glQiwiApi.utils import executor\n\napi_access_token = "your token"\nphone_number = "your number"\n\nwallet = QiwiWrapper(\n    api_access_token=api_access_token,\n    phone_number=phone_number\n)\n\n\n@wallet.transaction_handler()\nasync def my_first_handler(update: types.Transaction):\n    assert isinstance(update, types.Transaction)\n\n\ndef on_startup(wrapper: QiwiWrapper):\n    wrapper.dp.logger.info("This message logged on startup")\n\n\nexecutor.start_polling(\n    wallet,\n    on_startup=on_startup\n)\n```\n\n## üí≥Send to card & check commission\n\n```python\nimport asyncio\n\nfrom glQiwiApi import QiwiWrapper\n\n\nasync def main():\n    async with QiwiWrapper(api_access_token="token") as w:\n        w.phone_number = "+number"\n        # –¢–∞–∫ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –∫–∞—Ä—Ç—ã —Ä–∞–∑–Ω—ã—Ö –±–∞–Ω–∫–æ–≤, –ø–æ–ª—É—á–∞—è –ø—Ä–∏ —ç—Ç–æ–º –∞–π–¥–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\n        trans_id = await w.to_card(\n            trans_sum=1,\n            to_card=\'4890494756089082\'\n        )\n        print(trans_id)\n        # –¢–∞–∫ –º–æ–∂–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—á–∏—Ç–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é\n        commission = await w.commission(\n            to_account=\'4890494756089082\',\n            pay_sum=1\n        )\n        print(commission.qiwi_commission.amount)\n\n\nasyncio.run(main())\n\n```\n\n## üöÄQuery caching (beta)\n\n```python\nimport asyncio\n\nfrom glQiwiApi import QiwiWrapper\n\n# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫–ª—é—á–µ–Ω–æ, —Ç–∞–∫ –∫–∞–∫\n# —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—Å–µ –µ—â—ë –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –±–µ—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏\n# –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ DEFAULT_CACHE_TIME = 0, —á—Ç–æ–±—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∏ –≤–∫–ª—é—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ\n# –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å cache_time –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ QiwiWrapper\n# –∏–ª–∏ YooMoneyAPI\nwallet = QiwiWrapper(\n    # –¢–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Å https://qiwi.com/api\n    api_access_token=\'token\',\n    # –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Å "+"\n    phone_number=\'+phone_number\',\n    # –í—Ä–µ–º—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö(–ø–æ–∫–∞ –µ—â—ë –≤ –±–µ—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏)\n    cache_time=5\n)\n\n\nasync def cache_test():\n    async with wallet:\n        # –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–Ω–æ—Å–∏—Ç—å—Å—è –≤ –∫—ç—à\n        print(await wallet.transactions(rows_num=50))\n        # –≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –≤–æ–∑—å–º–µ—Ç—Å—è –∏–∑ –∫—ç—à–∞\n        print(await wallet.transactions(rows_num=50))\n\n        # –ó–∞–ø—Ä–æ—Å—ã –Ω–∏–∂–µ –Ω–µ –±—É–¥—É—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ –∫—ç—à–∞,\n        # –ø—Ä–∏—á–∏–Ω–æ–π —Ç–æ–º—É –µ—Å—Ç—å —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–ø—Ä–æ—Å–∞\n        # –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ —Ç–∞–∫–∂–µ –∑–∞–Ω–æ—Å–∏—Ç—å—Å—è –≤ –∫—ç—à\n        print(len(await wallet.transactions(rows_num=30)) == 30)  # True\n        # –û–¥–Ω–∞–∫–æ, –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –∞–ø–∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω, –ø–æ—Å–∫–æ–ª—å–∫—É\n        # –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤–∑—è—Ç–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–∑ –∫—ç—à–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç\n        # –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, —Ç–æ\n        # –∫—ç—à –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è\n        # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –∞–ø–∏\n        print(len(await wallet.transactions(rows_num=10)) == 10)  # True\n\n\nasyncio.run(cache_test())\n\n\n```\n\n## ‚ö†Ô∏èHandling exceptions\n\n```python\nimport asyncio\n\nfrom glQiwiApi import QiwiWrapper, RequestError\n\n\nasync def main():\n    async with QiwiWrapper(api_access_token=\'your_token\') as w:\n        w.phone_number = \'+number\'\n        try:\n            await w.to_card(to_card="some_card", trans_sum=2)\n        except RequestError as ex:\n            # Its give u full traceback from api if response was bad\n            print(ex.json())\n\n\nasyncio.run(main())\n```\n\n---\n\n## üó∫QIWI terminals\n\n__glQiwiApi covers qiwi\'s MAPS api in QiwiMaps class__\n\n---\n\n# YooMoney API\n\n## Important. How to get YooMoney access token\n\n+ #### –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–≤–æ—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ YooMoney –ø–æ —Å—Å—ã–ª–∫–µ: [click](https://yoomoney.ru/myservices/new)\n\n![yoo_money_register_app](https://i.imgur.com/Mu6R8Po.png)\n\n+ #### –ü–æ–ª—É—á–∞–µ–º client_id –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–∞–ª–µ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ YooMoneyAPI:\n\n```python\nimport asyncio\n\nfrom glQiwiApi import YooMoneyAPI\n\n\nasync def get_url_to_auth() -> None:\n    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ –Ω–µ–π, –µ—Å–ª–∏ –ø–æ–ª—É—á–∞–µ–º invalid_request –∏–ª–∏ –∫–∞–∫—É—é-—Ç–æ –æ—à–∏–±–∫—É\n    # –∑–Ω–∞—á–∏—Ç –ª–∏–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω scope –ø–∞—Ä–∞–º–µ—Ç—Ä, –Ω—É–∂–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤ –∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n    print(await YooMoneyAPI.build_url_for_auth(\n        # –î–ª—è –ø–ª–∞—Ç–µ–∂–µ–π, –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π, –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å scope=["account-info", "operation-history", "operation-details", "payment-p2p"]\n        scope=["account-info", "operation-history"],\n        client_id=\'–∞–π–¥–∏, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã—à–µ\',\n        redirect_uri=\'—Å—Å—ã–ª–∫–∞, —É–∫–∞–∑–∞–Ω–∞—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã—à–µ –≤ –ø–æ–ª–µ Redirect URI\'\n    ))\n\n\nasyncio.run(get_url_to_auth())\n```\n\n+ #### –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–¥ –∏ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ë–´–°–¢–†–û –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—è class method YooMoneyAPI:\n\n![reg](https://i2.paste.pics/7660ed1444d1b3fc74b08128c74dbcd4.png?trs=9bfa3b1c0203c2ffe9982e7813a27700d047bfbc7ed23b79b99c1c4ffdd34995)\n\n```python\nimport asyncio\n\nfrom glQiwiApi import YooMoneyAPI\n\n\nasync def get_token() -> None:\n    print(await YooMoneyAPI.get_access_token(\n        code=\'–∫–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–∑ —Å—Å—ã–ª–∫–∏, –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω–µ –≤—ã—à–µ\',\n        client_id=\'–∞–π–¥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–æ–ª—É—á–µ–Ω–æ–µ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\',\n        redirect_uri=\'—Å—Å—ã–ª–∫–∞, —É–∫–∞–∑–∞–Ω–Ω–∞—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\'\n    ))\n\n\nasyncio.run(get_token())\n```\n\n---\n\n## Dive-in Examples\n\n```python\nimport asyncio\n\nfrom glQiwiApi import YooMoneyAPI\n\nTOKEN = \'some_token\'\n\n\nasync def main():\n    wallet = YooMoneyAPI(\n        api_access_token=TOKEN,\n        without_context=True\n    )\n    transactions = await wallet.transactions()\n    print(transactions)\n    # OR(x3 performance boost)\n    async with YooMoneyAPI(api_access_token=TOKEN) as w:\n        print(await w.transactions(records=50))\n\n\nasyncio.run(main())\n```\n\n## Send money to another wallet and checking this transaction\n\n```python\n\nimport asyncio\n\nfrom glQiwiApi import YooMoneyAPI\n\nTOKEN = \'your_token\'\n\n\nasync def main():\n    w = YooMoneyAPI(TOKEN)\n    async with w:\n        # –¢–∞–∫ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–æ—Å–ª–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –¥—Ä—É–≥–æ–π —Å—á–µ—Ç, –≤ –ø—Ä–∏–º–µ—Ä–µ —ç—Ç–æ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç 4100116602400968\n        # –Ω–∞ —Å—É–º–º—É 2 —Ä—É–±–ª—è —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º "I LOVE glQiwiApi"\n        payment = await w.send(\n            to_account=\'4100116602400968\',\n            comment=\'I LOVE glQiwiApi\',\n            amount=2\n        )\n        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Ç–∞–∫ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é, –ø–æ—Å—Ç—É–ø–∏–ª–∞ –ª–∏ –æ–Ω–∞ —á–µ–ª–æ–≤–µ–∫—É –Ω–∞ —Å—á—ë—Ç\n        print(await w.check_transaction(amount=2, comment=\'I LOVE glQiwiApi\',\n                                        transaction_type=\'out\'))\n\n\nasyncio.run(main())\n\n```\n\n## Fetch account info\n\n```python\nimport asyncio\n\nfrom glQiwiApi import YooMoneyAPI\n\nTOKEN = \'your_token\'\n\n\nasync def main():\n    w = YooMoneyAPI(TOKEN)\n    async with w:\n        # –¢–∞–∫ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ AccountInfo\n        account_info = await w.account_info\n        print(account_info.account_status)\n        print(account_info.balance)\n\n\nasyncio.run(main())\n\n```\n',
    'author': 'Gleb Garanin',
    'author_email': 'glebgar567@gmail.com',
    'maintainer': 'GLEF1X',
    'maintainer_email': 'glebgar567@gmail.com',
    'url': 'https://github.com/GLEF1X/glQiwiApi',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'extras_require': extras_require,
    'python_requires': '>=3.7,<4.0',
}


setup(**setup_kwargs)
