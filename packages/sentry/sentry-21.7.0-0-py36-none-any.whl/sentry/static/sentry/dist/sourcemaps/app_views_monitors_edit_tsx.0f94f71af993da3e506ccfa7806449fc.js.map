{"version":3,"sources":["webpack:///./app/views/monitors/edit.tsx"],"names":["EditMonitor","data","setState","state","monitor","browserHistory","props","params","orgId","id","this","monitorId","name","Fragment","apiMethod","apiEndpoint","onSubmitSuccess","AsyncView"],"mappings":"miEAeqBA,E,4nBAMR,SAACC,GAAD,OACT,EAAKC,UAAS,SAAAC,GAAK,MAAK,CAACC,QAAS,EAAF,KAAMD,EAAMC,SAAYH,W,qCAExC,SAACA,GAAD,OAChBI,sBAAA,yBAAsC,EAAKC,MAAMC,OAAOC,MAAxD,qBAA0EP,EAAKQ,GAA/E,S,6CATF,WACE,IAAOF,EAAUG,KAAKJ,MAAfC,OACP,MAAO,CAAC,CAAC,UAAD,oBAAyBA,EAAOI,UAAhC,S,sBASV,WACE,OAAID,KAAKP,MAAMC,QACb,UAAUM,KAAKP,MAAMC,QAAQQ,KAA7B,yBAAkDF,KAAKJ,MAAMC,OAAOC,OAEtE,qBAAqBE,KAAKJ,MAAMC,OAAOC,S,wBAGzC,WACE,IAAOJ,EAAWM,KAAKP,MAAhBC,QAEP,OAAgB,OAAZA,EACK,MAIP,QAAC,EAAAS,SAAD,YACE,yCAEA,QAAC,IAAD,CACET,QAASA,EACTU,UAAU,MACVC,YAAW,oBAAeX,EAAQK,GAAvB,KACXO,gBAAiBN,KAAKM,yB,GAlCSC","file":"chunks/app_views_monitors_edit_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport AsyncView from 'app/views/asyncView';\n\nimport MonitorForm from './monitorForm';\nimport {Monitor} from './types';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string; monitorId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  monitor: Monitor | null;\n};\n\nexport default class EditMonitor extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n    return [['monitor', `/monitors/${params.monitorId}/`]];\n  }\n\n  onUpdate = (data: Monitor) =>\n    this.setState(state => ({monitor: {...state.monitor, ...data}}));\n\n  onSubmitSuccess = (data: Monitor) =>\n    browserHistory.push(`/organizations/${this.props.params.orgId}/monitors/${data.id}/`);\n\n  getTitle() {\n    if (this.state.monitor) {\n      return `${this.state.monitor.name} - Monitors - ${this.props.params.orgId}`;\n    }\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  renderBody() {\n    const {monitor} = this.state;\n\n    if (monitor === null) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <h1>Edit Monitor</h1>\n\n        <MonitorForm\n          monitor={monitor}\n          apiMethod=\"PUT\"\n          apiEndpoint={`/monitors/${monitor.id}/`}\n          onSubmitSuccess={this.onSubmitSuccess}\n        />\n      </Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}