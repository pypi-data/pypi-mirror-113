{"version":3,"sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/utils/isActiveSuperuser.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectProguard/projectProguardRow.tsx","webpack:///./app/views/settings/projectProguard/projectProguard.tsx","webpack:///./app/views/settings/projectProguard/index.tsx"],"names":["Role","user","ConfigStore","this","props","organization","role","availableRoles","currentRole","isActiveSuperuser","Array","isArray","roleIds","map","r","id","includes","requiredIndex","indexOf","children","hasRole","isRenderFunc","React","withOrganization","FileSize","className","bytes","getDynamicText","value","formatBytesBase2","fixed","isSuperuser","Cookies","undefined","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","getTitle","renderComponent","AsyncComponent","ProjectProguardRow","mapping","onDelete","downloadUrl","downloadRole","debugId","uuid","size","dateCreated","handleDeleteClick","Fragment","NameColumn","Name","t","TimeWrapper","date","SizeColumn","ActionsColumn","gap","disabled","icon","href","access","hasAccess","message","onConfirm","label","space","p","theme","fontSizeMedium","subText","ProjectProguard","params","orgId","projectId","setState","loading","api","request","encodeURIComponent","method","complete","fetchData","query","location","router","push","cursor","routeTitleGen","mappings","file_formats","getQuery","renderBody","state","length","baseUrl","handleDelete","debugFilesRole","mappingsPageLinks","action","placeholder","onSearch","handleSearch","width","tct","link","StyledPanelTable","headers","emptyMessage","getEmptyMessage","isEmpty","isLoading","renderMappings","pageLinks","PanelTable","ProjectProguardContainer","Component"],"mappings":"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","file":"chunks/app_views_settings_projectProguard_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\n\nimport ConfigStore from 'app/stores/configStore';\nimport {Organization} from 'app/types';\nimport {isActiveSuperuser} from 'app/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactNode;\n\ntype Props = {\n  /**\n   * Minimum required role\n   */\n  role: string;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactNode | ChildrenRenderFn;\n};\n\nclass Role extends React.Component<Props> {\n  hasRole() {\n    const user = ConfigStore.get('user');\n    const {organization, role} = this.props;\n    const {availableRoles} = organization;\n    const currentRole = organization.role ?? '';\n\n    if (!user) {\n      return false;\n    }\n\n    if (isActiveSuperuser()) {\n      return true;\n    }\n\n    if (!Array.isArray(availableRoles)) {\n      return false;\n    }\n\n    const roleIds = availableRoles.map(r => r.id);\n\n    if (!roleIds.includes(role) || !roleIds.includes(currentRole)) {\n      return false;\n    }\n\n    const requiredIndex = roleIds.indexOf(role);\n    const currentIndex = roleIds.indexOf(currentRole);\n    return currentIndex >= requiredIndex;\n  }\n\n  render() {\n    const {children} = this.props;\n    const hasRole = this.hasRole();\n\n    if (isRenderFunc<ChildrenRenderFn>(children)) {\n      return children({hasRole});\n    }\n\n    return hasRole && children ? children : null;\n  }\n}\n\nexport default withOrganization(Role);\n","import {formatBytesBase2} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n  bytes: number;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <span className={className}>\n      {getDynamicText({value: formatBytesBase2(bytes), fixed: 'xx KB'})}\n    </span>\n  );\n}\n\nexport default FileSize;\n","import Cookies from 'js-cookie';\n\nimport ConfigStore from 'app/stores/configStore';\n\nconst SUPERUSER_COOKIE_NAME = 'su';\n\n/**\n * Checking for just isSuperuser on a config object may not be enough as backend often checks for *active* superuser.\n * We therefore check both isSuperuser flag AND superuser session cookie.\n */\nexport function isActiveSuperuser() {\n  const {isSuperuser} = ConfigStore.get('user') || {};\n\n  if (isSuperuser) {\n    /**\n     * Superuser cookie cannot be checked for existence as it is HttpOnly.\n     * As a workaround, we try to change it to something else and if that fails we can assume that it's being present.\n     * There may be an edgecase where it's present and expired but for current usage it's not a big deal.\n     */\n    Cookies.set(SUPERUSER_COOKIE_NAME, 'test');\n\n    if (Cookies.get(SUPERUSER_COOKIE_NAME) === undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Role from 'app/components/acl/role';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport Confirm from 'app/components/confirm';\nimport FileSize from 'app/components/fileSize';\nimport TimeSince from 'app/components/timeSince';\nimport Tooltip from 'app/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {DebugFile} from 'app/types/debugFiles';\n\ntype Props = {\n  mapping: DebugFile;\n  onDelete: (id: string) => void;\n  downloadUrl: string;\n  downloadRole: string;\n};\n\nconst ProjectProguardRow = ({mapping, onDelete, downloadUrl, downloadRole}: Props) => {\n  const {id, debugId, uuid, size, dateCreated} = mapping;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{debugId || uuid || `(${t('empty')})`}</Name>\n        <TimeWrapper>\n          <IconClock size=\"sm\" />\n          <TimeSince date={dateCreated} />\n        </TimeWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={t('You do not have permission to download mappings.')}\n                disabled={hasRole}\n              >\n                <Button\n                  size=\"small\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Mapping') : undefined}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete mappings.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this mapping?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"small\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Mapping') : undefined}\n                    label={t('Remove Mapping')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n};\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  margin-top: ${space(1)};\n`;\n\nexport default ProjectProguardRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Pagination from 'app/components/pagination';\nimport {PanelTable} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport {t, tct} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport {DebugFile} from 'app/types/debugFiles';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nimport ProjectProguardRow from './projectProguardRow';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  mappings: DebugFile[];\n};\n\nclass ProjectProguard extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('ProGuard Mappings'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      mappings: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params, location} = this.props;\n    const {orgId, projectId} = params;\n\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      [\n        'mappings',\n        `/projects/${orgId}/${projectId}/files/dsyms/`,\n        {query: {query: location.query.query, file_formats: 'proguard'}},\n      ],\n    ];\n\n    return endpoints;\n  }\n\n  handleDelete = (id: string) => {\n    const {orgId, projectId} = this.props.params;\n\n    this.setState({\n      loading: true,\n    });\n\n    this.api.request(\n      `/projects/${orgId}/${projectId}/files/dsyms/?id=${encodeURIComponent(id)}`,\n      {\n        method: 'DELETE',\n        complete: () => this.fetchData(),\n      }\n    );\n  };\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no mappings that match your search.');\n    }\n\n    return t('There are no mappings for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMappings() {\n    const {mappings} = this.state;\n    const {organization, params} = this.props;\n    const {orgId, projectId} = params;\n\n    if (!mappings?.length) {\n      return null;\n    }\n\n    return mappings.map(mapping => {\n      const downloadUrl = `${\n        this.api.baseUrl\n      }/projects/${orgId}/${projectId}/files/dsyms/?id=${encodeURIComponent(mapping.id)}`;\n\n      return (\n        <ProjectProguardRow\n          mapping={mapping}\n          downloadUrl={downloadUrl}\n          onDelete={this.handleDelete}\n          downloadRole={organization.debugFilesRole}\n          key={mapping.id}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, mappings, mappingsPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('ProGuard Mappings')}\n          action={\n            <SearchBar\n              placeholder={t('Filter mappings')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n              width=\"280px\"\n            />\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `ProGuard mapping files are used to convert minified classes, methods and field names into a human readable format. To learn more about proguard mapping files, [link: read the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/android/proguard/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <StyledPanelTable\n          headers={[\n            t('Mapping'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={mappings?.length === 0}\n          isLoading={loading}\n        >\n          {this.renderMappings()}\n        </StyledPanelTable>\n        <Pagination pageLinks={mappingsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectProguard;\n","import {Component} from 'react';\n\nimport withOrganization from 'app/utils/withOrganization';\n\nimport ProjectProguard from './projectProguard';\n\nclass ProjectProguardContainer extends Component<ProjectProguard['props']> {\n  render() {\n    return <ProjectProguard {...this.props} />;\n  }\n}\n\nexport default withOrganization(ProjectProguardContainer);\n"],"sourceRoot":""}