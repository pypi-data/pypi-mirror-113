{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectPerformance/projectPerformance.tsx","webpack:///./app/views/settings/projectPerformance/index.tsx","webpack:///../node_modules/core-js/internals/date-to-primitive.js","webpack:///../node_modules/core-js/modules/es.date.to-primitive.js","webpack:///../node_modules/core-js/modules/es.symbol.to-primitive.js"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","FormPanel","props","fields","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","id","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","highlighted","name","React","JsonForm","location","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","state","formGroup","i","renderForm","withRouter","PermissionAlert","hasAccess","type","icon","size","t","ProjectPerformance","params","orgId","projectId","organization","loading","api","request","method","success","trackAnalyticsEvent","eventKey","eventName","organization_id","complete","fetchData","routeTitleGen","LoadingIndicatorContainer","label","choices","help","tct","link","href","placeholder","link1","link2","threshold","metric","project","endpoint","slug","saveOnBlur","allowUndo","initialData","apiMethod","apiEndpoint","onSubmitSuccess","resp","initial","changedThreshold","from","to","key","formFields","Actions","onClick","handleDelete","PanelItem","ProjectPerformanceContainer","withOrganization","anObject","toPrimitive","module","exports","hint","TypeError","createNonEnumerableProperty","dateToPrimitive","TO_PRIMITIVE","wellKnownSymbol","DatePrototype","Date","prototype","defineWellKnownSymbol"],"mappings":"4QAYA,IAZA,SACEA,EACAC,GAGQ,IAFRC,IAEQ,yDADRC,EACQ,uCACFC,EAAW,GAAH,OAAMJ,EAAN,cAAqBC,GAC7BI,EAAOF,EAAc,GAAH,OAAMC,EAAN,cAAoBD,GAAgBC,EAE5D,OAAOF,EAAa,GAAH,OAAMG,EAAN,aAAwBA,I,muBCDtBC,E,0iBAInB,WACE,MAAO,K,oBAGT,WACE,IAAMC,EAAQC,KAAKC,WACnB,OACE,QAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,UAApB,SACGC,KAAKE,wB,GATJC,KAHWL,E,8nECwCAM,E,wiBAKnB,WAAS,WACP,EASIJ,KAAKK,MARPN,EADF,EACEA,MACAO,EAFF,EAEEA,OACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,qBACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,aACGC,GARL,YAWA,OACE,QAAC,KAAD,CAAOC,GAAqB,iBAAVd,GAAqBe,OAAsBf,QAASgB,EAAtE,UACGhB,IAAS,QAAC,KAAD,UAAcA,KACxB,QAAC,IAAD,WAC2B,mBAAjBY,GAA+BA,EAAa,CAACZ,QAAOO,WAE3DA,EAAOU,KAAI,SAAAC,GACV,GAAqB,mBAAVA,EACT,OAAOA,IAG8CA,EAAhDC,aAAP,IAA2BC,GAA3B,OAAuDF,EAAvD,GASA,OALiB,IAAbT,IACFW,EAAyBX,UAAW,EACpCW,EAAyBC,oBAAiBL,IAI1C,QAAC,IAAD,OACER,OAAQA,EACRC,SAAUA,GAENI,GACAH,GALN,IAMEQ,MAAOE,EACPE,YAAa,EAAKhB,MAAMgB,cAAX,WAA+BJ,EAAMK,QAJ7CL,EAAMK,SAQQ,mBAAjBZ,GAA+BA,EAAa,CAACX,QAAOO,qB,GAjD/BiB,aAAlBnB,E,gCAAAA,E,eACiB,CAClCK,qBAAsB,M,2zECfpBe,E,0nBACW,CAEbH,YAAW,UAAE,EAAKhB,MAAMoB,gBAAb,aAAE,EAAqBC,O,kDAGpC,WACE1B,KAAK2B,iB,8CAGP,SAAiCC,GAC/B,GAAI5B,KAAKK,MAAMoB,SAASC,OAASE,EAAUH,SAASC,KAAM,CACxD,IAAMA,EAAOE,EAAUH,SAASC,KAChC1B,KAAK2B,aAAaD,GAClB1B,KAAK6B,SAAS,CAACR,YAAaK,O,0BAIhC,SAAaI,GAAuB,MAE5BJ,EAAOI,IAAM,UAAI9B,KAAKK,MAAMoB,gBAAf,aAAI,EAAqBC,MAE5C,GAAKA,EAOL,IACEK,KAAgBjB,OAAsBkB,mBAAmBN,IAAQ,CAC/DO,MAAO,SACPC,QAAS,MAEX,MAAOC,GACPC,KAAwBD,M,+BAI5B,SAAkB7B,GAChB,IAAM+B,EAAwB/B,EAAOgC,QACnC,SAAArB,GAAK,MAAqB,mBAAVA,IAAwBsB,QAAQtB,aAAD,EAACA,EAAOuB,YAGzD,GAAIlC,EAAOmC,SAAWJ,EAAsBI,OAAQ,CAClD,MAAyCzC,KAAKK,MAAvCI,EAAP,EAAOA,qBAAyBJ,GAAhC,YASA,OAP2BgC,EAAsBK,OAAM,SAAAzB,GACrD,MAA6B,mBAAlBA,EAAMuB,SACPvB,EAAMuB,QAAN,OAAkBnC,GAAUI,KAE9BQ,EAAMuB,WAMlB,OAAO,I,wBAGT,YAiBG,IAhBDlC,EAgBC,EAhBDA,OACAqC,EAeC,EAfDA,eACA5C,EAcC,EAdDA,MAiBA,OAF0BC,KAAK4C,kBAAkBtC,IAI9CqC,WAAgBjC,cAChBiC,WAAgBhC,cAKZ,QAAC,IAAD,GAAWZ,MAAOA,EAAOO,OAAQA,GAAYqC,IAH3C,O,oBAMX,WAAS,WACP,EAYI3C,KAAKK,MAXPE,EADF,EACEA,OACAD,EAFF,EAEEA,OACAP,EAHF,EAGEA,MACA8C,EAJF,EAIEA,MACArC,EALF,EAKEA,SACAsC,EANF,EAMEA,SACArC,EAPF,EAOEA,qBACAC,EARF,EAQEA,aACAC,EATF,EASEA,aAEGC,GAXL,EAUEa,UAVF,aAcMkB,EAAiB,CACrBpC,SACAC,WACAsC,WACArC,uBACAC,eACAC,eACAU,YAAarB,KAAK+C,MAAM1B,aAG1B,OACE,qBAAST,GAAT,mBACoB,IAAViC,GACNA,EAAM7B,KAAI,SAACgC,EAAWC,GAAZ,OACR,QAAC,WAAD,UACG,EAAKC,WAAL,GAAiBP,kBAAmBK,KADlBC,WAIP,IAAVJ,QACY,IAAXvC,GACPN,KAAKkD,WAAW,CAAC5C,SAAQqC,iBAAgB5C,kB,GA9H5BwB,aAAjBC,E,uBAoIN,KAAe2B,gBAAW3B,I,87CC7J1B,IAAM4B,EAAkB,SAAC,GAAD,QAAE7C,cAAF,MAAW,CAAC,iBAAZ,EAAiCF,GAAjC,mBACtB,QAAC,IAAD,CAAQE,OAAQA,EAAhB,SACG,qBAAE8C,YAEC,QAAC,IAAD,KAAOC,KAAK,UAAUC,MAAM,QAAC,KAAD,CAAaC,KAAK,QAAanD,GAA3D,cACGoD,OACC,0GANNL,E,8BAcN,O,y5DCYMM,E,goBAkBW,WACb,MAA2B,EAAKrD,MAAMsD,OAA/BC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,UACPC,EAAgB,EAAKzD,MAArByD,aAEP,EAAKjC,SAAS,CACZkC,SAAS,IAGX,EAAKC,IAAIC,QAAT,oBAA8BL,EAA9B,YAAuCC,EAAvC,qCAAqF,CACnFK,OAAQ,SACRC,QAAS,YACPC,QAAoB,CAClBC,SAAU,wDACVC,UAAW,yCACXC,gBAAiBT,EAAajD,MAGlC2D,SAAU,kBAAM,EAAKC,kB,yCAlCzB,WACE,IAAOZ,EAAa7D,KAAKK,MAAMsD,OAAxBE,UAEP,OAAOa,QAAcjB,OAAE,eAAgBI,GAAW,K,0BAGpD,WACE,IAAOF,EAAU3D,KAAKK,MAAfsD,OACAC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,UAMd,MAJyD,CACvD,CAAC,YAAD,oBAA2BD,EAA3B,YAAoCC,EAApC,yC,6BA2BJ,WACE,OAAOJ,OAAE,iD,2BAGX,WACE,OACE,QAACkB,EAAD,WACE,QAAC,IAAD,Q,sBAKN,WAqCE,MApCwB,CACtB,CACErD,KAAM,SACNgC,KAAM,SACNsB,OAAOnB,OAAE,sBACToB,QAAS,CACP,CAAC,YAAYpB,OAAE,yBACf,CAAC,OAAOA,OAAE,8BAEZqB,MAAMC,QACJ,+MACA,CACEC,MACE,QAAC,IAAD,CAAcC,KAAK,8DAK3B,CACE3D,KAAM,YACNgC,KAAM,SACNsB,OAAOnB,OAAE,gCACTyB,aAAazB,OAAE,OACfqB,MAAMC,QACJ,gPACA,CACEI,OACE,QAAC,IAAD,CAAcF,KAAK,6EAErBG,OACE,QAAC,IAAD,CAAcH,KAAK,0E,uBAS/B,WACE,IAAOI,EAAarF,KAAK+C,MAAlBsC,UAEP,MAAO,CACLA,UAAWA,EAAUA,UACrBC,OAAQD,EAAUC,U,wBAItB,WAAa,WACX,EAAgCtF,KAAKK,MAA9ByD,EAAP,EAAOA,aAAcyB,EAArB,EAAqBA,QACfC,EAAW,aAAH,OAAgB1B,EAAa2B,KAA7B,YAAqCF,EAAQE,KAA7C,qCACd,OACE,QAAC,WAAD,YACE,QAAC,IAAD,CAAoB1F,OAAO0D,OAAE,kBAC7B,QAAC,IAAD,KACA,QAAC,IAAD,CACEiC,YAAU,EACVC,WAAS,EACTC,YAAa5F,KAAK4F,YAClBC,UAAU,OACVC,YAAaN,EACbO,gBAAiB,SAAAC,GACf,IAAMC,EAAU,EAAKL,YACfM,EAAmBD,EAAQX,SAAWU,EAAKV,QACjDlB,QAAoB,CAClBC,SAAU,yDACVC,UAAW,yCACXC,gBAAiBT,EAAajD,GAC9BsF,KAAMD,EAAmBD,EAAQZ,UAAYY,EAAQX,OACrDc,GAAIF,EAAmBF,EAAKX,UAAYW,EAAKV,OAC7Ce,IAAKH,EAAmB,YAAc,WAExC,EAAKrE,SAAS,CAACwD,UAAWW,KAjB9B,UAoBE,QAAC,IAAD,CACEjG,OAAO0D,OAAE,WACTnD,OAAQN,KAAKsG,WACb5F,aAAc,kBACZ,QAAC6F,EAAD,WACE,QAAC,KAAD,CAAQC,QAAS,kBAAM,EAAKC,gBAA5B,UAA6ChD,OAAE,6B,GApI9B3D,KA8I3ByG,GAAU,OAAOG,KAAP,sBAAH,oDAIP/B,GAA4B,OAAO,MAAP,sBAAH,6CAI/B,I,ykBC5KMgC,E,wiBACJ,WACE,OACE,QAAC,IAAD,CAAS7D,SAAU,CAAC,iCAApB,UACE,QAAC,EAAD,KAAwB9C,KAAKK,c,GAJKkB,aAApCoF,E,0CAUN,OAAeC,OAAiBD,I,sFCvBhC,IAAIE,EAAW,EAAQ,kDACnBC,EAAc,EAAQ,qDAI1BC,EAAOC,QAAU,SAAUC,GACzB,GAAa,WAATA,GAA8B,WAATA,GAA8B,YAATA,EAC5C,MAAMC,UAAU,kBAChB,OAAOJ,EAAYD,EAAS7G,MAAgB,WAATiH,K,0ECTvC,IAAIE,EAA8B,EAAQ,uEACtCC,EAAkB,EAAQ,0DAG1BC,EAFkB,EAAQ,yDAEXC,CAAgB,eAC/BC,EAAgBC,KAAKC,UAInBJ,KAAgBE,GACpBJ,EAA4BI,EAAeF,EAAcD,I,4ECV/B,EAAQ,gEAIpCM,CAAsB","file":"chunks/app_views_settings_projectPerformance_index_tsx-node_modules_core-js_modules_es_date_to-primi-d35bbe.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = DefaultProps & {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import * as React from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  additionalFieldProps?: {[key: string]: any};\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.location.hash !== nextProps.location.hash) {\n      const hash = nextProps.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(JsonForm);\n","import * as React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {PanelItem} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\n\nimport {Field} from '../components/forms/type';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype ProjectThreshold = {\n  id?: string;\n  threshold: string;\n  metric: string;\n  editedBy?: string;\n};\n\ntype State = AsyncView['state'] & {\n  threshold: ProjectThreshold;\n};\n\nclass ProjectPerformance extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('Performance'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      ['threshold', `/projects/${orgId}/${projectId}/transaction-threshold/configure/`],\n    ];\n\n    return endpoints;\n  }\n\n  handleDelete = () => {\n    const {orgId, projectId} = this.props.params;\n    const {organization} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    this.api.request(`/projects/${orgId}/${projectId}/transaction-threshold/configure/`, {\n      method: 'DELETE',\n      success: () => {\n        trackAnalyticsEvent({\n          eventKey: 'performance_views.project_transaction_threshold.clear',\n          eventName: 'Project Transaction Threshold: Cleared',\n          organization_id: organization.id,\n        });\n      },\n      complete: () => this.fetchData(),\n    });\n  };\n\n  getEmptyMessage() {\n    return t('There is no threshold set for this project.');\n  }\n\n  renderLoading() {\n    return (\n      <LoadingIndicatorContainer>\n        <LoadingIndicator />\n      </LoadingIndicatorContainer>\n    );\n  }\n\n  get formFields(): Field[] {\n    const fields: Field[] = [\n      {\n        name: 'metric',\n        type: 'select',\n        label: t('Calculation Method'),\n        choices: [\n          ['duration', t('Transaction Duration')],\n          ['lcp', t('Largest Contentful Paint')],\n        ],\n        help: tct(\n          'This determines which duration is used to set your thresholds. By default, we use transaction duration which measures the entire length of the transaction. You can also set this to use a [link:Web Vital].',\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/product/performance/web-vitals/\" />\n            ),\n          }\n        ),\n      },\n      {\n        name: 'threshold',\n        type: 'string',\n        label: t('Response Time Threshold (ms)'),\n        placeholder: t('300'),\n        help: tct(\n          'Define what a satisfactory response time is based on the calculation method above. This will affect how your [link1:Apdex] and [link2:User Misery] thresholds are calculated. For example, misery will be 4x your satisfactory response time.',\n          {\n            link1: (\n              <ExternalLink href=\"https://docs.sentry.io/performance-monitoring/performance/metrics/#apdex\" />\n            ),\n            link2: (\n              <ExternalLink href=\"https://docs.sentry.io/product/performance/metrics/#user-misery\" />\n            ),\n          }\n        ),\n      },\n    ];\n    return fields;\n  }\n\n  get initialData() {\n    const {threshold} = this.state;\n\n    return {\n      threshold: threshold.threshold,\n      metric: threshold.metric,\n    };\n  }\n\n  renderBody() {\n    const {organization, project} = this.props;\n    const endpoint = `/projects/${organization.slug}/${project.slug}/transaction-threshold/configure/`;\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('Performance')} />\n        <PermissionAlert />\n        <Form\n          saveOnBlur\n          allowUndo\n          initialData={this.initialData}\n          apiMethod=\"POST\"\n          apiEndpoint={endpoint}\n          onSubmitSuccess={resp => {\n            const initial = this.initialData;\n            const changedThreshold = initial.metric === resp.metric;\n            trackAnalyticsEvent({\n              eventKey: 'performance_views.project_transaction_threshold.change',\n              eventName: 'Project Transaction Threshold: Changed',\n              organization_id: organization.id,\n              from: changedThreshold ? initial.threshold : initial.metric,\n              to: changedThreshold ? resp.threshold : resp.metric,\n              key: changedThreshold ? 'threshold' : 'metric',\n            });\n            this.setState({threshold: resp});\n          }}\n        >\n          <JsonForm\n            title={t('General')}\n            fields={this.formFields}\n            renderFooter={() => (\n              <Actions>\n                <Button onClick={() => this.handleDelete()}>{t('Reset All')}</Button>\n              </Actions>\n            )}\n          />\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Actions = styled(PanelItem)`\n  justify-content: flex-end;\n`;\n\nconst LoadingIndicatorContainer = styled('div')`\n  margin: 18px 18px 0;\n`;\n\nexport default ProjectPerformance;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Feature from 'app/components/acl/feature';\nimport {Organization, Project} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport ProjectPerformance from './projectPerformance';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\nclass ProjectPerformanceContainer extends React.Component<Props> {\n  render() {\n    return (\n      <Feature features={['project-transaction-threshold']}>\n        <ProjectPerformance {...this.props} />\n      </Feature>\n    );\n  }\n}\n\nexport default withOrganization(ProjectPerformanceContainer);\n","'use strict';\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// `Date.prototype[@@toPrimitive](hint)` method implementation\n// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== 'number' && hint !== 'default') {\n    throw TypeError('Incorrect hint');\n  } return toPrimitive(anObject(this), hint !== 'number');\n};\n","var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar dateToPrimitive = require('../internals/date-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar DatePrototype = Date.prototype;\n\n// `Date.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive\nif (!(TO_PRIMITIVE in DatePrototype)) {\n  createNonEnumerableProperty(DatePrototype, TO_PRIMITIVE, dateToPrimitive);\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n"],"sourceRoot":""}