{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountIdentities.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","AccountIdentities","identity","identities","state","setState","newIdentities","filter","id","disconnectIdentity","catch","t","length","map","IdentityPanelItem","providerLabel","size","onClick","handleDisconnect","bind","PanelItem"],"mappings":"y0BAQqBA,E,0iBAInB,WACE,MAAO,K,oBAGT,WACE,IAAMC,EAAQC,KAAKC,WACnB,OACE,QAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,UAApB,SACGC,KAAKE,wB,GATJC,KAHWL,E,+tECIrB,IAQMM,E,ooBAgBe,SAACC,GAClB,IAAOC,EAAc,EAAKC,MAAnBD,WAEP,EAAKE,UACH,SAAAD,GAAS,MACDE,EAAa,UAAGF,EAAMD,kBAAT,aAAG,EAAkBI,QAAO,qBAAEC,KAAeN,EAASM,MAEzE,MAAO,CACLL,WAAYG,UAAiB,OAGjC,kBACEG,QAAmBP,GAAUQ,OAAM,WACjC,EAAKL,SAAS,CACZF,wB,gDA7BV,WACE,mFAEEA,WAAY,O,0BAIhB,WACE,MAAO,CAAC,CAAC,aAjBI,mC,sBAoBf,WACE,OAAOQ,OAAE,gB,wBAuBX,WAAa,aACX,OACE,0BACE,QAAC,IAAD,CAAoBf,MAAM,gBAC1B,QAAC,KAAD,YACE,QAAC,KAAD,WAAce,OAAE,iBAChB,QAAC,IAAD,UACG,UAACd,KAAKO,MAAMD,kBAAZ,OAAC,EAAuBS,OAKvBf,KAAKO,MAAMD,WAAWU,KAAI,SAAAX,GAAQ,OAChC,QAACY,EAAD,YACE,wBAAMZ,EAASa,iBAEf,QAAC,KAAD,CACEC,KAAK,QACLC,QAAS,EAAKC,iBAAiBC,KAAK,EAAMjB,GAF5C,UAIGS,OAAE,kBAPiBT,EAASM,QALnC,QAAC,IAAD,WACGG,OAAE,sE,GA7CahB,KAoE1BmB,GAAoB,OAAOM,KAAP,sBAAH,4EAKvB","file":"chunks/app_views_settings_account_accountIdentities_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {disconnectIdentity} from 'app/actionCreators/account';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {Identity} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/social-identities/';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  identities: Identity[] | null;\n} & AsyncView['state'];\n\nclass AccountIdentities extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      identities: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['identities', ENDPOINT]];\n  }\n\n  getTitle() {\n    return t('Identities');\n  }\n\n  handleDisconnect = (identity: Identity) => {\n    const {identities} = this.state;\n\n    this.setState(\n      state => {\n        const newIdentities = state.identities?.filter(({id}) => id !== identity.id);\n\n        return {\n          identities: newIdentities ?? [],\n        };\n      },\n      () =>\n        disconnectIdentity(identity).catch(() => {\n          this.setState({\n            identities,\n          });\n        })\n    );\n  };\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title=\"Identities\" />\n        <Panel>\n          <PanelHeader>{t('Identities')}</PanelHeader>\n          <PanelBody>\n            {!this.state.identities?.length ? (\n              <EmptyMessage>\n                {t('There are no identities associated with this account')}\n              </EmptyMessage>\n            ) : (\n              this.state.identities.map(identity => (\n                <IdentityPanelItem key={identity.id}>\n                  <div>{identity.providerLabel}</div>\n\n                  <Button\n                    size=\"small\"\n                    onClick={this.handleDisconnect.bind(this, identity)}\n                  >\n                    {t('Disconnect')}\n                  </Button>\n                </IdentityPanelItem>\n              ))\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst IdentityPanelItem = styled(PanelItem)`\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default AccountIdentities;\n"],"sourceRoot":""}