{"version":3,"sources":["webpack:///./app/components/commitLink.tsx","webpack:///./app/components/commitRow.tsx"],"names":["SUPPORTED_PROVIDERS","icon","size","providerIds","commitUrl","baseUrl","commitId","inline","repository","t","shortId","getShortCommitHash","providerData","find","provider","includes","id","undefined","url","className","href","external","CommitRow","message","split","author","EmailWarning","tct","actorEmail","email","accountSettings","StyledLink","to","inviteUser","onClick","openInviteMembersModal","initialData","emails","Set","source","this","props","commit","customAvatar","dateCreated","nonMemberEmail","AvatarWrapper","body","renderHovercardBody","user","EmailWarningIcon","CommitMessage","Message","renderMessage","Meta","name","timeago","date","React","space","p","theme","fontSizeSmall","Link","textColor","white","yellow200","TextOverflow","subText"],"mappings":"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","file":"chunks/app_components_commitRow_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\n\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab, IconVsts} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Repository} from 'app/types';\nimport {getShortCommitHash} from 'app/utils';\n\ntype CommitFormatterParameters = {\n  baseUrl: string;\n  commitId: string;\n};\n\ntype CommitProvider = {\n  icon: React.ReactNode;\n  providerIds: string[];\n  commitUrl: (CommitFormatterParameters) => string;\n};\n\n// TODO(epurkhiser, jess): This should be moved into plugins.\nconst SUPPORTED_PROVIDERS: Readonly<CommitProvider[]> = [\n  {\n    icon: <IconGithub size=\"xs\" />,\n    providerIds: ['github', 'integrations:github', 'integrations:github_enterprise'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconBitbucket size=\"xs\" />,\n    providerIds: ['bitbucket', 'integrations:bitbucket'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commits/${commitId}`,\n  },\n  {\n    icon: <IconVsts size=\"xs\" />,\n    providerIds: ['visualstudio', 'integrations:vsts'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconGitlab size=\"xs\" />,\n    providerIds: ['gitlab', 'integrations:gitlab'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n];\n\ntype Props = {\n  commitId: string;\n  repository?: Repository;\n  inline?: boolean;\n};\n\nfunction CommitLink({inline, commitId, repository}: Props) {\n  if (!commitId || !repository) {\n    return <span>{t('Unknown Commit')}</span>;\n  }\n\n  const shortId = getShortCommitHash(commitId);\n\n  const providerData = SUPPORTED_PROVIDERS.find(provider => {\n    if (!repository.provider) {\n      return false;\n    }\n    return provider.providerIds.includes(repository.provider.id);\n  });\n\n  if (providerData === undefined) {\n    return <span>{shortId}</span>;\n  }\n\n  const commitUrl =\n    repository.url &&\n    providerData.commitUrl({\n      commitId,\n      baseUrl: repository.url,\n    });\n\n  return !inline ? (\n    <Button external href={commitUrl} size=\"small\" icon={providerData.icon}>\n      {shortId}\n    </Button>\n  ) : (\n    <ExternalLink className=\"inline-commit\" href={commitUrl}>\n      {providerData.icon}\n      {' ' + shortId}\n    </ExternalLink>\n  );\n}\n\nexport default CommitLink;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {openInviteMembersModal} from 'app/actionCreators/modal';\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport CommitLink from 'app/components/commitLink';\nimport Hovercard from 'app/components/hovercard';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport TextOverflow from 'app/components/textOverflow';\nimport TimeSince from 'app/components/timeSince';\nimport {IconWarning} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Commit, User} from 'app/types';\n\ntype Props = {\n  commit: Commit;\n  customAvatar?: React.ReactNode;\n};\n\nclass CommitRow extends React.Component<Props> {\n  renderMessage(message: Commit['message']): string {\n    if (!message) {\n      return t('No message provided');\n    }\n\n    const firstLine = message.split(/\\n/)[0];\n\n    return firstLine;\n  }\n\n  renderHovercardBody(author: User) {\n    return (\n      <EmailWarning>\n        {tct(\n          'The email [actorEmail] is not a member of your organization. [inviteUser:Invite] them or link additional emails in [accountSettings:account settings].',\n          {\n            actorEmail: <strong>{author.email}</strong>,\n            accountSettings: <StyledLink to=\"/settings/account/emails/\" />,\n            inviteUser: (\n              <StyledLink\n                to=\"\"\n                onClick={() =>\n                  openInviteMembersModal({\n                    initialData: [\n                      {\n                        emails: new Set([author.email]),\n                      },\n                    ],\n                    source: 'suspect_commit',\n                  })\n                }\n              />\n            ),\n          }\n        )}\n      </EmailWarning>\n    );\n  }\n\n  render() {\n    const {commit, customAvatar, ...props} = this.props;\n    const {id, dateCreated, message, author, repository} = commit;\n    const nonMemberEmail = author && author.id === undefined;\n\n    return (\n      <PanelItem key={id} {...props}>\n        {customAvatar ? (\n          customAvatar\n        ) : nonMemberEmail ? (\n          <AvatarWrapper>\n            <Hovercard body={this.renderHovercardBody(author!)}>\n              <UserAvatar size={36} user={author} />\n              <EmailWarningIcon>\n                <IconWarning size=\"xs\" />\n              </EmailWarningIcon>\n            </Hovercard>\n          </AvatarWrapper>\n        ) : (\n          <AvatarWrapper>\n            <UserAvatar size={36} user={author} />\n          </AvatarWrapper>\n        )}\n\n        <CommitMessage>\n          <Message>{this.renderMessage(message)}</Message>\n          <Meta>\n            {tct('[author] committed [timeago]', {\n              author: <strong>{(author && author.name) || t('Unknown author')}</strong>,\n              timeago: <TimeSince date={dateCreated} />,\n            })}\n          </Meta>\n        </CommitMessage>\n\n        <div>\n          <CommitLink commitId={id} repository={repository} />\n        </div>\n      </PanelItem>\n    );\n  }\n}\n\nconst AvatarWrapper = styled('div')`\n  position: relative;\n  align-self: flex-start;\n  margin-right: ${space(2)};\n`;\n\nconst EmailWarning = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 1.4;\n  margin: -4px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.textColor};\n  border-bottom: 1px dotted ${p => p.theme.textColor};\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst EmailWarningIcon = styled('span')`\n  position: absolute;\n  bottom: -6px;\n  right: -7px;\n  line-height: 12px;\n  border-radius: 50%;\n  border: 1px solid ${p => p.theme.white};\n  background: ${p => p.theme.yellow200};\n  padding: 1px 2px 3px 2px;\n`;\n\nconst CommitMessage = styled('div')`\n  flex: 1;\n  flex-direction: column;\n  min-width: 0;\n  margin-right: ${space(2)};\n`;\n\nconst Message = styled(TextOverflow)`\n  font-size: 15px;\n  line-height: 1.1;\n  font-weight: bold;\n`;\n\nconst Meta = styled(TextOverflow)`\n  font-size: 13px;\n  line-height: 1.5;\n  margin: 0;\n  color: ${p => p.theme.subText};\n`;\n\nexport default styled(CommitRow)`\n  align-items: center;\n`;\n"],"sourceRoot":""}