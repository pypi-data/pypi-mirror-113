<VirtualHost 0.0.0.0:443>
    # INTERNAL INTERFACE - Admin control API
    ServerName lerc.local
    SSLEngine On
    SSLVerifyDepth 2
    SSLCertificateFile /opt/lerc/lerc_server/ssl/lerc.local.public.cert.pem
    SSLCertificateKeyFile /opt/lerc/lerc_server/ssl/lerc.local.private.key.pem
    SSLCertificateChainFile /opt/lerc/lerc_server/ssl/ca-chain.cert.pem
    SSLCACertificateFile /opt/lerc/lerc_server/ssl/ca-chain.cert.pem

    WSGIDaemonProcess control_server user=lerc group=lerc threads=2
    WSGIScriptAlias / /opt/lerc/lerc_server/lerc_server.wsgi
    WSGIChunkedRequest On

    <Directory /opt/lerc/lerc_server/>
        WSGIProcessGroup control_server
        WSGIApplicationGroup %{GLOBAL}
        WSGIScriptReloading On
        Order allow,deny
        #Allow from 10.1.1.0/24
        Require all granted
        # Following sets limit on cache buffer for POSTs/uploads to 10 MB
        #  when renegotiating SSL for client verification
        #  the default of 128 KB is not enough. Example: first upload of lerc_control/tools/7za.exe to server
        SSLRenegBufferSize 10486000
        SSLVerifyClient require
        SSLRequire %{SSL_CLIENT_S_DN_CN} eq "LERC_ADMIN_CERT_ID"
    </Directory>
</VirtualHost>

<VirtualHost 0.0.0.0:443>
    # EXTERNAL INTERFACE - Client access
    ServerName lerc.example.com
    SSLEngine On
    SSLVerifyDepth 2
    SSLCertificateFile /opt/lerc/lerc_server/ssl/lerc.example.com.cert.pem
    SSLCertificateKeyFile /opt/lerc/lerc_server/ssl/lerc.example.private.key.pem
    SSLCertificateChainFile /opt/lerc/lerc_server/ssl/ca-chain.cert.pem
    SSLCACertificateFile /opt/lerc/lerc_server/ssl/ca-chain.cert.pem

    WSGIDaemonProcess lerc_server user=lerc group=lerc threads=5
    WSGIScriptAlias / /opt/lerc/lerc_server/lerc_server.wsgi
    WSGIChunkedRequest On

    <Directory /opt/lerc/lerc_server/>
        WSGIProcessGroup lerc_server
        WSGIApplicationGroup %{GLOBAL}
        WSGIScriptReloading On
        Allow from all
        Require all granted
        SSLVerifyClient require
        SSLRequire %{SSL_CLIENT_S_DN_CN} eq "LERC_CLIENT_CERT_ID"
    </Directory>
    <Location /query>
        Deny from all
    </Location>
    <Location /command>
        Deny from all
    </Location>
    SetEnv nokeepalive ssl-unclean-shutdown
</VirtualHost>
