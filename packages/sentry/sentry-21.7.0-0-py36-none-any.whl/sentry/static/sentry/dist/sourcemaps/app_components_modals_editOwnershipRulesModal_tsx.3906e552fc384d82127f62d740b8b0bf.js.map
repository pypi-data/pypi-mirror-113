{"version":3,"sources":["webpack:///./app/views/settings/project/projectOwnership/editRulesModal.tsx","webpack:///./app/components/modals/editOwnershipRulesModal.tsx"],"names":["EditOwnershipRulesModal","ownership","this","props","Fragment","Block","t","CodeBlock","initialText","raw","Component","TextBlock","Body","Header","onSave","closeButton","modalCss","css","theme"],"mappings":"gtEAWMA,E,wiBACJ,WACE,IAAOC,EAAaC,KAAKC,MAAlBF,UACP,OACE,QAAC,EAAAG,SAAD,YACE,QAACC,EAAD,YACGC,OAAE,8BADL,KACoC,uDAEpC,QAACD,EAAD,WACGC,OAAE,qEAEL,QAACD,EAAD,YACGC,OAAE,qBACH,QAACC,EAAD,UAAY,6DAEd,QAACF,EAAD,YACGC,OAAE,aACH,QAACC,EAAD,0EAEG,KAFH,6CAIG,KAJH,8CAQDN,IAAa,QAAC,IAAD,OAAgBC,KAAKC,OAArB,IAA4BK,YAAaP,EAAUQ,KAAO,a,GAzB1CC,aAAhCV,E,sCA+BN,IAAMK,GAAQ,OAAOM,IAAP,sBAAH,8CAILJ,GAAY,OAAO,MAAP,sBAAH,oEAKf,I,kmBCzCA,IAAMP,EAA0B,SAAC,GAA4C,IAA3CY,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAWX,GAAkB,YAC3E,OACE,QAAC,EAAAC,SAAD,YACE,QAACS,EAAD,CAAQE,aAAW,EAAnB,UAAqBT,OAAE,2BACvB,QAACM,EAAD,WACE,QAAC,EAAD,OAAoBT,GAApB,IAA2BW,OAAQA,WALrCd,E,sCAWC,IAAMgB,GAAWC,QAAH,sBACEC,oBADF,wDASrB","file":"chunks/app_components_modals_editOwnershipRulesModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {EditOwnershipRulesModalOptions} from 'app/actionCreators/modal';\nimport {t} from 'app/locale';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport OwnerInput from 'app/views/settings/project/projectOwnership/ownerInput';\n\ntype Props = EditOwnershipRulesModalOptions;\ntype State = {};\n\nclass EditOwnershipRulesModal extends Component<Props, State> {\n  render() {\n    const {ownership} = this.props;\n    return (\n      <Fragment>\n        <Block>\n          {t('Rules follow the pattern: ')} <code>type:glob owner owner</code>\n        </Block>\n        <Block>\n          {t('Owners can be team identifiers starting with #, or user emails')}\n        </Block>\n        <Block>\n          {t('Globbing Syntax:')}\n          <CodeBlock>{'* matches everything\\n? matches any single character'}</CodeBlock>\n        </Block>\n        <Block>\n          {t('Examples')}\n          <CodeBlock>\n            path:src/example/pipeline/* person@sentry.io #infrastructure\n            {'\\n'}\n            url:http://example.com/settings/* #product\n            {'\\n'}\n            tags.sku_class:enterprise #enterprise\n          </CodeBlock>\n        </Block>\n        {ownership && <OwnerInput {...this.props} initialText={ownership.raw || ''} />}\n      </Fragment>\n    );\n  }\n}\n\nconst Block = styled(TextBlock)`\n  margin-bottom: 16px;\n`;\n\nconst CodeBlock = styled('pre')`\n  word-break: break-all;\n  white-space: pre-wrap;\n`;\n\nexport default EditOwnershipRulesModal;\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\n\nimport {EditOwnershipRulesModalOptions, ModalRenderProps} from 'app/actionCreators/modal';\nimport {t} from 'app/locale';\nimport theme from 'app/utils/theme';\nimport OwnershipModal from 'app/views/settings/project/projectOwnership/editRulesModal';\n\ntype Props = ModalRenderProps & EditOwnershipRulesModalOptions;\n\nconst EditOwnershipRulesModal = ({Body, Header, onSave, ...props}: Props) => {\n  return (\n    <Fragment>\n      <Header closeButton>{t('Edit Ownership Rules')}</Header>\n      <Body>\n        <OwnershipModal {...props} onSave={onSave} />\n      </Body>\n    </Fragment>\n  );\n};\n\nexport const modalCss = css`\n  @media (min-width: ${theme.breakpoints[0]}) {\n    width: 80%;\n  }\n  [role='document'] {\n    overflow: initial;\n  }\n`;\n\nexport default EditOwnershipRulesModal;\n"],"sourceRoot":""}