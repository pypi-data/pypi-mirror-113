Metadata-Version: 2.1
Name: py3mailer
Version: 1.0.4
Summary: A simple and convinient way to send emails in python
Home-page: https://github.com/complexsum/pymailer
Author: Shubham Sharma
Author-email: shubhamjsharma10@gmail.com
License: Apache 2.0
Project-URL: Bug Reports, https://github.com/complexsum/pymailer/issues
Project-URL: Source, https://github.com/complexsum/pymailer
Keywords: email,python email,python smtp,python send emails,smtp
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Operating System :: OS Independent
Classifier: Typing :: Typed
Requires-Python: >=3.6, <4
Description-Content-Type: text/markdown

## About
A simple and convinient way to send emails in python

## Usage guide

1. ### Importing the module

    ```py
    from messaging import EmailService, build_message
    ```

2. ### Build an email message
   * Simple `EmailMessage`

      ```python3
      message = build_message(fr_addr='john@company.com', # Sender
                              to_addrs=['peter@abc.com'], # List of recipients
                              cc_addrs=['emma@abc.com' ], # List of secondary recipents
                              subject='Subject of Email',
                              content="Plain text contents of the email")
      ```

   * Extended `EmailMessage` with html body and attachments

      ```py
      message = build_message(fr_addr='john@company.com', # Sender
                              to_addrs=['peter@abc.com'], # List of recipients
                              cc_addrs=['emma@abc.com' ], # List of secondary recipents
                              subject='Subject of Email',
                              content="Plain text contents of the email",
                              htmlcontent="<h1>Fancy</h1> html content of the email",
                              attachments=['absolute path to the attachment'])
      ```

3. ### Instantiate `EmailSevice` and send the `message`

    ```py
    service = EmailService(host='smtp.gmail.com',
                           port=587,
                           user='john@company.com',
                           password='This is super secret')

    service.sendmail(message)
    ```


### Additional notes:

- While creating `EmailService` its optional to specify the `password`. If the `password` is not specified it is assumed that the smtp email server does not require authentication.


