# automatically generated by the FlatBuffers compiler, do not modify
from ctypes import (
    c_uint64 as uint64,
    c_uint64 as uint64,
    c_int32 as int32,
    c_int32 as int32,
    c_int32 as int32,
    c_int32 as int32,
    c_int32 as int32,
    c_int32 as int32,
)
from dataclasses import dataclass
from typing import Protocol

from typing import Union

@dataclass
class Date:
    ts: uint64

@dataclass
class Duration:
    duration: uint64

@dataclass
class Language:
    code: str

@dataclass
class URL:
    url: str

@dataclass
class RelativeLink:
    link: str

@dataclass
class MimeType:
    encoding: str

@dataclass
class Bool:
    val: bool

@dataclass
class String:
    val: str

@dataclass
class IntransitiveActivity:
    pass

@dataclass
class Activity:
    actor: "ObjectOrLink"
    instrument: "ObjectOrLink"
    origin: "ObjectOrLink"
    result: "ObjectOrLink"
    target: "ObjectOrLink"

@dataclass
class Object:
    attachment: "ObjectOrLink"
    attributedTo: "ObjectOrLink"
    audience: "ObjectOrLink"
    bcc: "ObjectOrLink"
    bto: "ObjectOrLink"
    cc: "ObjectOrLink"
    context: "ObjectOrLink"
    generator: "ObjectOrLink"
    icon: "ImageOrLink"
    image: "ImageOrLink"
    inReplyTo: "ObjectOrLink"
    location: "ObjectOrLink"
    object: "ObjectOrLink"
    preview: "ObjectOrLink"
    replies: "Collection"
    tag: "ObjectOrLink"
    to: "ObjectOrLink"
    url: "URLOrLink"
    altitude: float
    content: str
    name: str
    duration: "Duration"
    mediaType: "MimeType"
    endTime: "Date"
    published: "Date"
    source_property: "ObjectOrLink"
    startTime: "Date"
    summary: str
    updated: "Date"
    likes: "MaybeOrderedCollection"
    shares: "MaybeOrderedCollection"

@dataclass
class Link:
    attributedTo: "ObjectOrLink"
    preview: "ObjectOrLink"
    name: str
    height: int32
    href: "URL"
    hreflang: "Language"
    mediaType: "MimeType"
    rel: "RelativeLink"
    summary: str
    width: int32

@dataclass
class Collection:
    current: "PageOrLink"
    first: "PageOrLink"
    last: "PageOrLink"
    items: "ObjectOrLink"
    totalItems: int32

@dataclass
class OrderedCollection:
    orderedItems: "ObjectOrLink"

@dataclass
class Question(IntransitiveActivity):
    oneOf: "ObjectOrLink"
    anyOf: "ObjectOrLink"
    closed: "Various"

@dataclass
class CollectionPage:
    next: "PageOrLink"
    prev: "PageOrLink"
    partOf: "CollectionOrLink"

@dataclass
class Place:
    accuracy: float
    latitude: float
    longitude: float
    radius: float
    units: "StringOrURL"

@dataclass
class Image:
    height: int32
    width: int32

@dataclass
class OrderedCollectionPage:
    startIndex: int32

@dataclass
class Relationship:
    subject: "ObjectOrLink"
    relationship: "Object"

@dataclass
class Profile:
    describes: "Object"

@dataclass
class Tombstone:
    formerType: "ObjectOrString"
    deleted: "Date"

@dataclass
class Application(Object):
    inbox: "OrderedCollection"
    outbox: "OrderedCollection"
    following: "MaybeOrderedCollection"
    followers: "MaybeOrderedCollection"
    liked: "MaybeOrderedCollection"
    streams: "MaybeOrderedCollection"
    preferredUsername: str

@dataclass
class Group(Object):
    inbox: "OrderedCollection"
    outbox: "OrderedCollection"
    following: "MaybeOrderedCollection"
    followers: "MaybeOrderedCollection"
    liked: "MaybeOrderedCollection"
    streams: "MaybeOrderedCollection"
    preferredUsername: str

@dataclass
class Organization(Object):
    inbox: "OrderedCollection"
    outbox: "OrderedCollection"
    following: "MaybeOrderedCollection"
    followers: "MaybeOrderedCollection"
    liked: "MaybeOrderedCollection"
    streams: "MaybeOrderedCollection"
    preferredUsername: str

@dataclass
class Person(Object):
    inbox: "OrderedCollection"
    outbox: "OrderedCollection"
    following: "MaybeOrderedCollection"
    followers: "MaybeOrderedCollection"
    liked: "MaybeOrderedCollection"
    streams: "MaybeOrderedCollection"
    preferredUsername: str

@dataclass
class Service(Object):
    inbox: "OrderedCollection"
    outbox: "OrderedCollection"
    following: "MaybeOrderedCollection"
    followers: "MaybeOrderedCollection"
    liked: "MaybeOrderedCollection"
    streams: "MaybeOrderedCollection"
    preferredUsername: str

@dataclass
class Accept(Activity):
    pass

@dataclass
class TentativeAccept(Activity):
    pass

@dataclass
class Add(Activity):
    pass

@dataclass
class Arrive(Activity):
    pass

@dataclass
class Create(Activity):
    pass

@dataclass
class Delete(Activity):
    pass

@dataclass
class Follow(Activity):
    pass

@dataclass
class Ignore(Activity):
    pass

@dataclass
class Join(Activity):
    pass

@dataclass
class Leave(Activity):
    pass

@dataclass
class Like(Activity):
    pass

@dataclass
class Offer(Activity):
    pass

@dataclass
class Invite(Activity):
    pass

@dataclass
class Reject(Activity):
    pass

@dataclass
class TentativeReject(Activity):
    pass

@dataclass
class Remove(Activity):
    pass

@dataclass
class Undo(Activity):
    pass

@dataclass
class Update(Activity):
    pass

@dataclass
class View(Activity):
    pass

@dataclass
class Listen(Activity):
    pass

@dataclass
class Read(Activity):
    pass

@dataclass
class Move(Activity):
    pass

@dataclass
class Travel(Activity):
    pass

@dataclass
class Announce(Activity):
    pass

@dataclass
class Block(Activity):
    pass

@dataclass
class Flag(Activity):
    pass

@dataclass
class Dislike(Activity):
    pass

@dataclass
class Question(Activity):
    pass


PageOrLink = Union[CollectionPage, Link]


ImageOrLink = Union[Image, Link]


CollectionOrLink = Union[Link, Collection]


ObjectOrLink = Union[Link, Object]


Various = Union[Object, Link, Date, Bool]


ObjectOrString = Union[Object, String]


MaybeOrderedCollection = Union[OrderedCollection, Collection]


URLOrLink = Union[URL, Link]


StringOrURL = Union[String, URL]


ActivityStream = Union[Accept, TentativeAccept, Add, Arrive, Create, Delete, Follow, Ignore, Join, Leave, Like, Offer, Invite, Reject, TentativeReject, Remove, Undo, Update, View, Listen, Read, Move, Travel, Announce, Block, Flag, Dislike, Question]


Actor = Union[Application, Group, Organization, Person, Service]
