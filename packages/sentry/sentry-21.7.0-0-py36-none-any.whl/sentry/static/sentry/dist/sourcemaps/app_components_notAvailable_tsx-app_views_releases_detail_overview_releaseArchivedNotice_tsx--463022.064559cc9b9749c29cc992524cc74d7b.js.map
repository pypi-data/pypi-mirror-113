{"version":3,"sources":["webpack:///./app/components/notAvailable.tsx","webpack:///./app/views/releases/detail/overview/releaseArchivedNotice.tsx","webpack:///./app/views/releases/list/crashFree.tsx","webpack:///./app/views/releases/list/releaseAdoption.tsx","webpack:///./app/views/releases/list/releaseHealth/projectLink.tsx"],"names":["NotAvailable","tooltip","Wrapper","title","disabled","defined","p","theme","gray200","ReleaseArchivedNotice","onRestore","multi","icon","size","type","t","Fragment","UnarchiveButton","priority","onClick","Button","textColor","getIcon","percent","iconSize","color","isCircled","CrashFree","displayOption","CrashFreePercent","displayCrashFreePercent","releaseDisplayLabel","space","overflowEllipsis","ReleaseAdoption","adoption","releaseCount","projectCount","withLabels","Labels","value","Math","round","containerDisplayMode","popperStyle","background","gray500","maxWidth","TooltipWrapper","TooltipRow","Title","Dot","progressBar","Value","progressBackground","Divider","Time","ProgressBarWrapper","ceil","fontSizeMedium","gray300","gray400","withTheme","ProjectLink","orgSlug","releaseVersion","project","location","to","pathname","encodeURIComponent","query","extractSelectionParameters","id","yAxis","undefined"],"mappings":"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","file":"chunks/app_components_notAvailable_tsx-app_views_releases_detail_overview_releaseArchivedNotice_tsx--463022.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport Tooltip from 'app/components/tooltip';\nimport {defined} from 'app/utils';\n\ntype Props = {\n  tooltip?: React.ReactNode;\n};\n\nfunction NotAvailable({tooltip}: Props) {\n  return (\n    <Wrapper>\n      <Tooltip title={tooltip} disabled={!defined(tooltip)}>\n        {'\\u2014'}\n      </Tooltip>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled('div')`\n  color: ${p => p.theme.gray200};\n`;\n\nexport default NotAvailable;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport {IconInfo} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = {\n  multi?: boolean;\n  onRestore?: () => void;\n};\n\nfunction ReleaseArchivedNotice({onRestore, multi}: Props) {\n  return (\n    <Alert icon={<IconInfo size=\"md\" />} type=\"warning\">\n      {multi\n        ? t('These releases have been archived.')\n        : t('This release has been archived.')}\n\n      {!multi && onRestore && (\n        <Fragment>\n          {' '}\n          <UnarchiveButton size=\"zero\" priority=\"link\" onClick={onRestore}>\n            {t('Restore this release')}\n          </UnarchiveButton>\n        </Fragment>\n      )}\n    </Alert>\n  );\n}\n\nconst UnarchiveButton = styled(Button)`\n  font-size: inherit;\n  text-decoration: underline;\n  &,\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default ReleaseArchivedNotice;\n","import styled from '@emotion/styled';\n\nimport {IconCheckmark, IconFire, IconWarning} from 'app/icons';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {defined} from 'app/utils';\nimport {IconSize} from 'app/utils/theme';\n\nimport {displayCrashFreePercent, releaseDisplayLabel} from '../utils';\n\nimport {DisplayOption} from './utils';\n\nconst CRASH_FREE_DANGER_THRESHOLD = 98;\nconst CRASH_FREE_WARNING_THRESHOLD = 99.5;\n\nconst getIcon = (percent: number, iconSize: IconSize) => {\n  if (percent < CRASH_FREE_DANGER_THRESHOLD) {\n    return <IconFire color=\"red300\" size={iconSize} />;\n  }\n\n  if (percent < CRASH_FREE_WARNING_THRESHOLD) {\n    return <IconWarning color=\"yellow300\" size={iconSize} />;\n  }\n\n  return <IconCheckmark isCircled color=\"green300\" size={iconSize} />;\n};\n\ntype Props = {\n  percent: number;\n  iconSize?: IconSize;\n  /**\n   * If provided there will be a label next to percentage\n   */\n  displayOption?: DisplayOption;\n};\n\nconst CrashFree = ({percent, iconSize = 'sm', displayOption}: Props) => {\n  return (\n    <Wrapper>\n      {getIcon(percent, iconSize)}\n      <CrashFreePercent>\n        {displayCrashFreePercent(percent)}{' '}\n        {defined(displayOption) && releaseDisplayLabel(displayOption, 2)}\n      </CrashFreePercent>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n  vertical-align: middle;\n`;\n\nconst CrashFreePercent = styled('div')`\n  ${overflowEllipsis};\n`;\n\nexport default CrashFree;\n","import {withTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Count from 'app/components/count';\nimport ProgressBar from 'app/components/progressBar';\nimport TextOverflow from 'app/components/textOverflow';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Theme} from 'app/utils/theme';\n\nimport {releaseDisplayLabel} from '../utils';\n\nimport {DisplayOption} from './utils';\n\ntype Props = {\n  adoption: number;\n  releaseCount: number;\n  projectCount: number;\n  displayOption: DisplayOption;\n  theme: Theme;\n  withLabels?: boolean;\n};\n\nfunction ReleaseAdoption({\n  adoption,\n  releaseCount,\n  projectCount,\n  displayOption,\n  theme,\n  withLabels,\n}: Props) {\n  return (\n    <div>\n      {withLabels && (\n        <Labels>\n          <TextOverflow>\n            <Count value={releaseCount} />/<Count value={projectCount} />{' '}\n            {releaseDisplayLabel(displayOption, projectCount)}\n          </TextOverflow>\n\n          <span>{!adoption ? 0 : adoption < 1 ? '<1' : Math.round(adoption)}%</span>\n        </Labels>\n      )}\n\n      <Tooltip\n        containerDisplayMode=\"block\"\n        popperStyle={{\n          background: theme.gray500,\n          maxWidth: '300px',\n        }}\n        title={\n          <TooltipWrapper>\n            <TooltipRow>\n              <Title>\n                <Dot color={theme.progressBar} />\n                {t('This Release')}\n              </Title>\n              <Value>\n                <Count value={releaseCount} />{' '}\n                {releaseDisplayLabel(displayOption, releaseCount)}\n              </Value>\n            </TooltipRow>\n            <TooltipRow>\n              <Title>\n                <Dot color={theme.progressBackground} />\n                {t('Total Project')}\n              </Title>\n              <Value>\n                <Count value={projectCount} />{' '}\n                {releaseDisplayLabel(displayOption, projectCount)}\n              </Value>\n            </TooltipRow>\n            <Divider />\n\n            <Time>{t('Last 24 hours')}</Time>\n          </TooltipWrapper>\n        }\n      >\n        <ProgressBarWrapper>\n          <ProgressBar value={Math.ceil(adoption)} />\n        </ProgressBarWrapper>\n      </Tooltip>\n    </div>\n  );\n}\n\nconst Labels = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: 1fr max-content;\n`;\n\nconst TooltipWrapper = styled('div')`\n  padding: ${space(0.75)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 21px;\n  font-weight: normal;\n`;\n\nconst TooltipRow = styled('div')`\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: ${space(3)};\n  justify-content: space-between;\n  padding-bottom: ${space(0.25)};\n`;\n\nconst Title = styled('div')`\n  text-align: left;\n`;\n\nconst Dot = styled('div')<{color: string}>`\n  display: inline-block;\n  margin-right: ${space(0.75)};\n  border-radius: 10px;\n  width: 10px;\n  height: 10px;\n  background-color: ${p => p.color};\n`;\n\nconst Value = styled('div')`\n  color: ${p => p.theme.gray300};\n  text-align: right;\n`;\nconst Divider = styled('div')`\n  border-top: 1px solid ${p => p.theme.gray400};\n  margin: ${space(0.75)} -${space(2)} ${space(1)};\n`;\n\nconst Time = styled('div')`\n  color: ${p => p.theme.gray300};\n  text-align: center;\n`;\n\nconst ProgressBarWrapper = styled('div')`\n  /* A bit of padding makes hovering for tooltip easier */\n  padding: ${space(0.5)} 0;\n`;\n\nexport default withTheme(ReleaseAdoption);\n","import {Location} from 'history';\n\nimport Button from 'app/components/button';\nimport {extractSelectionParameters} from 'app/components/organizations/globalSelectionHeader/utils';\nimport {t} from 'app/locale';\nimport {ReleaseProject} from 'app/types';\n\ntype Props = {\n  orgSlug: string;\n  releaseVersion: string;\n  project: ReleaseProject;\n  location: Location;\n};\n\nconst ProjectLink = ({orgSlug, releaseVersion, project, location}: Props) => (\n  <Button\n    size=\"xsmall\"\n    to={{\n      pathname: `/organizations/${orgSlug}/releases/${encodeURIComponent(\n        releaseVersion\n      )}/`,\n      query: {\n        ...extractSelectionParameters(location.query),\n        project: project.id,\n        yAxis: undefined,\n      },\n    }}\n  >\n    {t('View')}\n  </Button>\n);\n\nexport default ProjectLink;\n"],"sourceRoot":""}