{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountDetails.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","ENDPOINT","AccountDetails","user","updateUser","setState","state","formCommonProps","apiEndpoint","apiMethod","allowUndo","saveOnBlur","onSubmitSuccess","handleSubmitSuccess","t","initialData","forms","accountDetailsFields","additionalFieldProps","options","accountPreferencesFields","endpoint","model","onSave","resp","isUser"],"mappings":"s0BAQqBA,E,0iBAInB,WACE,MAAO,K,oBAGT,WACE,IAAMC,EAAQC,KAAKC,WACnB,OACE,QAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,UAApB,SACGC,KAAKE,wB,GATJC,KAHWL,E,0oECIrB,IAAMM,EAAW,aAEXC,E,uoBAMkB,SAACC,IAGrBC,QAAWD,GAGX,EAAKE,SAAS,CACZF,Y,6CAZJ,WAEE,MAAO,CAAC,CAAC,OAAQF,M,wBAcnB,WAAa,WACLE,EAAON,KAAKS,MAAMH,KAElBI,EAA0C,CAC9CC,YAAaP,EACbQ,UAAW,MACXC,WAAW,EACXC,YAAY,EACZC,gBAAiBf,KAAKgB,qBAGxB,OACE,0BACE,QAAC,IAAD,CAAoBjB,OAAOkB,OAAE,sBAC7B,QAAC,IAAD,KAAMC,YAAaZ,GAAUI,GAA7B,cACE,QAAC,IAAD,CAAUS,MAAOC,UAAsBC,qBAAsB,CAACf,cAEhE,QAAC,IAAD,KAAMY,YAAaZ,EAAKgB,SAAaZ,GAArC,cACE,QAAC,IAAD,CAAUS,MAAOI,UAA0BF,qBAAsB,CAACf,cAEpE,QAAC,IAAD,CACEkB,SAAS,oBACTC,MAAOnB,EACPoB,OAAQ,SAAAC,GACN,EAAKX,oBAAoBW,IAE3BC,QAAM,W,GA3Ca9B,KAkD7B","file":"chunks/app_views_settings_account_accountDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import {updateUser} from 'app/actionCreators/account';\nimport {APIRequestMethod} from 'app/api';\nimport AvatarChooser from 'app/components/avatarChooser';\nimport accountDetailsFields from 'app/data/forms/accountDetails';\nimport accountPreferencesFields from 'app/data/forms/accountPreferences';\nimport {t} from 'app/locale';\nimport {User} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/';\n\nclass AccountDetails extends AsyncView {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    // local state is NOT updated when the form saves\n    return [['user', ENDPOINT]];\n  }\n\n  handleSubmitSuccess = (user: User) => {\n    // the updateUser method updates our Config Store\n    // No components listen to the ConfigStore, they just access it directly\n    updateUser(user);\n    // We need to update the state, because AvatarChooser is using it,\n    // otherwise it will flick\n    this.setState({\n      user,\n    });\n  };\n\n  renderBody() {\n    const user = this.state.user as User;\n\n    const formCommonProps: Partial<Form['props']> = {\n      apiEndpoint: ENDPOINT,\n      apiMethod: 'PUT' as APIRequestMethod,\n      allowUndo: true,\n      saveOnBlur: true,\n      onSubmitSuccess: this.handleSubmitSuccess,\n    };\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Account Details')} />\n        <Form initialData={user} {...formCommonProps}>\n          <JsonForm forms={accountDetailsFields} additionalFieldProps={{user}} />\n        </Form>\n        <Form initialData={user.options} {...formCommonProps}>\n          <JsonForm forms={accountPreferencesFields} additionalFieldProps={{user}} />\n        </Form>\n        <AvatarChooser\n          endpoint=\"/users/me/avatar/\"\n          model={user}\n          onSave={resp => {\n            this.handleSubmitSuccess(resp as User);\n          }}\n          isUser\n        />\n      </div>\n    );\n  }\n}\n\nexport default AccountDetails;\n"],"sourceRoot":""}