{"version":3,"sources":["webpack:///./app/views/organizationGroupDetails/groupUserFeedback.tsx"],"names":["GroupUserFeedback","loading","error","reportList","pageLinks","setState","fetchGroupUserReports","props","group","id","params","cursor","location","query","then","data","jqXHR","getResponseHeader","catch","this","fetchData","prevProps","isEqual","pathname","search","state","organization","onRetry","length","className","map","item","idx","report","orgId","slug","issueId","projectIds","project","Component","withOrganization"],"mappings":"k+EAiCMA,E,wnBACW,CACbC,SAAS,EACTC,OAAO,EACPC,WAAY,GACZC,UAAW,M,+BAiBD,WACV,EAAKC,SAAS,CACZJ,SAAS,EACTC,OAAO,KAGTI,QAAsB,EAAKC,MAAMC,MAAMC,GAAlB,OAChB,EAAKF,MAAMG,QADK,IAEnBC,OAAQ,EAAKJ,MAAMK,SAASC,MAAMF,QAAU,MAE3CG,MAAK,YAAsB,mBAApBC,EAAoB,KAAXC,GAAW,WAC1B,EAAKX,SAAS,CACZH,OAAO,EACPD,SAAS,EACTE,WAAYY,EACZX,UAAWY,aAAF,EAAEA,EAAOC,kBAAkB,aAGvCC,OAAM,WACL,EAAKb,SAAS,CACZH,OAAO,EACPD,SAAS,U,kDAnCjB,WACEkB,KAAKC,c,gCAGP,SAAmBC,GAEdC,IAAQD,EAAUX,OAAQS,KAAKZ,MAAMG,SACtCW,EAAUT,SAASW,WAAaJ,KAAKZ,MAAMK,SAASW,UACpDF,EAAUT,SAASY,SAAWL,KAAKZ,MAAMK,SAASY,QAElDL,KAAKC,c,oBA8BT,WACE,MAAqCD,KAAKM,MAAnCtB,EAAP,EAAOA,WAAYF,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,MAC5B,EAA8BiB,KAAKZ,MAA5BmB,EAAP,EAAOA,aAAclB,EAArB,EAAqBA,MAErB,OAAIP,GACK,QAAC,IAAD,IAGLC,GACK,QAAC,IAAD,CAAcyB,QAASR,KAAKC,YAGjCjB,EAAWyB,QAEX,eAAKC,UAAU,MAAf,UACE,eAAKA,UAAU,WAAf,UACG1B,EAAW2B,KAAI,SAACC,EAAMC,GAAP,OACd,QAAC,IAAD,CAEEC,OAAQF,EACRG,MAAOR,EAAaS,KACpBC,QAAS5B,EAAMC,IAHVuB,OAMT,QAAC,IAAD,GAAY5B,UAAWe,KAAKM,MAAMrB,WAAee,KAAKZ,cAMvD,QAAC,IAAD,CAAmB8B,WAAY,CAAC7B,EAAM8B,QAAQ7B,U,GA9EzB8B,aAA1BvC,E,gCAkFN,WAAewC,OAAiBxC","file":"chunks/app_views_organizationGroupDetails_groupUserFeedback_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport isEqual from 'lodash/isEqual';\n\nimport EventUserFeedback from 'app/components/events/userFeedback';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport {Group, Organization, Project, UserReport} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\nimport UserFeedbackEmpty from 'app/views/userFeedback/userFeedbackEmpty';\n\nimport {fetchGroupUserReports} from './utils';\n\ntype RouteParams = {\n  orgId: string;\n  groupId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  group: Group;\n  organization: Organization;\n  project: Project;\n  environments: string[];\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  reportList: UserReport[];\n  pageLinks?: string | null;\n};\n\nclass GroupUserFeedback extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    reportList: [],\n    pageLinks: '',\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      !isEqual(prevProps.params, this.props.params) ||\n      prevProps.location.pathname !== this.props.location.pathname ||\n      prevProps.location.search !== this.props.location.search\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    fetchGroupUserReports(this.props.group.id, {\n      ...this.props.params,\n      cursor: this.props.location.query.cursor || '',\n    })\n      .then(([data, _, jqXHR]) => {\n        this.setState({\n          error: false,\n          loading: false,\n          reportList: data,\n          pageLinks: jqXHR?.getResponseHeader('Link'),\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const {reportList, loading, error} = this.state;\n    const {organization, group} = this.props;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    if (reportList.length) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-md-9\">\n            {reportList.map((item, idx) => (\n              <EventUserFeedback\n                key={idx}\n                report={item}\n                orgId={organization.slug}\n                issueId={group.id}\n              />\n            ))}\n            <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n          </div>\n        </div>\n      );\n    }\n\n    return <UserFeedbackEmpty projectIds={[group.project.id]} />;\n  }\n}\n\nexport default withOrganization(GroupUserFeedback);\n"],"sourceRoot":""}