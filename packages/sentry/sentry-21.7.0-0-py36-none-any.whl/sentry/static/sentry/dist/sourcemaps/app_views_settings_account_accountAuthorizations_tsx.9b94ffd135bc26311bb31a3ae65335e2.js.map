{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountAuthorizations.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","AccountAuthorizations","authorization","oldData","state","data","setState","filter","id","api","requestPromise","method","addSuccessMessage","t","addErrorMessage","isEmpty","length","Description","tct","link","Link","to","map","PanelItemCenter","ApplicationDetails","ApplicationName","application","name","homepageUrl","Url","href","Scopes","scopes","join","size","onClick","handleRevoke","icon","p","theme","fontSizeRelativeSmall","space","PanelItem","gray300"],"mappings":"60BAQqBA,E,0iBAInB,WACE,MAAO,K,oBAGT,WACE,IAAMC,EAAQC,KAAKC,WACnB,OACE,QAAC,IAAD,CAAeF,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,UAApB,SACGC,KAAKE,wB,GATJC,KAHWL,E,ooDCmBfM,E,goBASW,SAAAC,GACb,IAAMC,EAAU,EAAKC,MAAMC,KAE3B,EAAKC,UACH,SAAAF,GAAK,MAAK,CACRC,KAAMD,EAAMC,KAAKE,QAAO,qBAAEC,KAAeN,EAAcM,UAF3D,iBAIE,uGAEU,EAAKC,IAAIC,eAAe,uBAAwB,CACpDC,OAAQ,SACRN,KAAM,CAACH,cAAeA,EAAcM,MAJ1C,QAOII,SAAkBC,OAAE,kBAPxB,gDASI,EAAKP,SAAS,CACZD,KAAMF,KAERW,SAAgBD,OAAE,6CAZtB,6D,6CAfJ,WACE,MAAO,CAAC,CAAC,OAAQ,2B,sBAGnB,WACE,MAAO,0B,wBA4BT,WAAa,WACJR,EAAQR,KAAKO,MAAbC,KACDU,EAA0B,IAAhBV,EAAKW,OACrB,OACE,0BACE,QAAC,IAAD,CAAoBpB,MAAM,6BAC1B,QAACqB,EAAD,WACGC,QAAI,qEAAsE,CACzEC,MAAM,QAAC,EAAAC,KAAD,CAAMC,GAAG,gCAInB,QAAC,KAAD,YACE,QAAC,KAAD,WAAcR,OAAE,4BAEhB,QAAC,IAAD,WACGE,IACC,QAAC,IAAD,WACGF,OAAE,yDAILE,IACA,wBACGV,EAAKiB,KAAI,SAAApB,GAAa,OACrB,QAACqB,EAAD,YACE,QAACC,EAAD,YACE,QAACC,EAAD,UAAkBvB,EAAcwB,YAAYC,OAC3CzB,EAAc0B,cACb,QAACC,EAAD,WACE,aAAGC,KAAM5B,EAAc0B,YAAvB,SACG1B,EAAc0B,iBAIrB,QAACG,EAAD,UAAS7B,EAAc8B,OAAOC,KAAK,YAErC,QAAC,KAAD,CACEC,KAAK,QACLC,QAAS,kBAAM,EAAKC,aAAalC,IACjCmC,MAAM,QAAC,KAAD,QAfYnC,EAAcM,sB,GA3DlBb,KAuFpC,YAEA,IAAMsB,GAAc,OAAO,IAAP,qBAAH,cACF,SAAAqB,GAAC,OAAIA,EAAEC,MAAMC,wBADX,mBAEEC,OAAM,GAFR,KAKXlB,GAAkB,OAAOmB,KAAP,qBAAH,8CAIflB,GAAqB,OAAO,MAAP,qBAAH,qEAMlBC,GAAkB,OAAO,MAAP,qBAAH,mCAEFgB,OAAM,IAFJ,KASfZ,GAAM,OAAO,MAAP,qBAAH,kBACUY,OAAM,IADhB,eAEM,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,wBAFnB,KAKHT,GAAS,OAAO,MAAP,qBAAH,UACD,SAAAO,GAAC,OAAIA,EAAEC,MAAMI,UADZ,eAEG,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,wBAFhB","file":"chunks/app_views_settings_account_accountAuthorizations_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import {Link, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {IconDelete} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {ApiApplication} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\ntype Authorization = {\n  application: ApiApplication;\n  homepageUrl: string;\n  id: string;\n  scopes: string[];\n};\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  data: Authorization[];\n} & AsyncView['state'];\n\nclass AccountAuthorizations extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/api-authorizations/']];\n  }\n\n  getTitle() {\n    return 'Approved Applications';\n  }\n\n  handleRevoke = authorization => {\n    const oldData = this.state.data;\n\n    this.setState(\n      state => ({\n        data: state.data.filter(({id}) => id !== authorization.id),\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-authorizations/', {\n            method: 'DELETE',\n            data: {authorization: authorization.id},\n          });\n\n          addSuccessMessage(t('Saved changes'));\n        } catch (_err) {\n          this.setState({\n            data: oldData,\n          });\n          addErrorMessage(t('Unable to save changes, please try again'));\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const isEmpty = data.length === 0;\n    return (\n      <div>\n        <SettingsPageHeader title=\"Authorized Applications\" />\n        <Description>\n          {tct('You can manage your own applications via the [link:API dashboard].', {\n            link: <Link to=\"/settings/account/api/\" />,\n          })}\n        </Description>\n\n        <Panel>\n          <PanelHeader>{t('Approved Applications')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't approved any third party applications.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty && (\n              <div>\n                {data.map(authorization => (\n                  <PanelItemCenter key={authorization.id}>\n                    <ApplicationDetails>\n                      <ApplicationName>{authorization.application.name}</ApplicationName>\n                      {authorization.homepageUrl && (\n                        <Url>\n                          <a href={authorization.homepageUrl}>\n                            {authorization.homepageUrl}\n                          </a>\n                        </Url>\n                      )}\n                      <Scopes>{authorization.scopes.join(', ')}</Scopes>\n                    </ApplicationDetails>\n                    <Button\n                      size=\"small\"\n                      onClick={() => this.handleRevoke(authorization)}\n                      icon={<IconDelete />}\n                    />\n                  </PanelItemCenter>\n                ))}\n              </div>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default AccountAuthorizations;\n\nconst Description = styled('p')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  margin-bottom: ${space(4)};\n`;\n\nconst PanelItemCenter = styled(PanelItem)`\n  align-items: center;\n`;\n\nconst ApplicationDetails = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst ApplicationName = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n`;\n\n/**\n * Intentionally wrap <a> so that it does not take up full width and cause\n * hit box issues\n */\nconst Url = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst Scopes = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n"],"sourceRoot":""}