# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import paramiko_cloud.protobuf.csr_pb2 as csr__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rpc.proto',
  package='ssh_cert',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\trpc.proto\x12\x08ssh_cert\x1a\tcsr.proto\"\x8b\x01\n\x1e\x43loudCertificateSigningRequest\x12)\n\x08provider\x18\x01 \x01(\x0e\x32\x17.ssh_cert.CloudProvider\x12\x10\n\x08kmsKeyId\x18\x02 \x01(\t\x12,\n\x15signingRequestPayload\x18\x03 \x01(\x0b\x32\r.ssh_cert.CSR\"O\n\x1f\x43loudCertificateSigningResponse\x12\x17\n\x0f\x63\x65rtificateType\x18\x01 \x01(\t\x12\x13\n\x0b\x63\x65rtificate\x18\x02 \x01(\x0c\"]\n\x1eGetCertificateAuthorityRequest\x12)\n\x08provider\x18\x01 \x01(\x0e\x32\x17.ssh_cert.CloudProvider\x12\x10\n\x08kmsKeyId\x18\x02 \x01(\t\"E\n\x1fGetCertificateAuthorityResponse\x12\x0f\n\x07keyType\x18\x01 \x01(\t\x12\x11\n\tpublicKey\x18\x02 \x01(\x0c*,\n\rCloudProvider\x12\x07\n\x03\x41WS\x10\x00\x12\t\n\x05\x41ZURE\x10\x01\x12\x07\n\x03GCP\x10\x02\x32\xe4\x01\n\x06Signer\x12h\n\x0fSignCertificate\x12(.ssh_cert.CloudCertificateSigningRequest\x1a).ssh_cert.CloudCertificateSigningResponse\"\x00\x12p\n\x17GetCertificateAuthority\x12(.ssh_cert.GetCertificateAuthorityRequest\x1a).ssh_cert.GetCertificateAuthorityResponse\"\x00\x62\x06proto3'
  ,
  dependencies=[csr__pb2.DESCRIPTOR,])

_CLOUDPROVIDER = _descriptor.EnumDescriptor(
  name='CloudProvider',
  full_name='ssh_cert.CloudProvider',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AWS', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AZURE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='GCP', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=423,
  serialized_end=467,
)
_sym_db.RegisterEnumDescriptor(_CLOUDPROVIDER)

CloudProvider = enum_type_wrapper.EnumTypeWrapper(_CLOUDPROVIDER)
AWS = 0
AZURE = 1
GCP = 2



_CLOUDCERTIFICATESIGNINGREQUEST = _descriptor.Descriptor(
  name='CloudCertificateSigningRequest',
  full_name='ssh_cert.CloudCertificateSigningRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='provider', full_name='ssh_cert.CloudCertificateSigningRequest.provider', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='kmsKeyId', full_name='ssh_cert.CloudCertificateSigningRequest.kmsKeyId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signingRequestPayload', full_name='ssh_cert.CloudCertificateSigningRequest.signingRequestPayload', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=174,
)


_CLOUDCERTIFICATESIGNINGRESPONSE = _descriptor.Descriptor(
  name='CloudCertificateSigningResponse',
  full_name='ssh_cert.CloudCertificateSigningResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='certificateType', full_name='ssh_cert.CloudCertificateSigningResponse.certificateType', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='certificate', full_name='ssh_cert.CloudCertificateSigningResponse.certificate', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=176,
  serialized_end=255,
)


_GETCERTIFICATEAUTHORITYREQUEST = _descriptor.Descriptor(
  name='GetCertificateAuthorityRequest',
  full_name='ssh_cert.GetCertificateAuthorityRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='provider', full_name='ssh_cert.GetCertificateAuthorityRequest.provider', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='kmsKeyId', full_name='ssh_cert.GetCertificateAuthorityRequest.kmsKeyId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=257,
  serialized_end=350,
)


_GETCERTIFICATEAUTHORITYRESPONSE = _descriptor.Descriptor(
  name='GetCertificateAuthorityResponse',
  full_name='ssh_cert.GetCertificateAuthorityResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='keyType', full_name='ssh_cert.GetCertificateAuthorityResponse.keyType', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='publicKey', full_name='ssh_cert.GetCertificateAuthorityResponse.publicKey', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=352,
  serialized_end=421,
)

_CLOUDCERTIFICATESIGNINGREQUEST.fields_by_name['provider'].enum_type = _CLOUDPROVIDER
_CLOUDCERTIFICATESIGNINGREQUEST.fields_by_name['signingRequestPayload'].message_type = csr__pb2._CSR
_GETCERTIFICATEAUTHORITYREQUEST.fields_by_name['provider'].enum_type = _CLOUDPROVIDER
DESCRIPTOR.message_types_by_name['CloudCertificateSigningRequest'] = _CLOUDCERTIFICATESIGNINGREQUEST
DESCRIPTOR.message_types_by_name['CloudCertificateSigningResponse'] = _CLOUDCERTIFICATESIGNINGRESPONSE
DESCRIPTOR.message_types_by_name['GetCertificateAuthorityRequest'] = _GETCERTIFICATEAUTHORITYREQUEST
DESCRIPTOR.message_types_by_name['GetCertificateAuthorityResponse'] = _GETCERTIFICATEAUTHORITYRESPONSE
DESCRIPTOR.enum_types_by_name['CloudProvider'] = _CLOUDPROVIDER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CloudCertificateSigningRequest = _reflection.GeneratedProtocolMessageType('CloudCertificateSigningRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLOUDCERTIFICATESIGNINGREQUEST,
  '__module__' : 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:ssh_cert.CloudCertificateSigningRequest)
  })
_sym_db.RegisterMessage(CloudCertificateSigningRequest)

CloudCertificateSigningResponse = _reflection.GeneratedProtocolMessageType('CloudCertificateSigningResponse', (_message.Message,), {
  'DESCRIPTOR' : _CLOUDCERTIFICATESIGNINGRESPONSE,
  '__module__' : 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:ssh_cert.CloudCertificateSigningResponse)
  })
_sym_db.RegisterMessage(CloudCertificateSigningResponse)

GetCertificateAuthorityRequest = _reflection.GeneratedProtocolMessageType('GetCertificateAuthorityRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCERTIFICATEAUTHORITYREQUEST,
  '__module__' : 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:ssh_cert.GetCertificateAuthorityRequest)
  })
_sym_db.RegisterMessage(GetCertificateAuthorityRequest)

GetCertificateAuthorityResponse = _reflection.GeneratedProtocolMessageType('GetCertificateAuthorityResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCERTIFICATEAUTHORITYRESPONSE,
  '__module__' : 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:ssh_cert.GetCertificateAuthorityResponse)
  })
_sym_db.RegisterMessage(GetCertificateAuthorityResponse)



_SIGNER = _descriptor.ServiceDescriptor(
  name='Signer',
  full_name='ssh_cert.Signer',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=470,
  serialized_end=698,
  methods=[
  _descriptor.MethodDescriptor(
    name='SignCertificate',
    full_name='ssh_cert.Signer.SignCertificate',
    index=0,
    containing_service=None,
    input_type=_CLOUDCERTIFICATESIGNINGREQUEST,
    output_type=_CLOUDCERTIFICATESIGNINGRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetCertificateAuthority',
    full_name='ssh_cert.Signer.GetCertificateAuthority',
    index=1,
    containing_service=None,
    input_type=_GETCERTIFICATEAUTHORITYREQUEST,
    output_type=_GETCERTIFICATEAUTHORITYRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_SIGNER)

DESCRIPTOR.services_by_name['Signer'] = _SIGNER

# @@protoc_insertion_point(module_scope)
