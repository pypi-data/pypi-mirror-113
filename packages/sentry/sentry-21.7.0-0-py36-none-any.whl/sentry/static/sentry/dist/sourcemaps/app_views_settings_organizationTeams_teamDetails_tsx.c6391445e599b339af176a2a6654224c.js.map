{"version":3,"sources":["webpack:///./app/actionCreators/teams.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/organizationTeams/teamDetails.tsx"],"names":["doCallback","params","name","args","callIfFunction","fetchTeamDetails","api","options","TeamActions","teamId","request","orgId","success","data","error","updateTeamSuccess","updateTeam","endpoint","method","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","addSuccessMessage","tct","slug","organization","err","addErrorMessage","removeTeam","SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","recreateRoute","to","lastRootIndex","routeIndex","routes","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","TeamDetails","getInitialState","props","state","setState","requesting","loading","browserHistory","TeamStore","this","prevProps","fetchData","isEqual","teams","setActiveTeam","hasAccess","type","RequestAccessWrapper","teamSlug","disabled","isPending","size","onClick","handleRequestAccess","t","onRetry","routePrefix","hideAvatar","avatarSize","underlined","React","onTeamChange","withApi","withTeams"],"mappings":"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","file":"chunks/app_views_settings_organizationTeams_teamDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import * as React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {fetchTeamDetails, joinTeam} from 'app/actionCreators/teams';\nimport {Client} from 'app/api';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport ListLink from 'app/components/links/listLink';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport NavTabs from 'app/components/navTabs';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t, tct} from 'app/locale';\nimport TeamStore from 'app/stores/teamStore';\nimport {Team} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withApi from 'app/utils/withApi';\nimport withTeams from 'app/utils/withTeams';\n\ntype Props = {\n  api: Client;\n  teams: Team[];\n  children: React.ReactNode;\n} & RouteComponentProps<{orgId: string; teamId: string}, {}>;\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  requesting: boolean;\n  team: Team | null;\n};\n\nclass TeamDetails extends React.Component<Props, State> {\n  state = this.getInitialState();\n\n  getInitialState(): State {\n    const team = TeamStore.getBySlug(this.props.params.teamId);\n\n    return {\n      loading: !TeamStore.initialized,\n      error: false,\n      requesting: false,\n      team,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {params} = this.props;\n\n    if (\n      prevProps.params.teamId !== params.teamId ||\n      prevProps.params.orgId !== params.orgId\n    ) {\n      this.fetchData();\n    }\n    if (!isEqual(this.props.teams, prevProps.teams)) {\n      this.setActiveTeam();\n    }\n  }\n\n  setActiveTeam() {\n    const team = TeamStore.getBySlug(this.props.params.teamId);\n    const loading = !TeamStore.initialized;\n    const error = !loading && !team;\n\n    this.setState({team, loading, error});\n  }\n\n  handleRequestAccess = () => {\n    const {api, params} = this.props;\n    const {team} = this.state;\n    if (!team) {\n      return;\n    }\n\n    this.setState({\n      requesting: true,\n    });\n\n    joinTeam(\n      api,\n      {\n        orgId: params.orgId,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          addSuccessMessage(\n            tct('You have requested access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          this.setState({\n            requesting: false,\n          });\n        },\n        error: () => {\n          addErrorMessage(\n            tct('Unable to request access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          this.setState({\n            requesting: false,\n          });\n        },\n      }\n    );\n  };\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n    fetchTeamDetails(this.props.api, this.props.params);\n  };\n\n  onTeamChange = (data: Team) => {\n    const team = this.state.team;\n    if (data.slug !== team?.slug) {\n      const orgId = this.props.params.orgId;\n      browserHistory.replace(`/organizations/${orgId}/teams/${data.slug}/settings/`);\n    } else {\n      this.setState({\n        team: {\n          ...team,\n          ...data,\n        },\n      });\n    }\n  };\n\n  render() {\n    const {params, routes, children} = this.props;\n    const {team, loading, requesting, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n    if (!team || !team.hasAccess) {\n      return (\n        <Alert type=\"warning\">\n          {team ? (\n            <RequestAccessWrapper>\n              {tct('You do not have access to the [teamSlug] team.', {\n                teamSlug: <strong>{`#${team.slug}`}</strong>,\n              })}\n              <Button\n                disabled={requesting || team.isPending}\n                size=\"small\"\n                onClick={this.handleRequestAccess}\n              >\n                {team.isPending ? t('Request Pending') : t('Request Access')}\n              </Button>\n            </RequestAccessWrapper>\n          ) : (\n            <div>{t('You do not have access to this team.')}</div>\n          )}\n        </Alert>\n      );\n    }\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    const routePrefix = recreateRoute('', {routes, params, stepBack: -1}); // `/organizations/${orgId}/teams/${teamId}`;\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Team Details')} orgSlug={params.orgId} />\n        <h3>\n          <IdBadge hideAvatar team={team} avatarSize={36} />\n        </h3>\n\n        <NavTabs underlined>\n          <ListLink to={`${routePrefix}members/`}>{t('Members')}</ListLink>\n          <ListLink to={`${routePrefix}projects/`}>{t('Projects')}</ListLink>\n          <ListLink to={`${routePrefix}settings/`}>{t('Settings')}</ListLink>\n        </NavTabs>\n\n        {React.isValidElement(children) &&\n          React.cloneElement(children, {\n            team,\n            onTeamChange: this.onTeamChange,\n          })}\n      </div>\n    );\n  }\n}\n\nexport default withApi(withTeams(TeamDetails));\n\nconst RequestAccessWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n"],"sourceRoot":""}