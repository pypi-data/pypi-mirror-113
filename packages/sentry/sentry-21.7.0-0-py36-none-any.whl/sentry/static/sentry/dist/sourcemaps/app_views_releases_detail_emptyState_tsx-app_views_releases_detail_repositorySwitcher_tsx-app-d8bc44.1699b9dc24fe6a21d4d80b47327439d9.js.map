{"version":3,"sources":["webpack:///./app/actions/repositoryActions.tsx","webpack:///./app/components/charts/components/markLine.tsx","webpack:///./app/stores/repositoryStore.tsx","webpack:///./app/utils/withRepositories.tsx","webpack:///./app/actionCreators/repositories.tsx","webpack:///./app/views/releases/detail/emptyState.tsx","webpack:///./app/views/releases/detail/repositorySwitcher.tsx","webpack:///./app/views/releases/detail/utils.tsx","webpack:///./app/views/releases/detail/withReleaseRepos.tsx","webpack:///./app/views/releases/utils/sessionTerm.tsx"],"names":["Reflux","MarkLine","props","symbol","RepositoryStoreConfig","listenables","RepoActions","state","orgSlug","undefined","repositories","repositoriesLoading","repositoriesError","init","this","resetRepositories","trigger","loadRepositories","loadRepositoriesError","err","loadRepositoriesSuccess","data","get","INITIAL_STATE","WrappedComponent","WithRepositories","context","RepositoryStore","onStoreUpdate","organization","slug","repoData","RepositoryActions","fetchRepositories","unsubscribe","api","params","path","requestPromise","method","then","res","catch","Sentry","scope","setLevel","setFingerprint","getRepositories","setState","React","getDisplayName","EmptyState","children","RepositorySwitcher","createRef","activeRepo","router","location","push","query","cursor","setButtonDropDownWidth","dropdownButtonWidth","dropdownButton","current","offsetWidth","activeRepository","name","StyledDropdownControl","minMenuWidth","label","Fragment","FilterText","t","buttonProps","forwardRef","map","repo","repoName","onSelect","handleRepoFilterChange","eventKey","isActive","RepoLabel","PureComponent","DropdownControl","space","p","theme","borderRadius","button","default","border","gray300","overflowEllipsis","getFilesByRepository","fileList","reduce","filesByRepository","file","filename","author","type","hasOwnProperty","authors","types","Set","email","add","getCommitsByRepository","commitList","commitsByRepository","commit","repositoryName","repository","getQuery","perPage","pick","Object","values","URL_PARAM","per_page","repo_name","getReposToRender","repos","getReleaseEventView","selection","version","projects","environments","datetime","start","end","period","apdexField","features","includes","apdexThreshold","discoverQuery","id","fields","QueryResults","formatString","range","environment","getUtcDateString","EventView","releaseComparisonChartLabels","ReleaseComparisonChartType","releaseComparisonChartTitles","releaseComparisonChartHelp","commonTermsDescription","SessionTerm","generateReleaseMarkLine","title","position","options","hideLabel","axisIndex","seriesName","value","yAxisIndex","xAxisIndex","color","markLine","silent","lineStyle","formatter","font","fontSize","xAxis","releaseMarkLinesLabels","created","adopted","unadopted","generateReleaseMarkLines","release","projectSlug","adoptionStages","markLines","moment","dateCreated","valueOf","WithReleaseRepos","releaseRepos","isLoading","fetchReleaseRepos","nextProps","setActiveReleaseRepo","prevProps","prevState","length","activeReleaseRepo","activeCommitRepo","matchedRepository","find","commitRepo","addErrorMessage","orgId","project","releasePath","encodeURIComponent","fullWidth","dashedBorder","icon","size","description","action","priority","to","ReleaseContext","withApi","withOrganization","withRepositories","sessionTerm","CRASHES","CRASHED","ABNORMAL","CRASH_FREE_USERS","CRASH_FREE_SESSIONS","HEALTHY","ERRORED","UNHANDLED","ADOPTION","CRASH_FREE","STABILITY","mobileTermsDescription","desktopTermDescriptions","crashed","getSessionTermDescription","term","platform","split","healthy","errored","unhandled","getTermDescriptions"],"mappings":"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","file":"chunks/app_views_releases_detail_emptyState_tsx-app_views_releases_detail_repositorySwitcher_tsx-app-d8bc44.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import Reflux from 'reflux';\n\nexport default Reflux.createActions([\n  'resetRepositories',\n  'loadRepositories',\n  'loadRepositoriesError',\n  'loadRepositoriesSuccess',\n]);\n","import 'echarts/lib/component/markLine';\n\nimport {EChartOption} from 'echarts';\n\n/**\n * eCharts markLine\n *\n * See https://echarts.apache.org/en/option.html#series-line.markLine\n */\nexport default function MarkLine(\n  props: EChartOption.SeriesLine['markLine']\n): EChartOption.SeriesLine['markLine'] {\n  return {\n    // The second symbol is a very ugly arrow, we don't want it\n    symbol: ['none', 'none'],\n    ...props,\n  };\n}\n","import Reflux from 'reflux';\n\nimport RepoActions from 'app/actions/repositoryActions';\nimport {Repository} from 'app/types';\n\ntype RepositoryStoreInterface = {\n  get(): {\n    orgSlug?: string;\n    repositories?: Repository[];\n    repositoriesLoading?: boolean;\n    repositoriesError?: Error;\n  };\n\n  state: {\n    orgSlug?: string;\n    repositories?: Repository[];\n    repositoriesLoading?: boolean;\n    repositoriesError?: Error;\n  };\n\n  loadRepositories(orgSlug: string): void;\n  loadRepositoriesSuccess(data: Repository[]): void;\n  loadRepositoriesError(error: Error): void;\n};\n\nexport const RepositoryStoreConfig: Reflux.StoreDefinition & RepositoryStoreInterface = {\n  listenables: RepoActions,\n  state: {\n    orgSlug: undefined,\n    repositories: undefined,\n    repositoriesLoading: undefined,\n    repositoriesError: undefined,\n  },\n\n  init() {\n    this.resetRepositories();\n  },\n\n  resetRepositories() {\n    this.state = {\n      orgSlug: undefined,\n      repositories: undefined,\n      repositoriesLoading: undefined,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositories(orgSlug: string) {\n    this.state = {\n      orgSlug,\n      repositories: orgSlug === this.state.orgSlug ? this.state.repositories : undefined,\n      repositoriesLoading: true,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositoriesError(err: Error) {\n    this.state = {\n      ...this.state,\n      repositories: undefined,\n      repositoriesLoading: false,\n      repositoriesError: err,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositoriesSuccess(data: Repository[]) {\n    this.state = {\n      ...this.state,\n      repositories: data,\n      repositoriesLoading: false,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  get() {\n    return {...this.state};\n  },\n};\n\ntype RepositoryStore = Reflux.Store & RepositoryStoreInterface;\n\nconst RepositoryStore = Reflux.createStore(RepositoryStoreConfig) as RepositoryStore;\n\nexport default RepositoryStore;\n","import * as React from 'react';\n\nimport {getRepositories} from 'app/actionCreators/repositories';\nimport RepositoryActions from 'app/actions/repositoryActions';\nimport {Client} from 'app/api';\nimport RepositoryStore from 'app/stores/repositoryStore';\nimport {Organization, Repository} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\n\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n};\n\ntype InjectedProps = {\n  repositories?: Repository[];\n  repositoriesLoading?: boolean;\n  repositoriesError?: Error;\n};\n\nconst INITIAL_STATE: InjectedProps = {\n  repositories: undefined,\n  repositoriesLoading: undefined,\n  repositoriesError: undefined,\n};\n\nfunction withRepositories<P extends DependentProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithRepositories extends React.Component<P & DependentProps, InjectedProps> {\n    static displayName = `withRepositories(${getDisplayName(WrappedComponent)})`;\n\n    constructor(props: P & DependentProps, context: any) {\n      super(props, context);\n\n      const {organization} = this.props;\n      const orgSlug = organization.slug;\n      const repoData = RepositoryStore.get();\n\n      if (repoData.orgSlug !== orgSlug) {\n        RepositoryActions.resetRepositories();\n      }\n\n      this.state =\n        repoData.orgSlug === orgSlug\n          ? {...INITIAL_STATE, ...repoData}\n          : {...INITIAL_STATE};\n    }\n\n    componentDidMount() {\n      // XXX(leedongwei): Do not move this function call unless you modify the\n      // unit test named \"prevents repeated calls\"\n      this.fetchRepositories();\n    }\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n    unsubscribe = RepositoryStore.listen(() => this.onStoreUpdate(), undefined);\n\n    fetchRepositories() {\n      const {api, organization} = this.props;\n      const orgSlug = organization.slug;\n      const repoData = RepositoryStore.get();\n\n      // XXX(leedongwei): Do not check the orgSlug here. It would have been\n      // verified at `getInitialState`. The short-circuit hack in actionCreator\n      // does not update the orgSlug in the store.\n      if (\n        (!repoData.repositories && !repoData.repositoriesLoading) ||\n        repoData.repositoriesError\n      ) {\n        getRepositories(api, {orgSlug});\n      }\n    }\n\n    onStoreUpdate() {\n      const repoData = RepositoryStore.get();\n      this.setState({...repoData});\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return WithRepositories;\n}\n\nexport default withRepositories;\n","import * as Sentry from '@sentry/react';\n\nimport RepositoryActions from 'app/actions/repositoryActions';\nimport {Client} from 'app/api';\nimport RepositoryStore from 'app/stores/repositoryStore';\nimport {Repository} from 'app/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n};\n\nexport function getRepositories(api: Client, params: ParamsGet) {\n  const {orgSlug} = params;\n  const path = `/organizations/${orgSlug}/repos/`;\n\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRepo for the same\n  // repo to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  RepositoryStore.state.repositoriesLoading = true;\n  RepositoryActions.loadRepositories(orgSlug);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Repository[]) => {\n      RepositoryActions.loadRepositoriesSuccess(res);\n    })\n    .catch(err => {\n      RepositoryActions.loadRepositoriesError(err);\n      Sentry.withScope(scope => {\n        scope.setLevel(Sentry.Severity.Warning);\n        scope.setFingerprint(['getRepositories-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n","import * as React from 'react';\n\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport {Panel, PanelBody} from 'app/components/panels';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst EmptyState = ({children}: Props) => (\n  <Panel>\n    <PanelBody>\n      <EmptyStateWarning>\n        <p>{children}</p>\n      </EmptyStateWarning>\n    </PanelBody>\n  </Panel>\n);\n\nexport default EmptyState;\n","import {createRef, Fragment, PureComponent} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport DropdownControl, {DropdownItem} from 'app/components/dropdownControl';\nimport {t} from 'app/locale';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {Repository} from 'app/types';\n\ntype Props = {\n  repositories: Array<Repository>;\n  router: InjectedRouter;\n  location: Location;\n  activeRepository?: Repository;\n};\n\ntype State = {\n  dropdownButtonWidth?: number;\n};\n\nclass RepositorySwitcher extends PureComponent<Props, State> {\n  state: State = {};\n\n  componentDidMount() {\n    this.setButtonDropDownWidth();\n  }\n  setButtonDropDownWidth() {\n    const dropdownButtonWidth = this.dropdownButton?.current?.offsetWidth;\n    if (dropdownButtonWidth) {\n      this.setState({dropdownButtonWidth});\n    }\n  }\n\n  dropdownButton = createRef<HTMLButtonElement>();\n  handleRepoFilterChange = (activeRepo: string) => {\n    const {router, location} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, activeRepo},\n    });\n  };\n\n  render() {\n    const {activeRepository, repositories} = this.props;\n    const {dropdownButtonWidth} = this.state;\n\n    const activeRepo = activeRepository?.name;\n\n    return (\n      <StyledDropdownControl\n        minMenuWidth={dropdownButtonWidth}\n        label={\n          <Fragment>\n            <FilterText>{`${t('Filter')}:`}</FilterText>\n            {activeRepo}\n          </Fragment>\n        }\n        buttonProps={{forwardRef: this.dropdownButton}}\n      >\n        {repositories\n          .map(repo => repo.name)\n          .map(repoName => (\n            <DropdownItem\n              key={repoName}\n              onSelect={this.handleRepoFilterChange}\n              eventKey={repoName}\n              isActive={repoName === activeRepo}\n            >\n              <RepoLabel>{repoName}</RepoLabel>\n            </DropdownItem>\n          ))}\n      </StyledDropdownControl>\n    );\n  }\n}\n\nexport default RepositorySwitcher;\n\nconst StyledDropdownControl = styled(DropdownControl)<{\n  minMenuWidth: State['dropdownButtonWidth'];\n}>`\n  margin-bottom: ${space(1)};\n  > *:nth-child(2) {\n    right: auto;\n    width: auto;\n    ${p => p.minMenuWidth && `min-width: calc(${p.minMenuWidth}px + 10px);`}\n    border-radius: ${p => p.theme.borderRadius};\n    border-top-left-radius: 0px;\n    border: 1px solid ${p => p.theme.button.default.border};\n    top: calc(100% - 1px);\n  }\n`;\n\nconst FilterText = styled('em')`\n  font-style: normal;\n  color: ${p => p.theme.gray300};\n  margin-right: ${space(0.5)};\n`;\n\nconst RepoLabel = styled('div')`\n  ${overflowEllipsis}\n`;\n","import {Location} from 'history';\nimport pick from 'lodash/pick';\nimport moment from 'moment';\n\nimport MarkLine from 'app/components/charts/components/markLine';\nimport {URL_PARAM} from 'app/constants/globalSelectionHeader';\nimport {t} from 'app/locale';\nimport {\n  Commit,\n  CommitFile,\n  FilesByRepository,\n  GlobalSelection,\n  LightWeightOrganization,\n  ReleaseComparisonChartType,\n  ReleaseWithHealth,\n  Repository,\n} from 'app/types';\nimport {getUtcDateString} from 'app/utils/dates';\nimport EventView from 'app/utils/discover/eventView';\nimport {Theme} from 'app/utils/theme';\nimport {QueryResults} from 'app/utils/tokenizeSearch';\n\nimport {commonTermsDescription, SessionTerm} from '../utils/sessionTerm';\n\nexport type CommitsByRepository = {\n  [key: string]: Commit[];\n};\n\n/**\n * Convert list of individual file changes into a per-file summary grouped by repository\n */\nexport function getFilesByRepository(fileList: CommitFile[]) {\n  return fileList.reduce<FilesByRepository>((filesByRepository, file) => {\n    const {filename, repoName, author, type} = file;\n\n    if (!filesByRepository.hasOwnProperty(repoName)) {\n      filesByRepository[repoName] = {};\n    }\n\n    if (!filesByRepository[repoName].hasOwnProperty(filename)) {\n      filesByRepository[repoName][filename] = {\n        authors: {},\n        types: new Set(),\n      };\n    }\n\n    if (author.email) {\n      filesByRepository[repoName][filename].authors[author.email] = author;\n    }\n\n    filesByRepository[repoName][filename].types.add(type);\n\n    return filesByRepository;\n  }, {});\n}\n\n/**\n * Convert list of individual commits into a summary grouped by repository\n */\nexport function getCommitsByRepository(commitList: Commit[]): CommitsByRepository {\n  return commitList.reduce((commitsByRepository, commit) => {\n    const repositoryName = commit.repository?.name ?? t('unknown');\n\n    if (!commitsByRepository.hasOwnProperty(repositoryName)) {\n      commitsByRepository[repositoryName] = [];\n    }\n\n    commitsByRepository[repositoryName].push(commit);\n\n    return commitsByRepository;\n  }, {});\n}\n\n/**\n * Get request query according to the url params and active repository\n */\n\ntype GetQueryProps = {\n  location: Location;\n  perPage?: number;\n  activeRepository?: Repository;\n};\n\nexport function getQuery({location, perPage = 40, activeRepository}: GetQueryProps) {\n  const query = {\n    ...pick(location.query, [...Object.values(URL_PARAM), 'cursor']),\n    per_page: perPage,\n  };\n\n  if (!activeRepository) {\n    return query;\n  }\n\n  return {...query, repo_name: activeRepository.name};\n}\n\n/**\n * Get repositories to render according to the activeRepository\n */\nexport function getReposToRender(repos: Array<string>, activeRepository?: Repository) {\n  if (!activeRepository) {\n    return repos;\n  }\n  return [activeRepository.name];\n}\n\n/**\n * Get high level transaction information for this release\n */\nexport function getReleaseEventView(\n  selection: GlobalSelection,\n  version: string,\n  organization: LightWeightOrganization\n): EventView {\n  const {projects, environments, datetime} = selection;\n  const {start, end, period} = datetime;\n\n  const apdexField = organization.features.includes('project-transaction-threshold')\n    ? 'apdex()'\n    : `apdex(${organization.apdexThreshold})`;\n\n  const discoverQuery = {\n    id: undefined,\n    version: 2,\n    name: `${t('Release Apdex')}`,\n    fields: [apdexField],\n    query: new QueryResults([\n      `release:${version}`,\n      'event.type:transaction',\n      'count():>0',\n    ]).formatString(),\n    range: period,\n    environment: environments,\n    projects,\n    start: start ? getUtcDateString(start) : undefined,\n    end: end ? getUtcDateString(end) : undefined,\n  } as const;\n\n  return EventView.fromSavedQuery(discoverQuery);\n}\n\nexport const releaseComparisonChartLabels = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]: t('Crash Free Session Rate'),\n  [ReleaseComparisonChartType.HEALTHY_SESSIONS]: t('Healthy'),\n  [ReleaseComparisonChartType.ABNORMAL_SESSIONS]: t('Abnormal'),\n  [ReleaseComparisonChartType.ERRORED_SESSIONS]: t('Errored'),\n  [ReleaseComparisonChartType.CRASHED_SESSIONS]: t('Crashed Session Rate'),\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]: t('Crash Free User Rate'),\n  [ReleaseComparisonChartType.HEALTHY_USERS]: t('Healthy'),\n  [ReleaseComparisonChartType.ABNORMAL_USERS]: t('Abnormal'),\n  [ReleaseComparisonChartType.ERRORED_USERS]: t('Errored'),\n  [ReleaseComparisonChartType.CRASHED_USERS]: t('Crashed User Rate'),\n  [ReleaseComparisonChartType.SESSION_COUNT]: t('Session Count'),\n  [ReleaseComparisonChartType.USER_COUNT]: t('User Count'),\n  [ReleaseComparisonChartType.ERROR_COUNT]: t('Error Count'),\n  [ReleaseComparisonChartType.TRANSACTION_COUNT]: t('Transaction Count'),\n  [ReleaseComparisonChartType.FAILURE_RATE]: t('Failure Rate'),\n};\n\nexport const releaseComparisonChartTitles = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]: t('Crash Free Session Rate'),\n  [ReleaseComparisonChartType.HEALTHY_SESSIONS]: t('Healthy Session Rate'),\n  [ReleaseComparisonChartType.ABNORMAL_SESSIONS]: t('Abnormal Session Rate'),\n  [ReleaseComparisonChartType.ERRORED_SESSIONS]: t('Errored Session Rate'),\n  [ReleaseComparisonChartType.CRASHED_SESSIONS]: t('Crashed Session Rate'),\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]: t('Crash Free User Rate'),\n  [ReleaseComparisonChartType.HEALTHY_USERS]: t('Healthy User Rate'),\n  [ReleaseComparisonChartType.ABNORMAL_USERS]: t('Abnormal User Rate'),\n  [ReleaseComparisonChartType.ERRORED_USERS]: t('Errored User Rate'),\n  [ReleaseComparisonChartType.CRASHED_USERS]: t('Crashed User Rate'),\n  [ReleaseComparisonChartType.SESSION_COUNT]: t('Session Count'),\n  [ReleaseComparisonChartType.USER_COUNT]: t('User Count'),\n  [ReleaseComparisonChartType.ERROR_COUNT]: t('Error Count'),\n  [ReleaseComparisonChartType.TRANSACTION_COUNT]: t('Transaction Count'),\n  [ReleaseComparisonChartType.FAILURE_RATE]: t('Failure Rate'),\n};\n\nexport const releaseComparisonChartHelp = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]:\n    commonTermsDescription[SessionTerm.CRASH_FREE_SESSIONS],\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]:\n    commonTermsDescription[SessionTerm.CRASH_FREE_USERS],\n  [ReleaseComparisonChartType.SESSION_COUNT]: t(\n    'The number of sessions in a given period.'\n  ),\n  [ReleaseComparisonChartType.USER_COUNT]: t('The number of users in a given period.'),\n};\n\ntype GenerateReleaseMarklineOptions = {\n  hideLabel?: boolean;\n  axisIndex?: number;\n};\n\nfunction generateReleaseMarkLine(\n  title: string,\n  position: number,\n  theme: Theme,\n  options?: GenerateReleaseMarklineOptions\n) {\n  const {hideLabel, axisIndex} = options || {};\n\n  return {\n    seriesName: title,\n    type: 'line',\n    data: [{name: position, value: null as any}], // TODO(ts): echart types\n    yAxisIndex: axisIndex ?? undefined,\n    xAxisIndex: axisIndex ?? undefined,\n    color: theme.gray300,\n    markLine: MarkLine({\n      silent: true,\n      lineStyle: {color: theme.gray300, type: 'solid'},\n      label: {\n        position: 'insideEndBottom',\n        formatter: hideLabel ? '' : title,\n        font: 'Rubik',\n        fontSize: 11,\n      } as any, // TODO(ts): weird echart types,\n      data: [\n        {\n          xAxis: position,\n        },\n      ] as any, // TODO(ts): weird echart types\n    }),\n  };\n}\n\nexport const releaseMarkLinesLabels = {\n  created: t('Release Created'),\n  adopted: t('Adopted'),\n  unadopted: t('Unadopted'),\n};\n\nexport function generateReleaseMarkLines(\n  release: ReleaseWithHealth,\n  projectSlug: string,\n  theme: Theme,\n  options?: GenerateReleaseMarklineOptions\n) {\n  const adoptionStages = release.adoptionStages?.[projectSlug];\n\n  const markLines = [\n    generateReleaseMarkLine(\n      releaseMarkLinesLabels.created,\n      moment(release.dateCreated).valueOf(),\n      theme,\n      options\n    ),\n  ];\n\n  if (adoptionStages?.adopted) {\n    markLines.push(\n      generateReleaseMarkLine(\n        releaseMarkLinesLabels.adopted,\n        moment(adoptionStages.adopted).valueOf(),\n        theme,\n        options\n      )\n    );\n  }\n\n  if (adoptionStages?.unadopted) {\n    markLines.push(\n      generateReleaseMarkLine(\n        releaseMarkLinesLabels.unadopted,\n        moment(adoptionStages.unadopted).valueOf(),\n        theme,\n        options\n      )\n    );\n  }\n\n  return markLines;\n}\n","import * as React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {Body, Main} from 'app/components/layouts/thirds';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel} from 'app/components/panels';\nimport {IconCommit} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Organization, Repository} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withRepositories from 'app/utils/withRepositories';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\nimport {ReleaseContext} from '.';\n\n// These props are required when using this HoC\ntype DependentProps = RouteComponentProps<{orgId: string; release: string}, {}>;\n\ntype HoCsProps = {\n  api: Client;\n  organization: Organization;\n  repositories?: Repository[];\n  repositoriesLoading?: boolean;\n  repositoriesError?: Error;\n};\n\ntype State = {\n  releaseRepos: Repository[];\n  isLoading: boolean;\n  activeReleaseRepo?: Repository;\n};\n\nfunction withReleaseRepos<P extends DependentProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithReleaseRepos extends React.Component<P & HoCsProps, State> {\n    static displayName = `withReleaseRepos(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      releaseRepos: [],\n      isLoading: true,\n    };\n\n    componentDidMount() {\n      this.fetchReleaseRepos();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps: P & HoCsProps) {\n      this.setActiveReleaseRepo(nextProps);\n    }\n\n    componentDidUpdate(prevProps: P & HoCsProps, prevState: State) {\n      if (\n        this.props.params.release !== prevProps.params.release ||\n        (!!prevProps.repositoriesLoading && !this.props.repositoriesLoading)\n      ) {\n        this.fetchReleaseRepos();\n        return;\n      }\n\n      if (prevState.releaseRepos.length !== this.state.releaseRepos.length) {\n        this.setActiveReleaseRepo(this.props);\n      }\n    }\n\n    static contextType = ReleaseContext;\n\n    setActiveReleaseRepo(props: P & HoCsProps) {\n      const {releaseRepos, activeReleaseRepo} = this.state;\n\n      if (!releaseRepos.length) {\n        return;\n      }\n\n      const activeCommitRepo = props.location.query?.activeRepo;\n\n      if (!activeCommitRepo) {\n        this.setState({\n          activeReleaseRepo: releaseRepos[0] ?? null,\n        });\n        return;\n      }\n\n      if (activeCommitRepo === activeReleaseRepo?.name) {\n        return;\n      }\n\n      const matchedRepository = releaseRepos.find(\n        commitRepo => commitRepo.name === activeCommitRepo\n      );\n\n      if (matchedRepository) {\n        this.setState({\n          activeReleaseRepo: matchedRepository,\n        });\n        return;\n      }\n\n      addErrorMessage(t('The repository you were looking for was not found.'));\n    }\n\n    async fetchReleaseRepos() {\n      const {params, api, repositories, repositoriesLoading} = this.props;\n\n      if (repositoriesLoading === undefined || repositoriesLoading === true) {\n        return;\n      }\n\n      if (!repositories?.length) {\n        this.setState({isLoading: false});\n        return;\n      }\n\n      const {release, orgId} = params;\n      const {project} = this.context;\n\n      this.setState({isLoading: true});\n\n      try {\n        const releasePath = encodeURIComponent(release);\n        const releaseRepos = await api.requestPromise(\n          `/projects/${orgId}/${project.slug}/releases/${releasePath}/repositories/`\n        );\n        this.setState({releaseRepos, isLoading: false});\n        this.setActiveReleaseRepo(this.props);\n      } catch (error) {\n        Sentry.captureException(error);\n        addErrorMessage(\n          t(\n            'An error occured while trying to fetch the repositories of the release: %s',\n            release\n          )\n        );\n      }\n    }\n\n    render() {\n      const {isLoading, activeReleaseRepo, releaseRepos} = this.state;\n      const {repositoriesLoading, repositories, params, router, location, organization} =\n        this.props;\n\n      if (isLoading || repositoriesLoading) {\n        return <LoadingIndicator />;\n      }\n\n      const noRepositoryOrgRelatedFound = !repositories?.length;\n\n      if (noRepositoryOrgRelatedFound) {\n        const {orgId} = params;\n        return (\n          <Body>\n            <Main fullWidth>\n              <Panel dashedBorder>\n                <EmptyMessage\n                  icon={<IconCommit size=\"xl\" />}\n                  title={t('Releases are better with commit data!')}\n                  description={t(\n                    'Connect a repository to see commit info, files changed, and authors involved in future releases.'\n                  )}\n                  action={\n                    <Button priority=\"primary\" to={`/settings/${orgId}/repos/`}>\n                      {t('Connect a repository')}\n                    </Button>\n                  }\n                />\n              </Panel>\n            </Main>\n          </Body>\n        );\n      }\n\n      const noReleaseReposFound = !releaseRepos.length;\n\n      if (noReleaseReposFound) {\n        return (\n          <Body>\n            <Main fullWidth>\n              <Panel dashedBorder>\n                <EmptyMessage\n                  icon={<IconCommit size=\"xl\" />}\n                  title={t('Releases are better with commit data!')}\n                  description={t(\n                    'No commits associated with this release have been found.'\n                  )}\n                />\n              </Panel>\n            </Main>\n          </Body>\n        );\n      }\n\n      if (activeReleaseRepo === undefined) {\n        return <LoadingIndicator />;\n      }\n\n      const {release} = params;\n      const orgSlug = organization.slug;\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          orgSlug={orgSlug}\n          projectSlug={this.context.project.slug}\n          release={release}\n          router={router}\n          location={location}\n          releaseRepos={releaseRepos}\n          activeReleaseRepo={activeReleaseRepo}\n        />\n      );\n    }\n  }\n\n  return withApi(withOrganization(withRepositories(WithReleaseRepos)));\n}\n\nexport default withReleaseRepos;\n","import {PlatformKey} from 'app/data/platformCategories';\nimport {t} from 'app/locale';\n\nexport enum SessionTerm {\n  CRASHES = 'crashes',\n  CRASHED = 'crashed',\n  ABNORMAL = 'abnormal',\n  CRASH_FREE = 'crashFree',\n  CRASH_FREE_USERS = 'crash-free-users',\n  CRASH_FREE_SESSIONS = 'crash-free-sessions',\n  HEALTHY = 'healthy',\n  ERRORED = 'errored',\n  UNHANDLED = 'unhandled',\n  STABILITY = 'stability',\n  ADOPTION = 'adoption',\n}\n\nexport const sessionTerm = {\n  [SessionTerm.CRASHES]: t('Crashes'),\n  [SessionTerm.CRASHED]: t('Crashed'),\n  [SessionTerm.ABNORMAL]: t('Abnormal'),\n  [SessionTerm.CRASH_FREE_USERS]: t('Crash Free Users'),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Crash Free Sessions'),\n  [SessionTerm.HEALTHY]: t('Healthy'),\n  [SessionTerm.ERRORED]: t('Errored'),\n  [SessionTerm.UNHANDLED]: t('Unhandled'),\n  [SessionTerm.ADOPTION]: t('Adoption'),\n  duration: t('Session Duration'),\n  otherCrashed: t('Other Crashed'),\n  otherAbnormal: t('Other Abnormal'),\n  otherErrored: t('Other Errored'),\n  otherHealthy: t('Other Healthy'),\n  otherCrashFreeUsers: t('Other Crash Free Users'),\n  otherCrashFreeSessions: t('Other Crash Free Sessions'),\n  otherReleases: t('Other Releases'),\n};\n\n// This should never be used directly (except in tests)\nexport const commonTermsDescription = {\n  [SessionTerm.CRASHES]: t('Number of sessions with a crashed state'),\n  [SessionTerm.CRASH_FREE]: t(\n    'Percentage of sessions/users who did not experience a crash.'\n  ),\n  [SessionTerm.CRASH_FREE_USERS]: t(\n    'Percentage of unique users with non-crashed sessions'\n  ),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Percentage of non-crashed sessions'),\n  [SessionTerm.STABILITY]: t('The percentage of crash free sessions.'),\n  [SessionTerm.ADOPTION]: t(\n    'Adoption compares the sessions or users of a release with the total sessions or users for this project in the last 24 hours.'\n  ),\n};\n\n// This should never be used directly (except in tests)\nexport const mobileTermsDescription = {\n  [SessionTerm.CRASHED]: t(\n    'The process was terminated due to an unhandled exception or a request to the server that ended with an error'\n  ),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Percentage of non-crashed sessions'),\n  [SessionTerm.ABNORMAL]: t(\n    'An unknown session exit. Like due to loss of power or killed by the operating system'\n  ),\n  [SessionTerm.HEALTHY]: t('A session without errors'),\n  [SessionTerm.ERRORED]: t('A session with errors'),\n  [SessionTerm.UNHANDLED]: t('Not handled by user code'),\n};\n\n// This should never be used directly (except in tests)\nexport const desktopTermDescriptions = {\n  crashed: t('The application crashed with a hard crash (eg. segfault)'),\n  [SessionTerm.ABNORMAL]: t(\n    'The application did not properly end the session, for example, due to force-quit'\n  ),\n  [SessionTerm.HEALTHY]: t(\n    'The application exited normally and did not observe any errors'\n  ),\n  [SessionTerm.ERRORED]: t(\n    'The application exited normally but observed error events while running'\n  ),\n  [SessionTerm.UNHANDLED]: t('The application crashed with a hard crash'),\n};\n\nfunction getTermDescriptions(platform: PlatformKey | null) {\n  const technology =\n    platform === 'react-native' ||\n    platform === 'java-spring' ||\n    platform === 'apple-ios' ||\n    platform === 'dotnet-aspnetcore'\n      ? platform\n      : platform?.split('-')[0];\n\n  switch (technology) {\n    case 'dotnet':\n    case 'java':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n      };\n    case 'java-spring':\n    case 'dotnet-aspnetcore':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHES]: t(\n          'A request that resulted in an unhandled exception and hence a Server Error response'\n        ),\n      };\n    case 'android':\n    case 'cordova':\n    case 'react-native':\n    case 'flutter':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHED]: t(\n          'An unhandled exception that resulted in the application crashing'\n        ),\n      };\n\n    case 'apple': {\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHED]: t('An error that resulted in the application crashing'),\n      };\n    }\n    case 'node':\n    case 'javascript':\n      return {\n        ...commonTermsDescription,\n        [SessionTerm.CRASHED]: t(\n          'During the session an unhandled global error/promise rejection occurred.'\n        ),\n        [SessionTerm.ABNORMAL]: t('Non applicable for Javascript.'),\n        [SessionTerm.HEALTHY]: t('No errors were captured during session life-time.'),\n        [SessionTerm.ERRORED]: t(\n          'During the session at least one handled error occurred.'\n        ),\n        [SessionTerm.UNHANDLED]:\n          \"An error was captured by the global 'onerror' or 'onunhandledrejection' handler.\",\n      };\n    case 'apple-ios':\n    case 'minidump':\n    case 'native':\n      return {\n        ...commonTermsDescription,\n        ...desktopTermDescriptions,\n      };\n    case 'rust':\n      return {\n        ...commonTermsDescription,\n        ...desktopTermDescriptions,\n        [SessionTerm.CRASHED]: t('The application had an unrecoverable error (a panic)'),\n      };\n    default:\n      return {\n        ...commonTermsDescription,\n        [SessionTerm.CRASHED]: t('Number of users who experienced an unhandled error'),\n        [SessionTerm.ABNORMAL]: t('An unknown session exit'),\n        [SessionTerm.HEALTHY]: mobileTermsDescription.healthy,\n        [SessionTerm.ERRORED]: mobileTermsDescription.errored,\n        [SessionTerm.UNHANDLED]: mobileTermsDescription.unhandled,\n      };\n  }\n}\n\nexport function getSessionTermDescription(\n  term: SessionTerm,\n  platform: PlatformKey | null\n) {\n  return getTermDescriptions(platform)[term];\n}\n"],"sourceRoot":""}