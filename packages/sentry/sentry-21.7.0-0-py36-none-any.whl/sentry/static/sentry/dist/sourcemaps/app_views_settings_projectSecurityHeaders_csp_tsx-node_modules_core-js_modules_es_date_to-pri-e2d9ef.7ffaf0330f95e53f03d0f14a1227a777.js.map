{"version":3,"sources":["webpack:///./app/components/previewFeature.tsx","webpack:///./app/data/forms/cspReports.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/views/settings/projectSecurityHeaders/csp.tsx","webpack:///./app/views/settings/projectSecurityHeaders/reportUri.tsx","webpack:///../node_modules/core-js/internals/date-to-primitive.js","webpack:///../node_modules/core-js/modules/es.date.to-primitive.js","webpack:///../node_modules/core-js/modules/es.symbol.to-primitive.js"],"names":["PreviewFeature","type","icon","size","t","route","formGroups","title","fields","name","label","help","getData","data","options","multiline","autosize","rows","placeholder","extraHelp","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","this","getTitle","renderComponent","AsyncComponent","FormPanel","props","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","id","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","highlighted","React","JsonForm","location","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","state","formGroup","i","renderForm","withRouter","ProjectCspReports","params","orgId","projectId","routeTitleGen","keyList","getSecurityDsn","project","saveOnBlur","apiMethod","initialData","apiEndpoint","hasAccess","withPadding","tct","link","href","csp","getInstructions","getReportOnlyInstructions","DEFAULT_ENDPOINT","endpoint","dsn","security","getDynamicText","value","fixed","ReportUri","Link","to","inline","flexibleControlStateSize","anObject","toPrimitive","module","exports","hint","TypeError","createNonEnumerableProperty","dateToPrimitive","TO_PRIMITIVE","wellKnownSymbol","DatePrototype","Date","prototype","defineWellKnownSymbol"],"mappings":"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","file":"chunks/app_views_settings_projectSecurityHeaders_csp_tsx-node_modules_core-js_modules_es_date_to-pri-e2d9ef.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\n\nimport Alert from 'app/components/alert';\nimport {IconLab} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = {\n  type?: React.ComponentProps<typeof Alert>['type'];\n};\n\nconst PreviewFeature = ({type = 'info'}: Props) => (\n  <Alert type={type} icon={<IconLab size=\"sm\" />}>\n    {t(\n      'This feature is a preview and may change in the future. Thanks for being an early adopter!'\n    )}\n  </Alert>\n);\n\nexport default PreviewFeature;\n","// Export route to make these forms searchable by label/help\nimport {t} from 'app/locale';\nimport {JsonFormObject} from 'app/views/settings/components/forms/type';\n\nexport const route = '/settings/:orgId/projects/:projectId/csp/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'CSP Settings',\n    fields: [\n      {\n        name: 'sentry:csp_ignored_sources_defaults',\n        type: 'boolean',\n\n        label: t('Use default ignored sources'),\n        help: t(\n          'Our default list will attempt to ignore common issues and reduce noise.'\n        ),\n        getData: data => ({options: data}),\n      },\n\n      // XXX: Org details endpoints accept these multiline inputs as a list,\n      // where as it looks like project details accepts it as a string with newlines\n      {\n        name: 'sentry:csp_ignored_sources',\n        type: 'string',\n        multiline: true,\n        autosize: true,\n        rows: 4,\n        placeholder: 'e.g.\\nfile://*\\n*.example.com\\nexample.com',\n        label: t('Additional ignored sources'),\n        help: t(\n          'Discard reports about requests from the given sources. Separate multiple entries with a newline.'\n        ),\n        extraHelp: t('Separate multiple entries with a newline.'),\n        getData: data => ({options: data}),\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = DefaultProps & {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import * as React from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  additionalFieldProps?: {[key: string]: any};\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.location.hash !== nextProps.location.hash) {\n      const hash = nextProps.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(JsonForm);\n","import {RouteComponentProps} from 'react-router';\n\nimport Access from 'app/components/acl/access';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport PreviewFeature from 'app/components/previewFeature';\nimport formGroups from 'app/data/forms/cspReports';\nimport {t, tct} from 'app/locale';\nimport {Project, ProjectKey} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport ReportUri, {\n  getSecurityDsn,\n} from 'app/views/settings/projectSecurityHeaders/reportUri';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  keyList: null | ProjectKey[];\n  project: null | Project;\n} & AsyncView['state'];\n\nexport default class ProjectCspReports extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [\n      ['keyList', `/projects/${orgId}/${projectId}/keys/`],\n      ['project', `/projects/${orgId}/${projectId}/`],\n    ];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Content Security Policy (CSP)'), projectId, false);\n  }\n\n  getInstructions(keyList: ProjectKey[]) {\n    return (\n      'def middleware(request, response):\\n' +\n      \"    response['Content-Security-Policy'] = \\\\\\n\" +\n      '        \"default-src *; \" \\\\\\n' +\n      \"        \\\"script-src 'self' 'unsafe-eval' 'unsafe-inline' cdn.example.com cdn.ravenjs.com; \\\" \\\\\\n\" +\n      \"        \\\"style-src 'self' 'unsafe-inline' cdn.example.com; \\\" \\\\\\n\" +\n      '        \"img-src * data:; \" \\\\\\n' +\n      '        \"report-uri ' +\n      getSecurityDsn(keyList) +\n      '\"\\n' +\n      '    return response\\n'\n    );\n  }\n\n  getReportOnlyInstructions(keyList: ProjectKey[]) {\n    return (\n      'def middleware(request, response):\\n' +\n      \"    response['Content-Security-Policy-Report-Only'] = \\\\\\n\" +\n      '        \"default-src \\'self\\'; \" \\\\\\n' +\n      '        \"report-uri ' +\n      getSecurityDsn(keyList) +\n      '\"\\n' +\n      '    return response\\n'\n    );\n  }\n\n  renderBody() {\n    const {orgId, projectId} = this.props.params;\n    const {project, keyList} = this.state;\n    if (!keyList || !project) {\n      return null;\n    }\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Content Security Policy')} />\n\n        <PreviewFeature />\n\n        <ReportUri keyList={keyList} orgId={orgId} projectId={projectId} />\n\n        <Form\n          saveOnBlur\n          apiMethod=\"PUT\"\n          initialData={project.options}\n          apiEndpoint={`/projects/${orgId}/${projectId}/`}\n        >\n          <Access access={['project:write']}>\n            {({hasAccess}) => <JsonForm disabled={!hasAccess} forms={formGroups} />}\n          </Access>\n        </Form>\n\n        <Panel>\n          <PanelHeader>{t('About')}</PanelHeader>\n\n          <PanelBody withPadding>\n            <p>\n              {tct(\n                `[link:Content Security Policy]\n            (CSP) is a security standard which helps prevent cross-site scripting (XSS),\n            clickjacking and other code injection attacks resulting from execution of\n            malicious content in the trusted web page context. It's enforced by browser\n            vendors, and Sentry supports capturing CSP violations using the standard\n            reporting hooks.`,\n                {\n                  link: (\n                    <ExternalLink href=\"https://en.wikipedia.org/wiki/Content_Security_Policy\" />\n                  ),\n                }\n              )}\n            </p>\n\n            <p>\n              {tct(\n                `To configure [csp:CSP] reports\n              in Sentry, you'll need to send a header from your server describing your\n              policy, as well specifying the authenticated Sentry endpoint.`,\n                {\n                  csp: <abbr title=\"Content Security Policy\" />,\n                }\n              )}\n            </p>\n\n            <p>\n              {t(\n                'For example, in Python you might achieve this via a simple web middleware'\n              )}\n            </p>\n            <pre>{this.getInstructions(keyList)}</pre>\n\n            <p>\n              {t(`Alternatively you can setup CSP reports to simply send reports rather than\n              actually enforcing the policy`)}\n            </p>\n            <pre>{this.getReportOnlyInstructions(keyList)}</pre>\n\n            <p>\n              {tct(\n                `We recommend setting this up to only run on a percentage of requests, as\n              otherwise you may find that you've quickly exhausted your quota. For more\n              information, take a look at [link:the article on html5rocks.com].`,\n                {\n                  link: (\n                    <a href=\"http://www.html5rocks.com/en/tutorials/security/content-security-policy/\" />\n                  ),\n                }\n              )}\n            </p>\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n","import {Link} from 'react-router';\n\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport {ProjectKey} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport Field from 'app/views/settings/components/forms/field';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\n\nconst DEFAULT_ENDPOINT = 'https://sentry.example.com/api/security-report/';\n\nexport function getSecurityDsn(keyList: ProjectKey[]) {\n  const endpoint = keyList.length ? keyList[0].dsn.security : DEFAULT_ENDPOINT;\n  return getDynamicText({\n    value: endpoint,\n    fixed: DEFAULT_ENDPOINT,\n  });\n}\n\ntype Props = {\n  keyList: ProjectKey[];\n  orgId: string;\n  projectId: string;\n};\n\nexport default function ReportUri({keyList, orgId, projectId}: Props) {\n  return (\n    <Panel>\n      <PanelHeader>{t('Report URI')}</PanelHeader>\n      <PanelBody>\n        <PanelAlert type=\"info\">\n          {tct(\n            \"We've automatically pulled these credentials from your available [link:Client Keys]\",\n            {\n              link: <Link to={`/settings/${orgId}/projects/${projectId}/keys/`} />,\n            }\n          )}\n        </PanelAlert>\n        <Field inline={false} flexibleControlStateSize>\n          <TextCopyInput>{getSecurityDsn(keyList)}</TextCopyInput>\n        </Field>\n      </PanelBody>\n    </Panel>\n  );\n}\n","'use strict';\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// `Date.prototype[@@toPrimitive](hint)` method implementation\n// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== 'number' && hint !== 'default') {\n    throw TypeError('Incorrect hint');\n  } return toPrimitive(anObject(this), hint !== 'number');\n};\n","var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar dateToPrimitive = require('../internals/date-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar DatePrototype = Date.prototype;\n\n// `Date.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive\nif (!(TO_PRIMITIVE in DatePrototype)) {\n  createNonEnumerableProperty(DatePrototype, TO_PRIMITIVE, dateToPrimitive);\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n"],"sourceRoot":""}