{"version":3,"sources":["webpack://nbslide/./lib/commands.js","webpack://nbslide/./lib/iconimport.js","webpack://nbslide/./lib/index.js","webpack://nbslide/./lib/nbslide.js","webpack://nbslide/./lib/slidecontrol.js","webpack://nbslide/./style/img/current.svg","webpack://nbslide/./style/img/start.svg"],"names":[],"mappings":";;;;;;;;;;;;;;AAAoE;AAC7D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,yDAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxHoD;AACC;AACI;AAClD,6BAA6B,8DAAO;AAC3C;AACA,YAAY,yDAAe;AAC3B,CAAC;AACM,+BAA+B,8DAAO;AAC7C;AACA,YAAY,2DAAiB;AAC7B,CAAC;;;;;;;;;;;;;;;;;;;;;;ACVsD;AACC;AAClB;AACF;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe,EAAE,kEAAgB;AAChD;AACA;AACA,6BAA6B,+CAAQ;AACrC,2DAA2D,6CAAO;AAClE;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;ACjBkC;AACV;AACvC;AACP;AACA;AACA;AACA;AACA,uCAAuC;AACvC,yCAAyC;AACzC,iCAAiC,uDAAY;AAC7C;AACA,mBAAmB,kEAAkB;AACrC;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;AChB2E;AACpB;AACT;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+EAAiC;AACrD;AACA;AACA,aAAa;AACb;AACA,gBAAgB,+EAAiC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+EAAiC;AACjD;AACA;AACA;AACA;AACA;AACA,YAAY,+EAAiC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qEAAmB;AACvC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+DAAa;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,+DAAa;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,sEAAoB;AACnD;AACA;AACA,SAAS;AACT;AACA,sCAAsC,sEAAoB;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,YAAY;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrSA,iEAAe,o6DAAo6D,E;;;;;;;;;;;;;;;ACAn7D,iEAAe,yhCAAyhC,E","file":"lib_index_js.ca974bf7b5ecb3219e7d.js","sourcesContent":["import { nbslideCurrentIcon, nbslideStartIcon } from './iconimport';\nexport class Commands {\n    constructor(app, pallete, tracker) {\n        this.isActive = () => {\n            const slideControl = this.activeSlideControl();\n            if (slideControl !== null) {\n                return slideControl.active;\n            }\n            return false;\n        };\n        this.activeSlideControl = () => {\n            const notebook = this.tracker.currentWidget;\n            let result = null;\n            this.nbslides.forEach((control, index) => {\n                if (control.notebook === notebook) {\n                    result = control;\n                }\n            });\n            return result;\n        };\n        this.nbslides = [];\n        this.tracker = tracker;\n        this.commands = app.commands;\n        this.commands.addCommand('nbslide:start-current', {\n            label: 'Start presentation in the current Slide',\n            icon: nbslideCurrentIcon,\n            isEnabled: () => true,\n            isVisible: () => true,\n            execute: () => {\n                var _a, _b, _c;\n                if ((_a = this.activeSlideControl()) === null || _a === void 0 ? void 0 : _a.active) {\n                    (_b = this.activeSlideControl()) === null || _b === void 0 ? void 0 : _b.stopPresentation();\n                }\n                else {\n                    (_c = this.activeSlideControl()) === null || _c === void 0 ? void 0 : _c.startPresentation();\n                }\n            }\n        });\n        pallete.addItem({\n            command: 'nbslide:start-current',\n            category: 'nbslide-shortcut'\n        });\n        this.commands.addCommand('nbslide:start-begin', {\n            label: 'Start presentation from the first slide',\n            icon: nbslideStartIcon,\n            isEnabled: () => true,\n            isVisible: () => true,\n            execute: () => {\n                var _a, _b, _c;\n                if ((_a = this.activeSlideControl()) === null || _a === void 0 ? void 0 : _a.active) {\n                    (_b = this.activeSlideControl()) === null || _b === void 0 ? void 0 : _b.stopPresentation();\n                }\n                else {\n                    (_c = this.activeSlideControl()) === null || _c === void 0 ? void 0 : _c.startFirst();\n                }\n            }\n        });\n        pallete.addItem({\n            command: 'nbslide:start-begin',\n            category: 'nbslide-shortcut'\n        });\n        this.commands.addCommand('nbslide:show-all', {\n            label: 'Stop presentation',\n            isEnabled: () => this.isActive(),\n            isVisible: () => this.isActive(),\n            execute: () => {\n                var _a;\n                (_a = this.activeSlideControl()) === null || _a === void 0 ? void 0 : _a.stopPresentation();\n            }\n        });\n        pallete.addItem({\n            command: 'nbslide:show-all',\n            category: 'nbslide-shortcut'\n        });\n        this.commands.addCommand('nbslide:show-selected', {\n            label: 'Show current slide',\n            isEnabled: () => this.isActive(),\n            isVisible: () => this.isActive(),\n            execute: () => {\n                var _a;\n                (_a = this.activeSlideControl()) === null || _a === void 0 ? void 0 : _a.viewCurrentSlide();\n            }\n        });\n        pallete.addItem({\n            command: 'nbslide:show-selected',\n            category: 'nbslide-shortcut'\n        });\n        this.commands.addCommand('nbslide:previous-slide', {\n            label: 'Hide current slide and go to previous one',\n            isEnabled: () => this.isActive(),\n            isVisible: () => this.isActive(),\n            execute: () => {\n                var _a;\n                (_a = this.activeSlideControl()) === null || _a === void 0 ? void 0 : _a.previousSlide();\n            }\n        });\n        pallete.addItem({\n            command: 'nbslide:previous-slide',\n            category: 'nbslide-shortcut'\n        });\n        this.commands.addCommand('nbslide:next-slide', {\n            label: 'Go to next slide',\n            isEnabled: () => this.isActive(),\n            isVisible: () => this.isActive(),\n            execute: () => {\n                var _a;\n                (_a = this.activeSlideControl()) === null || _a === void 0 ? void 0 : _a.nextSlide();\n            }\n        });\n        pallete.addItem({\n            command: 'nbslide:next-slide',\n            category: 'nbslide-shortcut'\n        });\n    }\n    register(nbslide) {\n        this.nbslides.push(nbslide);\n    }\n    unregister(nbslide) {\n        this.nbslides = this.nbslides.filter((value, index, arr) => value !== nbslide);\n    }\n}\n","import { LabIcon } from '@jupyterlab/ui-components';\nimport nbslideStartstr from '../style/img/start.svg';\nimport nbslideCurrentstr from '../style/img/current.svg';\nexport const nbslideStartIcon = new LabIcon({\n    name: 'nbslide:starticon',\n    svgstr: nbslideStartstr\n});\nexport const nbslideCurrentIcon = new LabIcon({\n    name: 'nbslide:currenticon',\n    svgstr: nbslideCurrentstr\n});\n","import { ICommandPalette } from '@jupyterlab/apputils';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { Commands } from './commands';\nimport { NbSlide } from './nbslide';\n/**\n * Initialization data for the nbslide extension.\n */\nconst plugin = {\n    id: 'nbslide:plugin',\n    autoStart: true,\n    requires: [ICommandPalette, INotebookTracker],\n    activate: (app, pallete, tracker) => {\n        console.log('JupyterLab extension nbslide is activated!');\n        const commands = new Commands(app, pallete, tracker);\n        app.docRegistry.addWidgetExtension('Notebook', new NbSlide(commands));\n    }\n};\nexport default plugin;\n","import { DisposableDelegate } from \"@lumino/disposable\";\nimport { SlideControl } from \"./slidecontrol\";\nexport class NbSlide {\n    constructor(commands) {\n        this.commands = commands;\n    }\n    createNew(widget, context) {\n        //eval(\"window.widget = widget;\");\n        //eval(\"window.context = context;\");\n        const slideControl = new SlideControl(widget, this.commands);\n        this.commands.register(slideControl);\n        return new DisposableDelegate(() => {\n            slideControl.dispose();\n            this.commands.unregister(slideControl);\n        });\n    }\n}\n","import { CommandToolbarButton, ToolbarButton } from '@jupyterlab/apputils';\nimport { NotebookActions } from '@jupyterlab/notebook';\nimport { ElementExt } from '@lumino/domutils';\nfunction isSlideCell(cell) {\n    const slideshow = cell.model.metadata.get('slideshow');\n    const slidetype = slideshow ? slideshow.slide_type : null;\n    return (slidetype === 'slide' ||\n        slidetype === 'subslide' ||\n        slidetype === 'fragment');\n}\nfunction isSubSlide(cell) {\n    const slideshow = cell.model.metadata.get('slideshow');\n    const slidetype = slideshow ? slideshow.slide_type : null;\n    return slidetype === 'subslide';\n}\nfunction isMainSlide(cell) {\n    const slideshow = cell.model.metadata.get('slideshow');\n    const slidetype = slideshow ? slideshow.slide_type : null;\n    return slidetype === 'slide';\n}\nfunction isInvisibleCell(cell) {\n    const slideshow = cell.model.metadata.get('slideshow');\n    const slidetype = slideshow ? slideshow.slide_type : null;\n    return slidetype === 'skip' || slidetype === 'notes';\n}\nfunction isNoScroll(cell) {\n    const tags = cell.model.metadata.get('tags') || [];\n    return tags.includes('noscroll');\n}\nfunction skipExecution(cell) {\n    const tags = cell.model.metadata.get('tags') || [];\n    return cell.model.type !== 'code' || tags.includes('skiprun');\n}\nexport class SlideControl {\n    constructor(notebook, commands) {\n        this.findSlideNumber = (index) => {\n            let total = 0;\n            const cells = this.notebook.content.widgets;\n            let result = 0;\n            cells.forEach((cell, currentindex) => {\n                if (isSlideCell(cell)) {\n                    total += 1;\n                }\n                if (currentindex === index) {\n                    result = total;\n                }\n            });\n            this.total = total;\n            return result;\n        };\n        this.getSlideIndex = (index) => {\n            const cells = this.notebook.content.widgets;\n            for (let i = index; i >= 0; i--) {\n                const cell = cells[i];\n                if (isSlideCell(cell)) {\n                    return i;\n                }\n            }\n            return 0;\n        };\n        this.viewSlide = (firstIndex) => {\n            const cells = this.notebook.content.widgets;\n            let index = firstIndex;\n            if (isSubSlide(cells[index])) {\n                let subindex = index;\n                do {\n                    subindex = this.getSlideIndex(subindex - 1);\n                    this.hideSlide(subindex);\n                } while (subindex !== 0 && !isMainSlide(cells[subindex]));\n            }\n            let noScroll = false;\n            do {\n                const cell = cells[index];\n                noScroll = noScroll || isNoScroll(cell);\n                if (!isInvisibleCell(cell)) {\n                    cell.show();\n                }\n                this.updateSlideShowConfig(cell);\n                if (this.autosuffix && cell.model.type === 'markdown') {\n                    const nodes = cell.node.querySelectorAll('h1, h2, h3, h4, h5, h6');\n                    if (nodes.length !== 0) {\n                        const el = nodes[0];\n                        const suffix = el.textContent;\n                        if (suffix !== null) {\n                            this.suffix = suffix.replace('¶', '');\n                        }\n                    }\n                }\n                this.updateSlideShowConfig(cell);\n                if (!noScroll) {\n                    ElementExt.scrollIntoViewIfNeeded(this.notebook.content.node, cell.node);\n                }\n                index++;\n            } while (index < cells.length && !isSlideCell(cells[index]));\n            if (!noScroll) {\n                ElementExt.scrollIntoViewIfNeeded(this.notebook.content.node, cells[firstIndex].node);\n            }\n            this.updateSlideTitle();\n            return index;\n        };\n        this.monitorProgression = (sender, cell) => {\n            if (this.active) {\n                this.currentSlide = this.findSlideNumber(sender.activeCellIndex);\n                this.updateSlideNumber();\n            }\n        };\n        this.startFirst = () => {\n            let first = -1;\n            const cells = this.notebook.content.widgets;\n            cells.forEach((cell, index) => {\n                if (isSlideCell(cell) && first === -1) {\n                    first = index;\n                }\n            });\n            if (first === -1) {\n                first = 0;\n            }\n            this.notebook.content.activeCellIndex = first;\n            this.startPresentation();\n        };\n        this.startPresentation = () => {\n            this.notebook.toolbar.layout.widgets.forEach((toolbaritem, index) => {\n                if (!toolbaritem.hasClass('jp-Toolbar-spacer')) {\n                    toolbaritem.hide();\n                }\n            });\n            this.slidePosition.show();\n            this.slideTitle.show();\n            this.active = true;\n            this.notebook.content.activeCellChanged.connect(this.monitorProgression);\n            const currentSlide = this.getSlideIndex(this.notebook.content.activeCellIndex);\n            const cells = this.notebook.content.widgets;\n            for (let index = 0; index < cells.length; index) {\n                if (index <= currentSlide) {\n                    index = this.viewSlide(index);\n                }\n                else {\n                    cells[index].hide();\n                    index++;\n                }\n            }\n            this.notebook.content.scrollToCell(cells[currentSlide]);\n            this.notebook.content.activeCellIndex = currentSlide;\n            this.currentSlide = this.findSlideNumber(currentSlide);\n            this.updateSlideNumber();\n            this.updateSlideTitle();\n            document.documentElement.requestFullscreen();\n            this.notebook.content.deselectAll();\n            //alert('ok ' + this.title);\n        };\n        this.stopPresentation = () => {\n            this.notebook.toolbar.layout.widgets.forEach((toolbaritem, index) => {\n                toolbaritem.show();\n            });\n            this.slidePosition.hide();\n            this.slideTitle.hide();\n            const cells = this.notebook.content.widgets;\n            cells.forEach((cell, index) => {\n                cell.show();\n            });\n            this.active = false;\n            this.notebook.content.activeCellChanged.disconnect(this.monitorProgression);\n            if (document.fullscreenElement !== null) {\n                document.exitFullscreen();\n            }\n        };\n        this.viewCurrentSlide = () => {\n            this.viewSlide(this.notebook.content.activeCellIndex);\n        };\n        this.hideSlide = (firstIndex) => {\n            const cells = this.notebook.content.widgets;\n            cells[firstIndex].hide();\n            for (let index = firstIndex + 1; index < cells.length; index++) {\n                if (isSlideCell(cells[index])) {\n                    break;\n                }\n                cells[index].hide();\n            }\n        };\n        this.previousSlide = () => {\n            const cells = this.notebook.content.widgets;\n            const firstIndex = this.getSlideIndex(this.notebook.content.activeCellIndex);\n            if (firstIndex === 0) {\n                ElementExt.scrollIntoViewIfNeeded(this.notebook.content.node, cells[firstIndex].node);\n                return;\n            }\n            this.hideSlide(firstIndex);\n            const previousIndex = this.getSlideIndex(firstIndex - 1);\n            this.viewSlide(previousIndex);\n            ElementExt.scrollIntoViewIfNeeded(this.notebook.content.node, cells[previousIndex].node);\n            this.notebook.content.activeCellIndex = previousIndex;\n            this.viewCurrentSlide();\n        };\n        this.nextSlide = () => {\n            const cells = this.notebook.content.widgets;\n            let index = this.notebook.content.activeCellIndex;\n            if (cells[index].isHidden) {\n                index = this.getSlideIndex(index);\n            }\n            else {\n                for (index = index + 1; index < cells.length; index++) {\n                    if (isSlideCell(cells[index])) {\n                        break;\n                    }\n                }\n                if (index === cells.length) {\n                    index -= 1;\n                }\n            }\n            const shouldRun = cells[index].isHidden;\n            const start = index;\n            this.viewSlide(index);\n            do {\n                if (shouldRun && !skipExecution(cells[index])) {\n                    this.notebook.content.activeCellIndex = index;\n                    NotebookActions.run(this.notebook.content, this.notebook.sessionContext);\n                }\n                index++;\n            } while (index < cells.length && !isSlideCell(cells[index]));\n            this.notebook.content.activeCellIndex = start;\n        };\n        this.currentSlide = 0;\n        this.total = 0;\n        this.notebook = notebook;\n        this.active = false;\n        this.title = notebook.title.label;\n        this.suffix = '';\n        this.autosuffix = true;\n        this.slidePosition = new ToolbarButton({\n            className: 'positionSlideshow',\n            onClick: this.stopPresentation,\n            tooltip: 'Stop presentation',\n            label: '1'\n        });\n        this.slidePosition.hide();\n        this.slideTitle = new ToolbarButton({\n            className: 'titleSlideshow',\n            onClick: this.stopPresentation,\n            tooltip: 'Stop presentation',\n            label: notebook.title.label\n        });\n        this.slideTitle.hide();\n        this.startButton = new CommandToolbarButton({\n            commands: commands.commands,\n            id: 'nbslide:start-begin'\n        });\n        this.startButton.addClass('jp-nbslide-nbtoolbarbutton');\n        this.startCurrentButton = new CommandToolbarButton({\n            commands: commands.commands,\n            id: 'nbslide:start-current'\n        });\n        this.startCurrentButton.addClass('jp-nbslide-nbtoolbarbutton');\n        notebook.toolbar.insertItem(0, 'nbslide-current', this.startCurrentButton);\n        notebook.toolbar.insertItem(0, 'nbslide-slideshow', this.startButton);\n        notebook.toolbar.insertItem(0, 'nbslide-position', this.slidePosition);\n        notebook.toolbar.insertItem(notebook.toolbar.layout.widgets.length - 1, 'nbslide-title', this.slideTitle);\n    }\n    updateSlideShowConfig(cell) {\n        const slideshow = cell.model.metadata.get('slideshow');\n        if (!slideshow) {\n            return;\n        }\n        const configs = slideshow;\n        if (Object.prototype.hasOwnProperty.call(configs, 'slide_title')) {\n            this.title = configs.slide_title;\n        }\n        if (Object.prototype.hasOwnProperty.call(configs, 'slide_suffix')) {\n            this.suffix = configs.slide_suffix;\n        }\n        if (Object.prototype.hasOwnProperty.call(configs, 'slide_autosuffix')) {\n            this.autosuffix = configs.slide_autosuffix;\n        }\n    }\n    setSlideTitle(title) {\n        this.slideTitle.props.label = title;\n        this.slideTitle.update();\n    }\n    updateSlideNumber() {\n        this.setSlideNumber(this.currentSlide + '/' + this.total);\n    }\n    updateSlideTitle() {\n        this.setSlideTitle(this.title + (this.suffix ? ` - ${this.suffix}` : ''));\n    }\n    setSlideNumber(number) {\n        this.slidePosition.props.label = number;\n        this.slidePosition.update();\n    }\n    dispose() {\n        this.slidePosition.dispose();\n        this.slideTitle.dispose();\n        this.startButton.dispose();\n        this.startCurrentButton.dispose();\n    }\n}\n","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   fill=\\\"none\\\"\\n   viewBox=\\\"0 0 14 14\\\"\\n   height=\\\"14\\\"\\n   width=\\\"14\\\"\\n   version=\\\"1.1\\\">\\n  <path\\n     fill=\\\"#616161\\\"\\n     class=\\\"jp-icon3\\\"\\n     d=\\\"M 1,2.9 C 1,3.15 1.25,3.4 1.5,3.4 H 2 V 8.1 C 2,8.35 2.25,8.6 2.5,8.6 H 6.45 L 6.4499798,9.6360626 5.15811,10.719141 c -0.191515,0.160701 -0.22233,0.512915 -0.061629,0.704431 0.1607,0.191515 0.5129145,0.222329 0.7044298,0.06163 L 6.95,10.521 8.0990903,11.485201 c 0.1915155,0.160701 0.5437304,0.129886 0.7044305,-0.06163 0.1606994,-0.191516 0.1298847,-0.54373 -0.06163,-0.70443 L 7.4499998,9.6360626 7.45,8.6 h 3.95 c 0.25,0 0.5,-0.25 0.5,-0.5 V 3.4 h 0.5 c 0.25,0 0.5,-0.25 0.5,-0.5 0,-0.25 -0.25,-0.5 -0.5,-0.5 H 1.5 C 1.25,2.4 1,2.65 1,2.9 Z m 2,0.5 h 7.9 V 7.6 H 3 Z\\\"\\n     />\\n   <path\\n     fill=\\\"#616161\\\"\\n     class=\\\"jp-icon3\\\"\\n     d=\\\"m 3.7,4.4 h 2.7 v 2 H 3.7 z M 4.2,4.9 V 5.9 h 1.7 V 4.9 Z\\\"\\n     />\\n  <g\\n     transform=\\\"translate(0,-0.00695096)\\\">\\n    <path\\n       fill=\\\"#616161\\\"\\n       class=\\\"jp-icon3\\\"\\n       d=\\\"m 8.0002756,4.1818738 h 2.1835924 c 0.125,0 0.25,0.125 0.25,0.25 0,0.1250005 -0.125,0.2500005 -0.25,0.25 H 8.0002756 c -0.125,5e-7 -0.25,-0.1249995 -0.25,-0.25 0,-0.125 0.125,-0.25 0.25,-0.25 z\\\"\\n       />\\n    <path\\n       fill=\\\"#616161\\\"\\n       class=\\\"jp-icon3\\\"\\n       d=\\\"m 8.0002756,5.1983585 h 2.1835924 c 0.125,0 0.25,0.125 0.25,0.25 0,0.1250005 -0.125,0.2500005 -0.25,0.25 H 8.0002756 c -0.125,5e-7 -0.25,-0.1249995 -0.25,-0.25 0,-0.125 0.125,-0.25 0.25,-0.25 z\\\"\\n       />\\n    <path\\n       fill=\\\"#616161\\\"\\n       class=\\\"jp-icon3\\\"\\n       d=\\\"m 8.0002756,6.2148437 h 2.1835924 c 0.125,0 0.25,0.125 0.25,0.25 0,0.1250005 -0.125,0.2500005 -0.25,0.25 H 8.0002756 c -0.125,5e-7 -0.25,-0.1249995 -0.25,-0.25 0,-0.125 0.125,-0.25 0.25,-0.25 z\\\"\\n       />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   fill=\\\"none\\\"\\n   viewBox=\\\"0 0 14 14\\\"\\n   height=\\\"14\\\"\\n   width=\\\"14\\\"\\n   version=\\\"1.1\\\">\\n  <path\\n     fill=\\\"#616161\\\"\\n     class=\\\"jp-icon3\\\"\\n     d=\\\"M 1,2.9 C 1,3.15 1.25,3.4 1.5,3.4 H 2 V 8.1 C 2,8.35 2.25,8.6 2.5,8.6 H 6.45 L 6.4499798,9.6360626 5.15811,10.719141 c -0.191515,0.160701 -0.22233,0.512915 -0.061629,0.704431 0.1607,0.191515 0.5129145,0.222329 0.7044298,0.06163 L 6.95,10.521 8.0990903,11.485201 c 0.1915155,0.160701 0.5437304,0.129886 0.7044305,-0.06163 0.1606994,-0.191516 0.1298847,-0.54373 -0.06163,-0.70443 L 7.4499998,9.6360626 7.45,8.6 h 3.95 c 0.25,0 0.5,-0.25 0.5,-0.5 V 3.4 h 0.5 c 0.25,0 0.5,-0.25 0.5,-0.5 0,-0.25 -0.25,-0.5 -0.5,-0.5 H 1.5 C 1.25,2.4 1,2.65 1,2.9 Z m 2,0.5 h 7.9 V 7.6 H 3 Z\\\"\\n     />\\n  <path\\n     fill=\\\"#616161\\\"\\n     class=\\\"jp-icon3\\\"\\n     d=\\\"M 5.8336309,4.0361844 V 6.9916698 L 8.4287211,5.4933937 Z\\\"\\n     />\\n</svg>\\n\";"],"sourceRoot":""}