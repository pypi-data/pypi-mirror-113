{"version":3,"sources":["webpack:///./app/views/settings/account/accountSettingsNavigation.tsx","webpack:///./app/views/settings/account/accountSettingsLayout.tsx"],"names":["AccountSettingsNavigation","organization","navigationObjects","getConfiguration","AccountSettingsLayout","this","props","prevProps","access","fetchOrganizationDetails","slug","setActive","loadProjects","renderNavigation","children","React","SentryTypes","withLatestContext"],"mappings":"m8CAQMA,EAA4B,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAF,OAChC,QAAC,IAAD,CAAoBC,mBAAmBC,OAAiB,CAACF,oBADrDD,E,wCAIN,Q,moBCCMI,E,ijBAKJ,WACE,MAAO,CACLH,aAAcI,KAAKC,MAAML,gB,gCAI7B,SAAmBM,GACjB,IAAON,EAAgBI,KAAKC,MAArBL,aACHM,EAAUN,eAAiBA,GAO3BA,QAA+C,IAAxBA,EAAaO,SACtCC,QAAyBR,EAAaS,KAAM,CAC1CC,WAAW,EACXC,cAAc,M,oBAKpB,WACE,IAAOX,EAAgBI,KAAKC,MAArBL,aAEP,OACE,QAAC,IAAD,OACMI,KAAKC,OADX,IAEEO,iBAAkB,kBAAM,QAAC,EAAD,CAA2BZ,aAAcA,KAFnE,SAIGI,KAAKC,MAAMQ,gB,GApCgBC,aAA9BX,E,4CAAAA,E,oBACuB,CACzBH,aAAce,mBAwClB,OAAeC,OAAkBb","file":"chunks/app_views_settings_account_accountSettingsLayout_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {Organization} from 'app/types';\nimport getConfiguration from 'app/views/settings/account/navigationConfiguration';\nimport SettingsNavigation from 'app/views/settings/components/settingsNavigation';\n\ntype Props = {\n  organization: Organization;\n};\n\nconst AccountSettingsNavigation = ({organization}: Props) => (\n  <SettingsNavigation navigationObjects={getConfiguration({organization})} />\n);\n\nexport default AccountSettingsNavigation;\n","import * as React from 'react';\n\nimport {fetchOrganizationDetails} from 'app/actionCreators/organizations';\nimport SentryTypes from 'app/sentryTypes';\nimport {Organization} from 'app/types';\nimport withLatestContext from 'app/utils/withLatestContext';\nimport AccountSettingsNavigation from 'app/views/settings/account/accountSettingsNavigation';\nimport SettingsLayout from 'app/views/settings/components/settingsLayout';\n\ntype Props = React.ComponentProps<typeof SettingsLayout> & {\n  organization: Organization;\n};\n\nclass AccountSettingsLayout extends React.Component<Props> {\n  static childContextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  getChildContext() {\n    return {\n      organization: this.props.organization,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {organization} = this.props;\n    if (prevProps.organization === organization) {\n      return;\n    }\n\n    // if there is no org in context, SidebarDropdown uses an org from `withLatestContext`\n    // (which queries the org index endpoint instead of org details)\n    // and does not have `access` info\n    if (organization && typeof organization.access === 'undefined') {\n      fetchOrganizationDetails(organization.slug, {\n        setActive: true,\n        loadProjects: true,\n      });\n    }\n  }\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <SettingsLayout\n        {...this.props}\n        renderNavigation={() => <AccountSettingsNavigation organization={organization} />}\n      >\n        {this.props.children}\n      </SettingsLayout>\n    );\n  }\n}\n\nexport default withLatestContext(AccountSettingsLayout);\n"],"sourceRoot":""}