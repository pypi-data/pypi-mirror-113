{"version":3,"sources":["webpack:///./app/components/dataExport.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/dataExport/dataDownload.tsx"],"names":["ExportQueryType","DataExport","initialState","setState","props","api","slug","organization","payload","queryType","queryInfo","inProgress","requestPromise","includeAllArgs","method","data","query_type","query_info","then","response","addSuccessMessage","status","t","catch","err","message","responseJSON","detail","addErrorMessage","prevPayload","this","isEqual","resetState","state","children","disabled","icon","features","size","priority","title","onClick","debounce","startDataExport","React","withApi","withOrganization","AsyncView","getTitle","renderComponent","AsyncComponent","DownloadStatus","DataDownload","params","orgId","dataExportId","date","d","Date","Header","Body","query","download","actionLink","getActionLink","type","DownloadButton","href","info","to","pathname","browserHistory","openInDiscover","dateExpired","checksum","renderDate","renderOpenInDiscover","tct","link","target","rel","errors","errDetail","statusText","Early","renderEarly","Expired","renderExpired","renderValid","renderContent","p","theme","border","space","Button"],"mappings":"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","file":"chunks/app_views_dataExport_dataDownload_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\n// NOTE: Coordinate with other ExportQueryType (src/sentry/data_export/base.py)\nexport enum ExportQueryType {\n  IssuesByTag = 'Issues-by-Tag',\n  Discover = 'Discover',\n}\n\ntype DataExportPayload = {\n  queryType: ExportQueryType;\n  queryInfo: any; // TODO(ts): Formalize different possible payloads\n};\n\ntype Props = {\n  api: Client;\n  disabled?: boolean;\n  organization: Organization;\n  payload: DataExportPayload;\n  icon?: React.ReactNode;\n};\n\ntype State = {\n  inProgress: boolean;\n};\n\nclass DataExport extends React.Component<Props, State> {\n  state = this.initialState;\n\n  componentDidUpdate({payload: prevPayload}) {\n    const {payload} = this.props;\n    if (!isEqual(prevPayload, payload)) this.resetState();\n  }\n\n  get initialState(): State {\n    return {\n      inProgress: false,\n    };\n  }\n\n  resetState = () => {\n    this.setState(this.initialState);\n  };\n\n  startDataExport = () => {\n    const {\n      api,\n      organization: {slug},\n      payload: {queryType, queryInfo},\n    } = this.props;\n\n    this.setState({inProgress: true});\n\n    api\n      .requestPromise(`/organizations/${slug}/data-export/`, {\n        includeAllArgs: true,\n        method: 'POST',\n        data: {\n          query_type: queryType,\n          query_info: queryInfo,\n        },\n      })\n      .then(([_data, _, response]) => {\n        addSuccessMessage(\n          response?.status === 201\n            ? t(\n                \"Sit tight. We'll shoot you an email when your data is ready for download.\"\n              )\n            : t(\"It looks like we're already working on it. Sit tight, we'll email you.\")\n        );\n      })\n      .catch(err => {\n        const message =\n          err?.responseJSON?.detail ??\n          \"We tried our hardest, but we couldn't export your data. Give it another go.\";\n        addErrorMessage(t(message));\n        this.setState({inProgress: false});\n      });\n  };\n\n  render() {\n    const {inProgress} = this.state;\n    const {children, disabled, icon} = this.props;\n    return (\n      <Feature features={['organizations:discover-query']}>\n        {inProgress ? (\n          <Button\n            size=\"small\"\n            priority=\"default\"\n            title=\"You can get on with your life. We'll email you when your data's ready.\"\n            {...this.props}\n            disabled\n            icon={icon}\n          >\n            {t(\"We're working on it...\")}\n          </Button>\n        ) : (\n          <Button\n            onClick={debounce(this.startDataExport, 500)}\n            disabled={disabled || false}\n            size=\"small\"\n            priority=\"default\"\n            title=\"Put your data to work. Start your export and we'll email you when it's finished.\"\n            icon={icon}\n            {...this.props}\n          >\n            {children ? children : t('Export All to CSV')}\n          </Button>\n        )}\n      </Feature>\n    );\n  }\n}\n\nexport {DataExport};\nexport default withApi(withOrganization(DataExport));\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport {ExportQueryType} from 'app/components/dataExport';\nimport DateTime from 'app/components/dateTime';\nimport {IconDownload} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport AsyncView from 'app/views/asyncView';\nimport Layout from 'app/views/auth/layout';\n\nexport enum DownloadStatus {\n  Early = 'EARLY',\n  Valid = 'VALID',\n  Expired = 'EXPIRED',\n}\n\ntype RouteParams = {\n  orgId: string;\n  dataExportId: string;\n};\n\ntype Download = {\n  id: number;\n  user: {\n    id: number;\n    email: string;\n    username: string;\n  };\n  dateCreated: string;\n  dateFinished?: string;\n  dateExpired?: string;\n  query: {\n    type: ExportQueryType;\n    info: object;\n  };\n  status: DownloadStatus;\n  checksum: string;\n};\n\ntype Props = {} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  download: Download;\n  errors: {\n    download: {\n      status: number;\n      statusText: string;\n      responseJSON: {\n        detail: string;\n      };\n    };\n  };\n} & AsyncView['state'];\n\nclass DataDownload extends AsyncView<Props, State> {\n  getTitle(): string {\n    return t('Download Center');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, dataExportId} = this.props.params;\n    return [['download', `/organizations/${orgId}/data-export/${dataExportId}/`]];\n  }\n\n  getActionLink(queryType): string {\n    const {orgId} = this.props.params;\n    switch (queryType) {\n      case ExportQueryType.IssuesByTag:\n        return `/organizations/${orgId}/issues/`;\n      case ExportQueryType.Discover:\n        return `/organizations/${orgId}/discover/queries/`;\n      default:\n        return '/';\n    }\n  }\n\n  renderDate(date: string | undefined): React.ReactNode {\n    if (!date) {\n      return null;\n    }\n    const d = new Date(date);\n    return (\n      <strong>\n        <DateTime date={d} />\n      </strong>\n    );\n  }\n\n  renderEarly(): React.ReactNode {\n    return (\n      <React.Fragment>\n        <Header>\n          <h3>\n            {t('What are')}\n            <i>{t(' you ')}</i>\n            {t('doing here?')}\n          </h3>\n        </Header>\n        <Body>\n          <p>\n            {t(\n              \"Not that its any of our business, but were you invited to this page? It's just that we don't exactly remember emailing you about it.\"\n            )}\n          </p>\n          <p>{t(\"Close this window and we'll email you when your download is ready.\")}</p>\n        </Body>\n      </React.Fragment>\n    );\n  }\n\n  renderExpired(): React.ReactNode {\n    const {query} = this.state.download;\n    const actionLink = this.getActionLink(query.type);\n    return (\n      <React.Fragment>\n        <Header>\n          <h3>{t('This is awkward.')}</h3>\n        </Header>\n        <Body>\n          <p>\n            {t(\n              \"That link expired, so your download doesn't live here anymore. Just picked up one day and left town.\"\n            )}\n          </p>\n          <p>\n            {t(\n              'Make a new one with your latest data. Your old download will never see it coming.'\n            )}\n          </p>\n          <DownloadButton href={actionLink} priority=\"primary\">\n            {t('Start a New Download')}\n          </DownloadButton>\n        </Body>\n      </React.Fragment>\n    );\n  }\n\n  openInDiscover() {\n    const {\n      download: {\n        query: {info},\n      },\n    } = this.state;\n    const {orgId} = this.props.params;\n\n    const to = {\n      pathname: `/organizations/${orgId}/discover/results/`,\n      query: info,\n    };\n\n    browserHistory.push(to);\n  }\n\n  renderOpenInDiscover() {\n    const {\n      download: {\n        query = {\n          type: ExportQueryType.IssuesByTag,\n          info: {},\n        },\n      },\n    } = this.state;\n\n    // default to IssuesByTag because we dont want to\n    // display this unless we're sure its a discover query\n    const {type = ExportQueryType.IssuesByTag} = query;\n\n    return type === 'Discover' ? (\n      <React.Fragment>\n        <p>{t('Need to make changes?')}</p>\n        <Button priority=\"primary\" onClick={() => this.openInDiscover()}>\n          {t('Open in Discover')}\n        </Button>\n        <br />\n      </React.Fragment>\n    ) : null;\n  }\n\n  renderValid(): React.ReactNode {\n    const {\n      download: {dateExpired, checksum},\n    } = this.state;\n    const {orgId, dataExportId} = this.props.params;\n\n    return (\n      <React.Fragment>\n        <Header>\n          <h3>{t('All done.')}</h3>\n        </Header>\n        <Body>\n          <p>{t(\"See, that wasn't so bad. Your data is all ready for download.\")}</p>\n          <Button\n            priority=\"primary\"\n            icon={<IconDownload />}\n            href={`/api/0/organizations/${orgId}/data-export/${dataExportId}/?download=true`}\n          >\n            {t('Download CSV')}\n          </Button>\n          <p>\n            {t(\"That link won't last forever — it expires:\")}\n            <br />\n            {this.renderDate(dateExpired)}\n          </p>\n          {this.renderOpenInDiscover()}\n          <p>\n            <small>\n              <strong>SHA1:{checksum}</strong>\n            </small>\n            <br />\n            {tct('Need help verifying? [link].', {\n              link: (\n                <a\n                  href=\"https://docs.sentry.io/product/discover-queries/query-builder/#filter-by-table-columns\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {t('Check out our docs')}\n                </a>\n              ),\n            })}\n          </p>\n        </Body>\n      </React.Fragment>\n    );\n  }\n\n  renderError(): React.ReactNode {\n    const {\n      errors: {download: err},\n    } = this.state;\n    const errDetail = err?.responseJSON?.detail;\n    return (\n      <Layout>\n        <main>\n          <Header>\n            <h3>\n              {err.status} - {err.statusText}\n            </h3>\n          </Header>\n          {errDetail && (\n            <Body>\n              <p>{errDetail}</p>\n            </Body>\n          )}\n        </main>\n      </Layout>\n    );\n  }\n\n  renderContent(): React.ReactNode {\n    const {download} = this.state;\n    switch (download.status) {\n      case DownloadStatus.Early:\n        return this.renderEarly();\n      case DownloadStatus.Expired:\n        return this.renderExpired();\n      default:\n        return this.renderValid();\n    }\n  }\n\n  renderBody() {\n    return (\n      <Layout>\n        <main>{this.renderContent()}</main>\n      </Layout>\n    );\n  }\n}\n\nconst Header = styled('header')`\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: ${space(3)} 40px 0;\n  h3 {\n    font-size: 24px;\n    margin: 0 0 ${space(3)} 0;\n  }\n`;\n\nconst Body = styled('div')`\n  padding: ${space(2)} 40px;\n  max-width: 500px;\n  p {\n    margin: ${space(1.5)} 0;\n  }\n`;\n\nconst DownloadButton = styled(Button)`\n  margin-bottom: ${space(1.5)};\n`;\n\nexport default DataDownload;\n"],"sourceRoot":""}