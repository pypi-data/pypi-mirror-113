{"version":3,"sources":["webpack:///./app/components/splitDiff.tsx"],"names":["diffFnMap","chars","diffChars","words","diffWords","lines","diffLines","SplitDiff","className","type","base","target","diffFn","baseLines","split","targetLines","length","results","map","_line","index","newlineIsToken","SplitTable","SplitBody","line","j","highlightAdded","find","result","added","highlightRemoved","removed","Cell","isRemoved","Line","filter","i","Word","value","Gap","isAdded","p","theme","text","familyMono","fontSizeSmall","diff","removedRow","addedRow"],"mappings":"gtBAGMA,EAAY,CAChBC,MAAOC,KACPC,MAAOC,KACPC,MAAOC,MAUHC,EAAY,SAAC,GAAqD,IAApDC,EAAoD,EAApDA,UAAoD,IAAzCC,YAAyC,MAAlC,QAAkC,EAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,OAC7CC,EAASZ,EAAUS,GAEnBI,EAAYH,EAAKI,MAAM,MACvBC,EAAcJ,EAAOG,MAAM,MACjC,EACED,EAAUG,OAASD,EAAYC,OAC3B,CAACH,EAAWE,GACZ,CAACA,EAAaF,GACdI,GAJN,eAI4BC,KAAI,SAACC,EAAOC,GAAR,OAC9BR,EAAOC,EAAUO,IAAU,GAAIL,EAAYK,IAAU,GAAI,CAACC,gBAAgB,OAG5E,OACE,QAACC,EAAD,CAAYd,UAAWA,EAAvB,UACE,QAACe,EAAD,UACGN,EAAQC,KAAI,SAACM,EAAMC,GAClB,IAAMC,EAAiBF,EAAKG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,SAC5CC,EAAmBN,EAAKG,MAAK,SAAAC,GAAM,OAAIA,EAAOG,WAEpD,OACE,yBACE,QAACC,EAAD,CAAMC,UAAWH,EAAjB,UACE,QAACI,EAAD,UACGV,EACEW,QAAO,SAAAP,GAAM,OAAKA,EAAOC,SACzBX,KAAI,SAACU,EAAQQ,GAAT,OACH,QAACC,EAAD,CAAcJ,UAAWL,EAAOG,QAAhC,SACGH,EAAOU,OADCF,WAOnB,QAACG,EAAD,KAEA,QAACP,EAAD,CAAMQ,QAASd,EAAf,UACE,QAACQ,EAAD,UACGV,EACEW,QAAO,SAAAP,GAAM,OAAKA,EAAOG,WACzBb,KAAI,SAACU,EAAQQ,GAAT,OACH,QAACC,EAAD,CAAcG,QAASZ,EAAOC,MAA9B,SACGD,EAAOU,OADCF,YApBZX,WArBflB,E,wBAuDN,IAAMe,GAAa,OAAO,QAAP,sBAAH,kFAMVC,GAAY,OAAO,QAAP,sBAAH,gBACE,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,KAAKC,aADpB,eAEA,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,gBAFb,KAKTb,GAAO,OAAO,KAAP,sBAAH,uBAEN,SAAAS,GAAC,OAAIA,EAAER,WAAF,4BAAoCQ,EAAEC,MAAMI,KAAKC,cAFhD,KAGN,SAAAN,GAAC,OAAIA,EAAED,SAAF,4BAAkCC,EAAEC,MAAMI,KAAKE,YAH9C,KAMJT,GAAM,OAAO,KAAP,sBAAH,sCAIHL,GAAO,OAAO,MAAP,sBAAH,sDAKJG,GAAO,OAAO,OAAP,sBAAH,8CAGN,SAAAI,GAAC,OAAIA,EAAER,WAAF,4BAAoCQ,EAAEC,MAAMI,KAAKf,WAHhD,KAIN,SAAAU,GAAC,OAAIA,EAAED,SAAF,4BAAkCC,EAAEC,MAAMI,KAAKjB,SAJ9C,KAOV","file":"chunks/app_components_splitDiff_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import styled from '@emotion/styled';\nimport {Change, diffChars, diffLines, diffWords} from 'diff';\n\nconst diffFnMap = {\n  chars: diffChars,\n  words: diffWords,\n  lines: diffLines,\n} as const;\n\ntype Props = {\n  base: string;\n  target: string;\n  type?: keyof typeof diffFnMap;\n  className?: string;\n};\n\nconst SplitDiff = ({className, type = 'lines', base, target}: Props) => {\n  const diffFn = diffFnMap[type];\n\n  const baseLines = base.split('\\n');\n  const targetLines = target.split('\\n');\n  const [largerArray] =\n    baseLines.length > targetLines.length\n      ? [baseLines, targetLines]\n      : [targetLines, baseLines];\n  const results = largerArray.map((_line, index) =>\n    diffFn(baseLines[index] || '', targetLines[index] || '', {newlineIsToken: true})\n  );\n\n  return (\n    <SplitTable className={className}>\n      <SplitBody>\n        {results.map((line, j) => {\n          const highlightAdded = line.find(result => result.added);\n          const highlightRemoved = line.find(result => result.removed);\n\n          return (\n            <tr key={j}>\n              <Cell isRemoved={highlightRemoved}>\n                <Line>\n                  {line\n                    .filter(result => !result.added)\n                    .map((result, i) => (\n                      <Word key={i} isRemoved={result.removed}>\n                        {result.value}\n                      </Word>\n                    ))}\n                </Line>\n              </Cell>\n\n              <Gap />\n\n              <Cell isAdded={highlightAdded}>\n                <Line>\n                  {line\n                    .filter(result => !result.removed)\n                    .map((result, i) => (\n                      <Word key={i} isAdded={result.added}>\n                        {result.value}\n                      </Word>\n                    ))}\n                </Line>\n              </Cell>\n            </tr>\n          );\n        })}\n      </SplitBody>\n    </SplitTable>\n  );\n};\n\nconst SplitTable = styled('table')`\n  table-layout: fixed;\n  border-collapse: collapse;\n  width: 100%;\n`;\n\nconst SplitBody = styled('tbody')`\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst Cell = styled('td')<{isRemoved?: Change; isAdded?: Change}>`\n  vertical-align: top;\n  ${p => p.isRemoved && `background-color: ${p.theme.diff.removedRow}`};\n  ${p => p.isAdded && `background-color: ${p.theme.diff.addedRow}`};\n`;\n\nconst Gap = styled('td')`\n  width: 20px;\n`;\n\nconst Line = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Word = styled('span')<{isRemoved?: boolean; isAdded?: boolean}>`\n  white-space: pre-wrap;\n  word-break: break-all;\n  ${p => p.isRemoved && `background-color: ${p.theme.diff.removed}`};\n  ${p => p.isAdded && `background-color: ${p.theme.diff.added}`};\n`;\n\nexport default SplitDiff;\n"],"sourceRoot":""}