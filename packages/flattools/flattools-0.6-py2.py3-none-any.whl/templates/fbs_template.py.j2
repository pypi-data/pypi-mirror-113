# automatically generated by the FlatBuffers compiler, do not modify
{% set cint_types = c_int_types() %}
{% if cint_types|length %}
from ctypes import (
{% endif %}
{% for int_type in cint_types %}
    c_{{int_type}} as {{int_type}},
{% endfor %}
{% if cint_types|length %}
)
{% endif %}
from dataclasses import dataclass
from typing import Protocol
{{imports}}
{% if __fbs_meta__.enums|length %}
from enum import Enum
{% endif %}
{% if __fbs_meta__.unions|length %}
from typing import Union
{% endif %}

{%- for fbs_enum in __fbs_meta__.enums %}
{% set enum_name = fbs_enum.__name__ %}


class {{enum_name}}(Enum):
{% for member, value in fbs_enum._fspec %}
    {{member}} = {{value}}
{% endfor %}
{% endfor %}

{%- for table in __fbs_meta__.tables if not table.view %}

{% set protocol = (table.attributes[0]|length and table.attributes[0][0] == 'protocol') %}
{% set bases = get_bases(table) %}
{% set bases = "(" ~ ", ".join(bases) ~ ")" if bases else "" %}
{% set table_name = table.__name__ %}
{% if protocol %}
class {{table_name}}(Protocol):
{% else %}
@dataclass
class {{table_name}}{{bases}}:
{% endif %}
{% for member, type in table['_fspec'].items() %}
{% set py_type = get_type(type[1]) %}
{% set quoted_py_type = "\"" ~ py_type ~ "\"" if py_type not in python_types.values() else py_type %}
    {{member}}: {{quoted_py_type}}
{% else %}
    pass
{% endfor %}
{% endfor %}

{%- for fbs_union in __fbs_meta__.unions %}

{% set union_name = fbs_union.__name__ %}

{{union_name}} = Union[
{%- for member, _ in fbs_union._fspec %}
{%- if loop.first %}
{{member}}
{%- else %}
, {{member}}
{%- endif %}
{%- endfor %}
]
{% endfor %}
