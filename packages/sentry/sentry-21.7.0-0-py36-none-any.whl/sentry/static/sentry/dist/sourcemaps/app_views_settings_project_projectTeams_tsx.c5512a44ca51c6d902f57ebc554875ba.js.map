{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/project/projectTeams.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","ProjectTeams","organization","props","access","Set","has","teamSlug","state","loading","params","orgId","projectId","removeTeamFromProject","api","then","handleRemovedTeam","catch","addErrorMessage","t","setState","prevState","projectTeams","filter","team","slug","addTeamToProject","handleAddedTeam","error","e","project","canCreateTeam","stopPropagation","preventDefault","openCreateTeamModal","onClose","data","remountComponent","this","routeTitleGen","hasAccess","includes","confirmRemove","menuHeader","StyledTeamsLabel","disabled","title","position","StyledCreateTeamLink","to","onClick","handleCreateTeam","selectedTeams","onAddTeam","handleAdd","onRemoveTeam","handleRemove","confirmLastTeamRemoveMessage","AsyncView","space","Link","p","css","theme","gray300"],"mappings":"mNAYA,IAZA,SACEA,EACAC,GAGQ,IAFRC,IAEQ,yDADRC,EACQ,uCACFC,EAAW,GAAH,OAAMJ,EAAN,cAAqBC,GAC7BI,EAAOF,EAAc,GAAH,OAAMC,EAAN,cAAoBD,GAAgBC,EAE5D,OAAOF,EAAa,GAAH,OAAMG,EAAN,aAAwBA,I,k6DCkBrCC,E,ioBAWY,WACd,IAAOC,EAAgB,EAAKC,MAArBD,aACDE,EAAS,IAAIC,IAAIH,EAAaE,QACpC,OACEA,EAAOE,IAAI,cAAgBF,EAAOE,IAAI,eAAiBF,EAAOE,IAAI,qB,kCAIvD,SAACC,GACd,IAAI,EAAKC,MAAMC,QAAf,CAIA,MAA2B,EAAKN,MAAMO,OAA/BC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAEdC,QAAsB,EAAKC,IAAKH,EAAOC,EAAWL,GAC/CQ,MAAK,kBAAM,EAAKC,kBAAkBT,MAClCU,OAAM,YACLC,SAAgBC,OAAE,+BAAgCZ,IAClD,EAAKa,SAAS,CAACX,SAAS,Y,uCAIV,SAACF,GACnB,EAAKa,UAAS,SAAAC,GAAS,MAAK,CAC1BC,cAAc,QACRD,EAAUC,cAAgB,IAAIC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASlB,c,qCAKnD,SAACiB,GACjB,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BC,aAAc,GAAF,eAAOD,EAAUC,cAAgB,IAAjC,CAAsCE,Y,+BAI1C,SAACA,GACX,IAAI,EAAKhB,MAAMC,QAAf,CAGA,MAA2B,EAAKN,MAAMO,OAA/BC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAEdc,QAAiB,EAAKZ,IAAKH,EAAOC,EAAWY,GAAMT,MACjD,WACE,EAAKY,gBAAgBH,MAEvB,WACE,EAAKJ,SAAS,CACZQ,OAAO,EACPnB,SAAS,Y,sCAME,SAACoB,GAClB,MAAgC,EAAK1B,MAA9B2B,EAAP,EAAOA,QAAS5B,EAAhB,EAAgBA,aAEX,EAAK6B,kBAIVF,EAAEG,kBACFH,EAAEI,kBAEFC,yBAAoB,CAClBJ,UACA5B,eACAiC,QAAS,SAAAC,IACPV,QAAiB,EAAKZ,IAAKZ,EAAauB,KAAMK,EAAQL,KAAMW,GAAMrB,KAChE,EAAKsB,iBACL,EAAKA,yB,6CAlFb,WACE,MAA2BC,KAAKnC,MAAMO,OAA/BC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,UACd,MAAO,CAAC,CAAC,eAAD,oBAA8BD,EAA9B,YAAuCC,EAAvC,e,sBAGV,WACE,IAAOA,EAAa0B,KAAKnC,MAAMO,OAAxBE,UACP,OAAO2B,QAAcpB,OAAE,iBAAkBP,GAAW,K,wBAiFtD,WACE,MAA+B0B,KAAKnC,MAA7BO,EAAP,EAAOA,OAAQR,EAAf,EAAeA,aAET6B,EAAgBO,KAAKP,gBACrBS,EAAYtC,EAAaE,OAAOqC,SAAS,iBACzCC,GAAgBvB,OACpB,0NAGAT,EAAOE,WAEFU,EAAgBgB,KAAK9B,MAArBc,aAEDqB,GACJ,QAACC,EAAD,YACGzB,OAAE,UACH,QAAC,IAAD,CACE0B,SAAUd,EACVe,OAAO3B,OAAE,+CACT4B,SAAS,MAHX,UAKE,QAACC,EAAD,CACEC,GAAG,GACHJ,UAAWd,EACXmB,QAASZ,KAAKa,iBAHhB,UAKGhC,OAAE,sBAMX,OACE,0BACE,QAAC,IAAD,CAAoB2B,OAAO3B,OAAE,WAAYT,EAAOE,cAChD,QAAC,IAAD,CACEV,aAAcA,EACdkD,cAAe9B,UAAgB,GAC/B+B,UAAWf,KAAKgB,UAChBC,aAAcjB,KAAKkB,aACnBb,WAAYA,EACZc,6BAA8Bf,EAC9BG,UAAWL,W,GAnIMkB,KA0IrBd,GAAmB,OAAO,MAAP,sBAAH,8BAETe,OAAM,IAFG,kCAMhBX,GAAuB,OAAOY,IAAP,sBAAH,oCAGtB,SAAAC,GAAC,OACDA,EAAEhB,WACFiB,QADA,4BAGWD,EAAEE,MAAMC,QAHnB,sBAJsB,KAY1B","file":"chunks/app_views_settings_project_projectTeams_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport {addTeamToProject, removeTeamFromProject} from 'app/actionCreators/projects';\nimport Link from 'app/components/links/link';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Project, Team} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'app/views/settings/components/teamSelect';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & WithRouterProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  projectTeams: null | Team[];\n} & AsyncView['state'];\n\nclass ProjectTeams extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['projectTeams', `/projects/${orgId}/${projectId}/teams/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Teams'), projectId, false);\n  }\n\n  canCreateTeam = () => {\n    const {organization} = this.props;\n    const access = new Set(organization.access);\n    return (\n      access.has('org:write') && access.has('team:write') && access.has('project:write')\n    );\n  };\n\n  handleRemove = (teamSlug: Team['slug']) => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {orgId, projectId} = this.props.params;\n\n    removeTeamFromProject(this.api, orgId, projectId, teamSlug)\n      .then(() => this.handleRemovedTeam(teamSlug))\n      .catch(() => {\n        addErrorMessage(t('Could not remove the %s team', teamSlug));\n        this.setState({loading: false});\n      });\n  };\n\n  handleRemovedTeam = (teamSlug: Team['slug']) => {\n    this.setState(prevState => ({\n      projectTeams: [\n        ...(prevState.projectTeams || []).filter(team => team.slug !== teamSlug),\n      ],\n    }));\n  };\n\n  handleAddedTeam = (team: Team) => {\n    this.setState(prevState => ({\n      projectTeams: [...(prevState.projectTeams || []), team],\n    }));\n  };\n\n  handleAdd = (team: Team) => {\n    if (this.state.loading) {\n      return;\n    }\n    const {orgId, projectId} = this.props.params;\n\n    addTeamToProject(this.api, orgId, projectId, team).then(\n      () => {\n        this.handleAddedTeam(team);\n      },\n      () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      }\n    );\n  };\n\n  handleCreateTeam = (e: React.MouseEvent) => {\n    const {project, organization} = this.props;\n\n    if (!this.canCreateTeam()) {\n      return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openCreateTeamModal({\n      project,\n      organization,\n      onClose: data => {\n        addTeamToProject(this.api, organization.slug, project.slug, data).then(\n          this.remountComponent,\n          this.remountComponent\n        );\n      },\n    });\n  };\n\n  renderBody() {\n    const {params, organization} = this.props;\n\n    const canCreateTeam = this.canCreateTeam();\n    const hasAccess = organization.access.includes('project:write');\n    const confirmRemove = t(\n      'This is the last team with access to this project. Removing it will mean ' +\n        'only organization owners and managers will be able to access the project pages. Are ' +\n        'you sure you want to remove this team from the project %s?',\n      params.projectId\n    );\n    const {projectTeams} = this.state;\n\n    const menuHeader = (\n      <StyledTeamsLabel>\n        {t('Teams')}\n        <Tooltip\n          disabled={canCreateTeam}\n          title={t('You must be a project admin to create teams')}\n          position=\"top\"\n        >\n          <StyledCreateTeamLink\n            to=\"\"\n            disabled={!canCreateTeam}\n            onClick={this.handleCreateTeam}\n          >\n            {t('Create Team')}\n          </StyledCreateTeamLink>\n        </Tooltip>\n      </StyledTeamsLabel>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('%s Teams', params.projectId)} />\n        <TeamSelect\n          organization={organization}\n          selectedTeams={projectTeams ?? []}\n          onAddTeam={this.handleAdd}\n          onRemoveTeam={this.handleRemove}\n          menuHeader={menuHeader}\n          confirmLastTeamRemoveMessage={confirmRemove}\n          disabled={!hasAccess}\n        />\n      </div>\n    );\n  }\n}\n\nconst StyledTeamsLabel = styled('div')`\n  font-size: 0.875em;\n  padding: ${space(0.5)} 0px;\n  text-transform: uppercase;\n`;\n\nconst StyledCreateTeamLink = styled(Link)`\n  float: right;\n  text-transform: none;\n  ${p =>\n    p.disabled &&\n    css`\n      cursor: not-allowed;\n      color: ${p.theme.gray300};\n      opacity: 0.6;\n    `};\n`;\n\nexport default ProjectTeams;\n"],"sourceRoot":""}