{"version":3,"sources":["webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/organizationPerformance/index.tsx","webpack:///../node_modules/core-js/internals/date-to-primitive.js","webpack:///../node_modules/core-js/modules/es.date.to-primitive.js","webpack:///../node_modules/core-js/modules/es.symbol.to-primitive.js"],"names":["FormPanel","this","props","title","fields","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","id","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","highlighted","name","React","JsonForm","location","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","state","formGroup","i","renderForm","withRouter","PermissionAlert","hasAccess","type","icon","size","t","required","label","help","tct","link","href","OrganizationPerformance","data","updateOrganization","organization","Set","endpoint","slug","jsonFormSettings","has","Fragment","apiMethod","apiEndpoint","saveOnBlur","allowUndo","initialData","onSubmitSuccess","handleSuccess","onSubmitError","addErrorMessage","Component","withOrganization","anObject","toPrimitive","module","exports","hint","TypeError","createNonEnumerableProperty","dateToPrimitive","TO_PRIMITIVE","wellKnownSymbol","DatePrototype","Date","prototype","defineWellKnownSymbol"],"mappings":"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","file":"chunks/app_views_settings_organizationPerformance_index_tsx-node_modules_core-js_modules_es_date_to--d87ab1.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = DefaultProps & {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import * as React from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  additionalFieldProps?: {[key: string]: any};\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.location.hash !== nextProps.location.hash) {\n      const hash = nextProps.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(JsonForm);\n","import * as React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['org:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner or manager role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Component, Fragment} from 'react';\nimport {Location} from 'history';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {updateOrganization} from 'app/actionCreators/organizations';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {t, tct} from 'app/locale';\nimport {Organization} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport {JsonFormObject} from 'app/views/settings/components/forms/type';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/organization/permissionAlert';\n\nconst fields: JsonFormObject[] = [\n  {\n    title: t('General'),\n    fields: [\n      {\n        name: 'apdexThreshold',\n        type: 'number',\n        required: true,\n        label: t('Response Time Threshold (Apdex)'),\n        help: tct(\n          `Set a response time threshold in milliseconds to help define what satisfactory\n                and tolerable response times are. This value will be reflected in the\n                calculation of your [link:Apdex], a standard measurement in performance.`,\n          {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/performance-monitoring/performance/metrics/#apdex\" />\n            ),\n          }\n        ),\n      },\n    ],\n  },\n];\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n};\n\nclass OrganizationPerformance extends Component<Props> {\n  handleSuccess = (data: Organization) => {\n    updateOrganization(data);\n  };\n\n  render() {\n    const {location, organization} = this.props;\n    const features = new Set(organization.features);\n    const access = new Set(organization.access);\n    const endpoint = `/organizations/${organization.slug}/`;\n\n    const jsonFormSettings = {\n      location,\n      features,\n      access,\n      disabled: !(access.has('org:write') && features.has('performance-view')),\n    };\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title=\"Performance\" />\n        <PermissionAlert />\n\n        <Form\n          data-test-id=\"organization-performance-settings\"\n          apiMethod=\"PUT\"\n          apiEndpoint={endpoint}\n          saveOnBlur\n          allowUndo\n          initialData={organization}\n          onSubmitSuccess={this.handleSuccess}\n          onSubmitError={() => addErrorMessage('Unable to save changes')}\n        >\n          <JsonForm {...jsonFormSettings} forms={fields} />\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationPerformance);\n","'use strict';\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// `Date.prototype[@@toPrimitive](hint)` method implementation\n// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== 'number' && hint !== 'default') {\n    throw TypeError('Incorrect hint');\n  } return toPrimitive(anObject(this), hint !== 'number');\n};\n","var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar dateToPrimitive = require('../internals/date-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar DatePrototype = Date.prototype;\n\n// `Date.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive\nif (!(TO_PRIMITIVE in DatePrototype)) {\n  createNonEnumerableProperty(DatePrototype, TO_PRIMITIVE, dateToPrimitive);\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n"],"sourceRoot":""}