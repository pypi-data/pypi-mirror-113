{"version":3,"sources":["webpack:///./app/components/forms/multiSelectControl.tsx","webpack:///./app/views/settings/project/projectOwnership/selectOwners.tsx","webpack:///./app/views/settings/project/projectOwnership/ruleBuilder.tsx","webpack:///./app/views/settings/project/projectOwnership/ownerInput.tsx","webpack:///../node_modules/core-js/modules/es.array.find-index.js","webpack:///../node_modules/lodash/_isIterateeCall.js","webpack:///../node_modules/lodash/chunk.js"],"names":["forwardRef","props","ref","forwardedRef","multiple","ValueComponent","data","removeProps","ValueWrapper","onClick","actor","size","getSearchKeyForUser","user","email","toLowerCase","name","SelectOwners","loading","inputValue","React","avatarSize","hideEmail","useLink","value","buildUserId","id","label","renderUserBadge","searchKey","type","createMentionableUser","disabled","DisabledLabel","position","title","t","team","buildTeamId","slug","canAddTeam","organization","access","includes","createMentionableTeam","Container","AddToProjectButton","borderless","handleAddTeamToProject","bind","icon","isCircled","newValue","onChange","setState","onInputChange","debounce","query","cb","api","requestPromise","then","err","usersInProject","getMentionableUsers","teamsInProject","getMentionableTeams","teamsNotInProject","getTeamsNotInProject","usersInProjectById","map","Promise","resolve","reject","queryMembers","state","result","members","filter","indexOf","createUnmentionableUser","prevProps","isEqual","this","projects","closeSelectMenu","MemberListStore","project","projectData","ProjectsStore","teams","TeamStore","excludedTeamIds","createUnmentionableTeam","selectRef","current","node","ReactDOM","input","querySelector","blur","oldValue","addTeamToProject","filterOption","option","filterText","loadOptions","handleLoadOptions","defaultOptions","async","clearable","cache","placeholder","components","MultiValue","handleInputChange","handleChange","css","withApi","withProjects","Button","space","initialState","text","tagName","owners","isValid","getMatchPlaceholder","RuleBuilder","length","val","checkIsValid","e","target","ownerText","owner","join","quotedText","match","rule","onAddRule","addErrorMessage","urls","paths","Candidates","v","RuleCandidate","handleSelectCandidate","StyledIconAdd","StyledTextOverflow","TypeHint","BuilderBar","BuilderSelect","handleTypeChange","options","style","width","BuilderTagNameInput","handleTagNameChangeValue","BuilderInput","handleChangeValue","Divider","direction","SelectOwnersWrapper","handleChangeOwners","AddButton","priority","handleAddRule","p","theme","border","TextOverflow","familyMono","IconAdd","SelectField","Input","IconChevron","OwnerInput","hasChanges","error","onSave","request","Client","method","raw","addSuccessMessage","catch","responseJSON","status","startsWith","initialText","handleUpdateOwnership","InvalidOwners","SyntaxOverlay","line","parseInt","member","display","projectWithTeams","onKeyDown","metaKey","key","StyledTextArea","defined","spellCheck","autoComplete","autoCorrect","autoCapitalize","ActionBar","parseError","SaveButton","inputStyles","TextareaAutosize","$","$findIndex","addToUnscopables","FIND_INDEX","SKIPS_HOLES","Array","proto","forced","findIndex","callbackfn","arguments","undefined","eq","isArrayLike","isIndex","isObject","module","exports","index","object","baseSlice","isIterateeCall","toInteger","nativeCeil","Math","ceil","nativeMax","max","array","guard","resIndex"],"mappings":"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","file":"chunks/app_views_settings_project_projectOwnership_ownerInput_tsx-node_modules_core-js_modules_es_ar-d86f55.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {forwardRef} from 'react';\nimport ReactSelect from 'react-select';\n\nimport SelectControl, {ControlProps} from 'app/components/forms/selectControl';\nimport {SelectValue} from 'app/types';\n\nexport type MultiControlProps = Omit<ControlProps, 'onChange'> & {\n  /**\n   * Triggered when values change.\n   */\n  onChange?: (value?: SelectValue<any>[] | null) => void;\n};\n\nexport default forwardRef<ReactSelect, MultiControlProps>(function MultiSelectControl(\n  props,\n  ref\n) {\n  return <SelectControl forwardedRef={ref} {...props} multiple />;\n});\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport {MultiValueProps} from 'react-select';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport {addTeamToProject} from 'app/actionCreators/projects';\nimport {Client} from 'app/api';\nimport ActorAvatar from 'app/components/avatar/actorAvatar';\nimport Button from 'app/components/button';\nimport MultiSelectControl from 'app/components/forms/multiSelectControl';\nimport IdBadge from 'app/components/idBadge';\nimport Tooltip from 'app/components/tooltip';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport TeamStore from 'app/stores/teamStore';\nimport space from 'app/styles/space';\nimport {Actor, Member, Organization, Project, Team, User} from 'app/types';\nimport {buildTeamId, buildUserId} from 'app/utils';\nimport withApi from 'app/utils/withApi';\nimport withProjects from 'app/utils/withProjects';\n\nexport type Owner = {\n  value: string;\n  label: React.ReactNode;\n  searchKey: string;\n  actor: Actor;\n  disabled?: boolean;\n};\n\nfunction ValueComponent({data, removeProps}: MultiValueProps<Owner>) {\n  return (\n    <ValueWrapper onClick={removeProps.onClick}>\n      <ActorAvatar actor={data.actor} size={28} />\n    </ValueWrapper>\n  );\n}\n\nconst getSearchKeyForUser = (user: User) =>\n  `${user.email && user.email.toLowerCase()} ${user.name && user.name.toLowerCase()}`;\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n  value: any;\n  onChange: (owners: Owner[]) => void;\n  disabled: boolean;\n  onInputChange?: (text: string) => void;\n};\n\ntype State = {\n  loading: boolean;\n  inputValue: string;\n};\n\nclass SelectOwners extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    inputValue: '',\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    // Once a team has been added to the project the menu can be closed.\n    if (!isEqual(this.props.projects, prevProps.projects)) {\n      this.closeSelectMenu();\n    }\n  }\n\n  private selectRef = React.createRef<any>();\n\n  renderUserBadge = (user: User) => (\n    <IdBadge avatarSize={24} user={user} hideEmail useLink={false} />\n  );\n\n  createMentionableUser = (user: User): Owner => ({\n    value: buildUserId(user.id),\n    label: this.renderUserBadge(user),\n    searchKey: getSearchKeyForUser(user),\n    actor: {\n      type: 'user' as const,\n      id: user.id,\n      name: user.name,\n    },\n  });\n\n  createUnmentionableUser = ({user}): Owner => ({\n    ...this.createMentionableUser(user),\n    disabled: true,\n    label: (\n      <DisabledLabel>\n        <Tooltip\n          position=\"left\"\n          title={t('%s is not a member of project', user.name || user.email)}\n        >\n          {this.renderUserBadge(user)}\n        </Tooltip>\n      </DisabledLabel>\n    ),\n  });\n\n  createMentionableTeam = (team: Team): Owner => ({\n    value: buildTeamId(team.id),\n    label: <IdBadge team={team} />,\n    searchKey: `#${team.slug}`,\n    actor: {\n      type: 'team' as const,\n      id: team.id,\n      name: team.slug,\n    },\n  });\n\n  createUnmentionableTeam = (team: Team): Owner => {\n    const {organization} = this.props;\n    const canAddTeam = organization.access.includes('project:write');\n\n    return {\n      ...this.createMentionableTeam(team),\n      disabled: true,\n      label: (\n        <Container>\n          <DisabledLabel>\n            <Tooltip\n              position=\"left\"\n              title={t('%s is not a member of project', `#${team.slug}`)}\n            >\n              <IdBadge team={team} />\n            </Tooltip>\n          </DisabledLabel>\n          <Tooltip\n            title={\n              canAddTeam\n                ? t('Add %s to project', `#${team.slug}`)\n                : t('You do not have permission to add team to project.')\n            }\n          >\n            <AddToProjectButton\n              size=\"zero\"\n              borderless\n              disabled={!canAddTeam}\n              onClick={this.handleAddTeamToProject.bind(this, team)}\n              icon={<IconAdd isCircled />}\n            />\n          </Tooltip>\n        </Container>\n      ),\n    };\n  };\n\n  getMentionableUsers() {\n    return MemberListStore.getAll().map(this.createMentionableUser);\n  }\n\n  getMentionableTeams() {\n    const {project} = this.props;\n    const projectData = ProjectsStore.getBySlug(project.slug);\n\n    if (!projectData) {\n      return [];\n    }\n\n    return projectData.teams.map(this.createMentionableTeam);\n  }\n\n  /**\n   * Get list of teams that are not in the current project, for use in `MultiSelectMenu`\n   */\n  getTeamsNotInProject(teamsInProject: Owner[] = []) {\n    const teams = TeamStore.getAll() || [];\n    const excludedTeamIds = teamsInProject.map(({actor}) => actor.id);\n\n    return teams\n      .filter(team => excludedTeamIds.indexOf(team.id) === -1)\n      .map(this.createUnmentionableTeam);\n  }\n\n  /**\n   * Closes the select menu by blurring input if possible since that seems to be the only\n   * way to close it.\n   */\n  closeSelectMenu() {\n    // Close select menu\n    if (this.selectRef.current) {\n      // eslint-disable-next-line react/no-find-dom-node\n      const node = ReactDOM.findDOMNode(this.selectRef.current);\n      const input: HTMLInputElement | null = (node as Element)?.querySelector(\n        '.Select-input input'\n      );\n      if (input) {\n        // I don't think there's another way to close `react-select`\n        input.blur();\n      }\n    }\n  }\n\n  async handleAddTeamToProject(team) {\n    const {api, organization, project, value} = this.props;\n    // Copy old value\n    const oldValue = [...value];\n\n    // Optimistic update\n    this.props.onChange([...this.props.value, this.createMentionableTeam(team)]);\n\n    try {\n      // Try to add team to project\n      // Note: we can't close select menu here because we have to wait for ProjectsStore to update first\n      // The reason for this is because we have little control over `react-select`'s `AsyncSelect`\n      // We can't control when `handleLoadOptions` gets called, but it gets called when select closes, so\n      // wait for store to update before closing the menu. Otherwise, we'll have stale items in the select menu\n      await addTeamToProject(api, organization.slug, project.slug, team);\n    } catch (err) {\n      // Unable to add team to project, revert select menu value\n      this.props.onChange(oldValue);\n      this.closeSelectMenu();\n    }\n  }\n\n  handleChange = (newValue: Owner[]) => {\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (inputValue: string) => {\n    this.setState({inputValue});\n\n    if (this.props.onInputChange) {\n      this.props.onInputChange(inputValue);\n    }\n  };\n\n  queryMembers = debounce((query, cb) => {\n    const {api, organization} = this.props;\n\n    // Because this function is debounced, the component can potentially be\n    // unmounted before this fires, in which case, `this.api` is null\n    if (!api) {\n      return null;\n    }\n\n    return api\n      .requestPromise(`/organizations/${organization.slug}/members/`, {\n        query: {query},\n      })\n      .then(\n        (data: Member[]) => cb(null, data),\n        err => cb(err)\n      );\n  }, 250);\n\n  handleLoadOptions = () => {\n    const usersInProject = this.getMentionableUsers();\n    const teamsInProject = this.getMentionableTeams();\n    const teamsNotInProject = this.getTeamsNotInProject(teamsInProject);\n    const usersInProjectById = usersInProject.map(({actor}) => actor.id);\n\n    // Return a promise for `react-select`\n    return new Promise((resolve, reject) => {\n      this.queryMembers(this.state.inputValue, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    })\n      .then(members =>\n        // Be careful here as we actually want the `users` object, otherwise it means user\n        // has not registered for sentry yet, but has been invited\n        members\n          ? (members as Member[])\n              .filter(({user}) => user && usersInProjectById.indexOf(user.id) === -1)\n              .map(this.createUnmentionableUser)\n          : []\n      )\n      .then(members => {\n        return [...usersInProject, ...teamsInProject, ...teamsNotInProject, ...members];\n      });\n  };\n\n  render() {\n    return (\n      <MultiSelectControl\n        name=\"owners\"\n        filterOption={(option, filterText) =>\n          option.data.searchKey.indexOf(filterText) > -1\n        }\n        ref={this.selectRef}\n        loadOptions={this.handleLoadOptions}\n        defaultOptions\n        async\n        clearable\n        disabled={this.props.disabled}\n        cache={false}\n        placeholder={t('owners')}\n        components={{\n          MultiValue: ValueComponent,\n        }}\n        onInputChange={this.handleInputChange}\n        onChange={this.handleChange}\n        value={this.props.value}\n        css={{width: 200}}\n      />\n    );\n  }\n}\n\nexport default withApi(withProjects(SelectOwners));\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DisabledLabel = styled('div')`\n  opacity: 0.5;\n  overflow: hidden; /* Needed so that \"Add to team\" button can fit */\n`;\n\nconst AddToProjectButton = styled(Button)`\n  flex-shrink: 0;\n`;\n\nconst ValueWrapper = styled('a')`\n  margin-right: ${space(0.5)};\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport SelectField from 'app/components/forms/selectField';\nimport TextOverflow from 'app/components/textOverflow';\nimport {IconAdd, IconChevron} from 'app/icons';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport Input from 'app/views/settings/components/forms/controls/input';\nimport SelectOwners, {\n  Owner,\n} from 'app/views/settings/project/projectOwnership/selectOwners';\n\nconst initialState = {\n  text: '',\n  tagName: '',\n  type: 'path',\n  owners: [],\n  isValid: false,\n};\n\nfunction getMatchPlaceholder(type: string): string {\n  switch (type) {\n    case 'path':\n      return 'src/example/*';\n    case 'url':\n      return 'https://example.com/settings/*';\n    case 'tag':\n      return 'tag-value';\n    default:\n      return '';\n  }\n}\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  onAddRule: (rule: string) => void;\n  urls: string[];\n  paths: string[];\n  disabled: boolean;\n};\n\ntype State = {\n  text: string;\n  tagName: string;\n  type: string;\n  owners: Owner[];\n  isValid: boolean;\n};\n\nclass RuleBuilder extends React.Component<Props, State> {\n  state: State = initialState;\n\n  checkIsValid = () => {\n    this.setState(state => ({\n      isValid: !!state.text && state.owners && !!state.owners.length,\n    }));\n  };\n\n  handleTypeChange = (val: string | number | boolean) => {\n    this.setState({type: val as string}); // TODO(ts): Add select value type as generic to select controls\n    this.checkIsValid();\n  };\n\n  handleTagNameChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({tagName: e.target.value}, this.checkIsValid);\n  };\n\n  handleChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({text: e.target.value});\n    this.checkIsValid();\n  };\n\n  handleChangeOwners = (owners: Owner[]) => {\n    this.setState({owners});\n    this.checkIsValid();\n  };\n\n  handleAddRule = () => {\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    if (!isValid) {\n      addErrorMessage('A rule needs a type, a value, and one or more issue owners.');\n      return;\n    }\n\n    const ownerText = owners\n      .map(owner =>\n        owner.actor.type === 'team'\n          ? `#${owner.actor.name}`\n          : MemberListStore.getById(owner.actor.id)?.email\n      )\n      .join(' ');\n\n    const quotedText = text.match(/\\s/) ? `\"${text}\"` : text;\n\n    const rule = `${\n      type === 'tag' ? `tags.${tagName}` : type\n    }:${quotedText} ${ownerText}`;\n    this.props.onAddRule(rule);\n    this.setState(initialState);\n  };\n\n  handleSelectCandidate = (text: string, type: string) => {\n    this.setState({text, type});\n    this.checkIsValid();\n  };\n\n  render() {\n    const {urls, paths, disabled, project, organization} = this.props;\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    return (\n      <React.Fragment>\n        {(paths || urls) && (\n          <Candidates>\n            {paths &&\n              paths.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'path')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[PATH]</TypeHint>\n                </RuleCandidate>\n              ))}\n            {urls &&\n              urls.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'url')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <TypeHint>[URL]</TypeHint>\n                </RuleCandidate>\n              ))}\n          </Candidates>\n        )}\n        <BuilderBar>\n          <BuilderSelect\n            name=\"select-type\"\n            value={type}\n            onChange={this.handleTypeChange}\n            options={[\n              {value: 'path', label: t('Path')},\n              {value: 'tag', label: t('Tag')},\n              {value: 'url', label: t('URL')},\n            ]}\n            style={{width: 140}}\n            clearable={false}\n            disabled={disabled}\n          />\n          {type === 'tag' && (\n            <BuilderTagNameInput\n              value={tagName}\n              onChange={this.handleTagNameChangeValue}\n              disabled={disabled}\n              placeholder=\"tag-name\"\n            />\n          )}\n          <BuilderInput\n            value={text}\n            onChange={this.handleChangeValue}\n            disabled={disabled}\n            placeholder={getMatchPlaceholder(type)}\n          />\n          <Divider direction=\"right\" />\n          <SelectOwnersWrapper>\n            <SelectOwners\n              organization={organization}\n              project={project}\n              value={owners}\n              onChange={this.handleChangeOwners}\n              disabled={disabled}\n            />\n          </SelectOwnersWrapper>\n\n          <AddButton\n            priority=\"primary\"\n            disabled={!isValid}\n            onClick={this.handleAddRule}\n            icon={<IconAdd isCircled />}\n            size=\"small\"\n          />\n        </BuilderBar>\n      </React.Fragment>\n    );\n  }\n}\nconst Candidates = styled('div')`\n  margin-bottom: 10px;\n`;\n\nconst TypeHint = styled('div')`\n  color: ${p => p.theme.border};\n`;\n\nconst StyledTextOverflow = styled(TextOverflow)`\n  flex: 1;\n`;\n\nconst RuleCandidate = styled('div')`\n  font-family: ${p => p.theme.text.familyMono};\n  border: 1px solid ${p => p.theme.border};\n  background-color: #f8fafd;\n  padding-left: 5px;\n  margin-bottom: 3px;\n  cursor: pointer;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconAdd = styled(IconAdd)`\n  color: ${p => p.theme.border};\n  margin-right: 5px;\n  flex-shrink: 0;\n`;\n\nconst BuilderBar = styled('div')`\n  display: flex;\n  height: 40px;\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nconst BuilderSelect = styled(SelectField)`\n  margin-right: ${space(1.5)};\n  width: 50px;\n  flex-shrink: 0;\n`;\n\nconst BuilderInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n`;\n\nconst BuilderTagNameInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n  width: 200px;\n`;\n\nconst Divider = styled(IconChevron)`\n  color: ${p => p.theme.border};\n  flex-shrink: 0;\n  margin-right: 5px;\n`;\n\nconst SelectOwnersWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(1)};\n`;\n\nconst AddButton = styled(Button)`\n  padding: ${space(0.5)}; /* this sizes the button up to align with the inputs */\n`;\n\nexport default RuleBuilder;\n","import * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport {inputStyles} from 'app/styles/input';\nimport {Organization, Project, Team} from 'app/types';\nimport {defined} from 'app/utils';\n\nimport RuleBuilder from './ruleBuilder';\n\nconst defaultProps = {\n  urls: [] as string[],\n  paths: [] as string[],\n  disabled: false,\n};\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  initialText: string;\n  onSave?: (text: string | null) => void;\n} & typeof defaultProps;\n\ntype State = {\n  hasChanges: boolean;\n  text: string | null;\n  error: null | {\n    raw: string[];\n  };\n};\n\nclass OwnerInput extends React.Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    hasChanges: false,\n    text: null,\n    error: null,\n  };\n\n  parseError(error: State['error']) {\n    const text = error?.raw?.[0];\n    if (!text) {\n      return null;\n    }\n\n    if (text.startsWith('Invalid rule owners:')) {\n      return <InvalidOwners>{text}</InvalidOwners>;\n    } else {\n      return (\n        <SyntaxOverlay line={parseInt(text.match(/line (\\d*),/)?.[1] ?? '', 10) - 1} />\n      );\n    }\n  }\n\n  handleUpdateOwnership = () => {\n    const {organization, project, onSave} = this.props;\n    const {text} = this.state;\n    this.setState({error: null});\n\n    const api = new Client();\n    const request = api.requestPromise(\n      `/projects/${organization.slug}/${project.slug}/ownership/`,\n      {\n        method: 'PUT',\n        data: {raw: text || ''},\n      }\n    );\n\n    request\n      .then(() => {\n        addSuccessMessage(t('Updated issue ownership rules'));\n        this.setState(\n          {\n            hasChanges: false,\n            text,\n          },\n          () => onSave && onSave(text)\n        );\n      })\n      .catch(error => {\n        this.setState({error: error.responseJSON});\n        if (error.status === 403) {\n          addErrorMessage(\n            t(\n              \"You don't have permission to modify issue ownership rules for this project\"\n            )\n          );\n        } else if (\n          error.status === 400 &&\n          error.responseJSON.raw &&\n          error.responseJSON.raw[0].startsWith('Invalid rule owners:')\n        ) {\n          addErrorMessage(\n            t('Unable to save issue ownership rule changes: ' + error.responseJSON.raw[0])\n          );\n        } else {\n          addErrorMessage(t('Unable to save issue ownership rule changes'));\n        }\n      });\n\n    return request;\n  };\n\n  mentionableUsers() {\n    return MemberListStore.getAll().map(member => ({\n      id: member.id,\n      display: member.email,\n      email: member.email,\n    }));\n  }\n\n  mentionableTeams() {\n    const {project} = this.props;\n    const projectWithTeams = ProjectsStore.getBySlug(project.slug);\n    if (!projectWithTeams) {\n      return [];\n    }\n    return projectWithTeams.teams.map((team: Team) => ({\n      id: team.id,\n      display: `#${team.slug}`,\n      email: team.id,\n    }));\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      hasChanges: true,\n      text: e.target.value,\n    });\n  };\n\n  handleAddRule = (rule: string) => {\n    const {initialText} = this.props;\n    this.setState(\n      ({text}) => ({\n        text: (text || initialText) + '\\n' + rule,\n      }),\n      this.handleUpdateOwnership\n    );\n  };\n\n  render() {\n    const {project, organization, disabled, urls, paths, initialText} = this.props;\n    const {hasChanges, text, error} = this.state;\n\n    return (\n      <React.Fragment>\n        <RuleBuilder\n          urls={urls}\n          paths={paths}\n          organization={organization}\n          project={project}\n          onAddRule={this.handleAddRule.bind(this)}\n          disabled={disabled}\n        />\n        <div\n          style={{position: 'relative'}}\n          onKeyDown={e => {\n            if (e.metaKey && e.key === 'Enter') {\n              this.handleUpdateOwnership();\n            }\n          }}\n        >\n          <StyledTextArea\n            placeholder={\n              '#example usage\\n' +\n              'path:src/example/pipeline/* person@sentry.io #infra\\n' +\n              'url:http://example.com/settings/* #product\\n' +\n              'tags.sku_class:enterprise #enterprise'\n            }\n            onChange={this.handleChange}\n            disabled={disabled}\n            value={defined(text) ? text : initialText}\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n          />\n          <ActionBar>\n            <div>{this.parseError(error)}</div>\n            <SaveButton>\n              <Button\n                size=\"small\"\n                priority=\"primary\"\n                onClick={this.handleUpdateOwnership}\n                disabled={disabled || !hasChanges}\n              >\n                {t('Save Changes')}\n              </Button>\n            </SaveButton>\n          </ActionBar>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst TEXTAREA_PADDING = 4;\nconst TEXTAREA_LINE_HEIGHT = 24;\n\nconst ActionBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst SyntaxOverlay = styled('div')<{line: number}>`\n  ${inputStyles};\n  width: 100%;\n  height: ${TEXTAREA_LINE_HEIGHT}px;\n  background-color: red;\n  opacity: 0.1;\n  pointer-events: none;\n  position: absolute;\n  top: ${({line}) => TEXTAREA_PADDING + line * 24}px;\n`;\n\nconst SaveButton = styled('div')`\n  text-align: end;\n  padding-top: 10px;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${p => inputStyles(p)};\n  min-height: 140px;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  padding-top: ${TEXTAREA_PADDING}px;\n  line-height: ${TEXTAREA_LINE_HEIGHT}px;\n`;\n\nconst InvalidOwners = styled('div')`\n  color: ${p => p.theme.error};\n  font-weight: bold;\n  margin-top: 12px;\n`;\n\nexport default OwnerInput;\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.es/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nmodule.exports = chunk;\n"],"sourceRoot":""}