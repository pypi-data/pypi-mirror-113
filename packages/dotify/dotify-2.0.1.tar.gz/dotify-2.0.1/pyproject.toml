[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
changelog_components = "semantic_release.changelog.changelog_headers,semantic_release.changelog.compare_url"
build_command = "python -m pip install poetry && poetry build"

[tool.poetry]
name = "dotify"
version = "2.0.1"
description = "üêçüé∂ Yet another Spotify Web API Python library"
readme = "README.md"
authors = ["billsioros <billsioros97@gmail.com>"]
license = "MIT"
homepage = "https://the-dotify-project.github.io/dotify"
repository = "https://github.com/the-dotify-project/dotify"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/the-dotify-project/dotify/issues"
"Changelog" = "https://github.com/the-dotify-project/dotify/releases"

[tool.poetry.dependencies]
python = "^3.7"
python-jsonschema-objects = "*"
youtube-search-python = "*"
requests = "*"
moviepy = "*"
spotipy = "*"
mutagen = "*"
pytube = "*"
cached-property = "^1.5.2"

[tool.poetry.dev-dependencies]
flake8 = "*"
isort = "*"
pytest = "*"
pytest-cov = "*"
tox = "^3.23.0"
tox-poetry-installer = {extras = ["poetry"], version = "^0.8.0"}
mypy = "^0.812"
black = "^20.8b1"
wemake-python-styleguide = "^0.15.2"
tox-gh-actions = "^2.5.0"
pre-commit = "^2.12.1"
mkdocs = "^1.1.2"
python-semantic-release = "^7.15.3"
mkdocs-material = "^7.1.3"
mkdocstrings = "^0.15.0"
mkdocs-minify-plugin = "^0.4.0"
tox-pyenv = "^1.1.0"
mkdocs-redirects = "^1.0.3"
pytest-sugar = "^0.9.4"
mdx-truly-sane-lists = "^1.2"
mike = "^1.0.1"
poethepoet = "^0.10.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.vulture]
min_confidence = 95
paths = ["dotify", "tests", "examples"]

[tool.poe.tasks]
clean = { cmd = "rm -rf ./**/__pycache__ dist site .pytest_cache .mypy_cache .coverage", help = "Clean up any auxiliary files" }
format = { cmd = "poetry run isort .; poetry run black .", help = "Format your codebase" }
hooks = { cmd = "poetry run pre-commit run --all-files", help = "Run all pre-commit hooks"}
test = { cmd = "poetry run pytest --cov=dotify", help = "Run the test suite and produce a coverage report" }
types = { cmd = "poetry run mypy dotify tests", help = "Run static type checking on your codebase" }
lint = { cmd = "poetry run flake8 .", help = "Lint your code for errors" }
docs = { cmd = "poetry run mike serve", help = "Build and serve the documentation" }
