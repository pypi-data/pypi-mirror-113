{"version":3,"sources":["webpack:///./app/components/modals/reprocessEventModal.tsx","webpack:///./app/views/settings/components/forms/numberField.tsx","webpack:///./app/views/settings/components/forms/radioField.tsx"],"names":["impacts","tct","strong","link","href","t","remainingEventsChoices","ReprocessingEventModal","maxEvents","undefined","closeModal","props","window","location","reload","setState","Number","addErrorMessage","this","organization","Header","Body","groupId","state","orgSlug","slug","endpoint","title","Fragment","closeButton","Introduction","StyledList","symbol","map","impact","index","submitLabel","apiEndpoint","apiMethod","initialData","remainingEvents","onSubmitSuccess","handleSuccess","onSubmitError","handleError","onCancel","footerClass","name","label","help","placeholder","onChange","handleMaxEventsChange","min","orientInline","choices","disabled","Component","p","theme","fontSizeLarge","List","space","fontSizeMedium","NumberField","type","RadioField","id","onBlur","e","field","value","React"],"mappings":"q/CAeA,IAAMA,EAAU,EACdC,QACE,+IACA,CAACC,QAAQ,wBAEXD,QACE,qJACA,CACEC,QAAQ,qBACRC,MACE,QAAC,IAAD,CAAcC,KAAK,uGAIzBC,OACE,0FAIEC,EAA6C,CACjD,CAAC,QAAQD,OAAE,SACX,CAAC,UAAUA,OAAE,YAcTE,E,wnBACW,CAACC,eAAWC,K,mCAEX,YAGdC,EAFqB,EAAKC,MAAnBD,cAGPE,OAAOC,SAASC,a,2CAOM,SAACN,GACvB,EAAKO,SAAS,CAACP,UAAWQ,OAAOR,SAAcC,O,4CALjD,YACEQ,SAAgBZ,OAAE,oD,oBAOpB,WACE,MAA0Da,KAAKP,MAAxDQ,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,KAAMX,EAAnC,EAAmCA,WAAYY,EAA/C,EAA+CA,QACxCd,EAAaU,KAAKK,MAAlBf,UACDgB,EAAUL,EAAaM,KACvBC,EAAW,kBAAH,OAAqBF,EAArB,mBAAuCF,EAAvC,kBACRK,GAAQtB,OAAE,oBAEhB,OACE,QAAC,EAAAuB,SAAD,YACE,QAACR,EAAD,CAAQS,aAAW,EAAnB,SAAqBF,KACrB,QAACN,EAAD,YACE,QAACS,EAAD,WACGzB,OACC,mHAGJ,QAAC0B,EAAD,CAAYC,OAAO,SAAnB,SACGhC,EAAQiC,KAAI,SAACC,EAAQC,GAAT,OACX,QAAC,IAAD,UAAuBD,GAARC,SAGnB,QAACL,EAAD,WACG7B,QAAI,kEAAmE,CACtEE,MACE,QAAC,IAAD,CAAcC,KAAK,uEAIzB,QAAC,IAAD,CACEgC,YAAaT,EACbU,YAAaX,EACbY,UAAU,OACVC,YAAa,CAAC/B,eAAWC,EAAW+B,gBAAiB,QACrDC,gBAAiBvB,KAAKwB,cACtBC,cAAezB,KAAK0B,YACpBC,SAAUnC,EACVoC,YAAY,eARd,WAUE,QAAC,IAAD,CACEC,KAAK,YACLC,OAAO3C,OAAE,sCACT4C,MAAM5C,OAAE,kEACR6C,aAAa7C,OAAE,wBACf8C,SAAUjC,KAAKkC,sBACfC,IAAK,KAGP,QAAC,IAAD,CACEC,cAAY,EACZN,OAAO3C,OAAE,oBACT4C,MAAM5C,OAAE,wDACR0C,KAAK,kBACLQ,QAASjD,EACTkD,cAAwB/C,IAAdD,iB,GAvEaiD,aAA/BlD,E,qCAgFN,YAEA,IAAMuB,GAAe,OAAO,IAAP,sBAAH,cACH,SAAA4B,GAAC,OAAIA,EAAEC,MAAMC,gBADV,KAIZ7B,GAAa,OAAO8B,IAAP,sBAAH,aACFC,OAAM,GADJ,mBAEGA,OAAM,GAFT,eAGD,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,iBAHZ,M,iyCCpID,SAASC,EAAYrD,GAClC,OAAO,QAAC,IAAD,OAAgBA,GAAhB,IAAuBsD,KAAK,YADbD,E,yiECMlBE,E,4nBACO,SACTC,EACAhB,EACAiB,EACAC,GAEAlB,EAASgB,EAAIE,GACbD,EAAOD,EAAIE,M,uCAGb,WAAS,WACP,OACE,QAAC,IAAD,OACMnD,KAAKP,OADX,IAEE2D,MAAO,gBAAEnB,EAAF,EAAEA,SAAUiB,EAAZ,EAAYA,OAAQG,EAApB,EAAoBA,MAAOf,EAA3B,EAA2BA,SAAUF,EAArC,EAAqCA,aAAiB3C,GAAtD,mBACL,QAAC,IAAD,CACE4C,QAAS5C,EAAM4C,QACfC,SAAUA,EACVF,aAAcA,EACdiB,MAAiB,KAAVA,EAAe,KAAOA,EAC7BvB,MAAOrC,EAAMqC,MACbG,SAAU,SAACgB,EAAIE,GAAL,OAAW,EAAKlB,SAASgB,EAAIhB,EAAUiB,EAAQC,c,GAtB5CG,aAAnBN,E,yBA8BN","file":"chunks/app_components_modals_reprocessEventModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {ModalRenderProps} from 'app/actionCreators/modal';\nimport ExternalLink from 'app/components/links/externalLink';\nimport List from 'app/components/list';\nimport ListItem from 'app/components/list/listItem';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Group, Organization} from 'app/types';\nimport Form from 'app/views/settings/components/forms/form';\nimport NumberField from 'app/views/settings/components/forms/numberField';\nimport RadioField from 'app/views/settings/components/forms/radioField';\n\nconst impacts = [\n  tct(\n    \"[strong:Quota applies.] Every event you choose to reprocess counts against your plan's quota. Rate limits and spike protection do not apply.\",\n    {strong: <strong />}\n  ),\n  tct(\n    '[strong:Attachment storage required.] If your events come from minidumps or unreal crash reports, you must have [link:attachment storage] enabled.',\n    {\n      strong: <strong />,\n      link: (\n        <ExternalLink href=\"https://docs.sentry.io/platforms/native/enriching-events/attachments/#crash-reports-and-privacy\" />\n      ),\n    }\n  ),\n  t(\n    'Please wait one hour after upload before attempting to reprocess missing debug files.'\n  ),\n];\n\nconst remainingEventsChoices: [string, string][] = [\n  ['keep', t('Keep')],\n  ['delete', t('Delete')],\n];\n\nexport type ReprocessEventModalOptions = {\n  groupId: Group['id'];\n  organization: Organization;\n};\n\ntype Props = ModalRenderProps & ReprocessEventModalOptions;\n\ntype State = {\n  maxEvents?: number;\n};\n\nclass ReprocessingEventModal extends Component<Props, State> {\n  state: State = {maxEvents: undefined};\n\n  handleSuccess = () => {\n    const {closeModal} = this.props;\n\n    closeModal();\n    window.location.reload();\n  };\n\n  handleError() {\n    addErrorMessage(t('Failed to reprocess. Please check your input.'));\n  }\n\n  handleMaxEventsChange = (maxEvents: string) => {\n    this.setState({maxEvents: Number(maxEvents) || undefined});\n  };\n\n  render() {\n    const {organization, Header, Body, closeModal, groupId} = this.props;\n    const {maxEvents} = this.state;\n    const orgSlug = organization.slug;\n    const endpoint = `/organizations/${orgSlug}/issues/${groupId}/reprocessing/`;\n    const title = t('Reprocess Events');\n\n    return (\n      <Fragment>\n        <Header closeButton>{title}</Header>\n        <Body>\n          <Introduction>\n            {t(\n              'Reprocessing applies new debug files and grouping enhancements to this Issue. Please consider these impacts:'\n            )}\n          </Introduction>\n          <StyledList symbol=\"bullet\">\n            {impacts.map((impact, index) => (\n              <ListItem key={index}>{impact}</ListItem>\n            ))}\n          </StyledList>\n          <Introduction>\n            {tct('For more information, please refer to [link:the documentation.]', {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/reprocessing/\" />\n              ),\n            })}\n          </Introduction>\n          <Form\n            submitLabel={title}\n            apiEndpoint={endpoint}\n            apiMethod=\"POST\"\n            initialData={{maxEvents: undefined, remainingEvents: 'keep'}}\n            onSubmitSuccess={this.handleSuccess}\n            onSubmitError={this.handleError}\n            onCancel={closeModal}\n            footerClass=\"modal-footer\"\n          >\n            <NumberField\n              name=\"maxEvents\"\n              label={t('Number of events to be reprocessed')}\n              help={t('If you set a limit, we will reprocess your most recent events.')}\n              placeholder={t('Reprocess all events')}\n              onChange={this.handleMaxEventsChange}\n              min={1}\n            />\n\n            <RadioField\n              orientInline\n              label={t('Remaining events')}\n              help={t('What to do with the events that are not reprocessed.')}\n              name=\"remainingEvents\"\n              choices={remainingEventsChoices}\n              disabled={maxEvents === undefined}\n            />\n          </Form>\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default ReprocessingEventModal;\n\nconst Introduction = styled('p')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst StyledList = styled(List)`\n  grid-gap: ${space(1)};\n  margin-bottom: ${space(4)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n","import InputField from './inputField';\n\ntype Props = InputField['props'];\n\nexport default function NumberField(props: Omit<Props, 'type'>) {\n  return <InputField {...props} type=\"number\" />;\n}\n","import * as React from 'react';\n\nimport RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';\nimport InputField, {onEvent} from 'app/views/settings/components/forms/inputField';\n\ntype RadioGroupProps = React.ComponentProps<typeof RadioGroup>;\n\ntype Props = Omit<InputField['props'], 'type'> &\n  Pick<RadioGroupProps, 'choices' | 'orientInline'>;\n\nclass RadioField extends React.Component<Props> {\n  onChange = (\n    id: string,\n    onChange: onEvent,\n    onBlur: onEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    onChange(id, e);\n    onBlur(id, e);\n  };\n\n  render() {\n    return (\n      <InputField\n        {...this.props}\n        field={({onChange, onBlur, value, disabled, orientInline, ...props}) => (\n          <RadioGroup\n            choices={props.choices}\n            disabled={disabled}\n            orientInline={orientInline}\n            value={value === '' ? null : value}\n            label={props.label}\n            onChange={(id, e) => this.onChange(id, onChange, onBlur, e)}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default RadioField;\n"],"sourceRoot":""}