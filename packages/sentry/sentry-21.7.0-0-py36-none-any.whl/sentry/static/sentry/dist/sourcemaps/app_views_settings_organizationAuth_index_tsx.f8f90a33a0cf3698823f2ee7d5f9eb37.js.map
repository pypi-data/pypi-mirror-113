{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/organizationAuth/providerItem.tsx","webpack:///./app/views/settings/organizationAuth/organizationAuthList.tsx","webpack:///./app/views/settings/organizationAuth/index.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","PermissionAlert","access","props","hasAccess","type","icon","size","t","ProviderItem","provider","active","onConfigure","handleConfigure","e","key","renderDisabledLock","p","LockedFeature","features","defaultRenderInstallButton","hasFeature","name","value","disabled","onClick","featureKey","requiredFeature","hookName","descopeFeatureName","featureProps","filter","f","renderDisabled","children","providerName","renderInstallButton","center","ProviderInfo","ProviderLogo","className","replace","toLowerCase","ProviderName","ProviderDescription","FeatureBadge","ActiveIndicator","space","theme","green300","white","defaultProps","DisabledHovercard","Hovercard","containerClassName","body","hideHelpToggle","message","featureName","providerPopularity","google","github","okta","saml2","onelogin","rippling","auth0","OrganizationAuthList","organization","providerList","activeProvider","list","sort","a","b","aEnabled","includes","warn2FADisable","require2FA","some","tct","link","href","action","slug","method","getCsrfToken","map","length","withOrganization","OrganizationAuth","_provider","setState","sendRemindersBusy","api","request","params","orgId","data","success","addSuccessMessage","error","addErrorMessage","complete","busy","init","auth_url","window","location","_nextProps","nextState","assign","routeTitleGen","state","renderLoading","find"],"mappings":"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","file":"chunks/app_views_settings_organizationAuth_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['org:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner or manager role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Feature from 'app/components/acl/feature';\nimport FeatureDisabled from 'app/components/acl/featureDisabled';\nimport Button from 'app/components/button';\nimport Hovercard from 'app/components/hovercard';\nimport {PanelItem} from 'app/components/panels';\nimport Tag from 'app/components/tag';\nimport {IconLock} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {AuthProvider} from 'app/types';\nimport {FeatureDisabledHooks} from 'app/types/hooks';\nimport {descopeFeatureName} from 'app/utils';\n\ntype RenderInstallButtonProps = {\n  /**\n   * We pass the provider so that it may be passed into any hook provided\n   * callbacks.\n   */\n  provider: AuthProvider;\n  hasFeature: boolean;\n};\n\ntype LockedFeatureProps = {\n  provider: AuthProvider;\n  features: string[];\n  className?: string;\n};\n\ntype FeatureRenderProps = {\n  children?: (p: FeatureRenderProps) => React.ReactNode;\n  hasFeature: boolean;\n  features: string[];\n  renderDisabled: (p: LockedFeatureProps) => React.ReactNode;\n  renderInstallButton: (p: RenderInstallButtonProps) => React.ReactNode;\n};\n\ntype Props = {\n  provider: AuthProvider;\n  active: boolean;\n  onConfigure?: (providerKey: string, e: React.MouseEvent) => void;\n};\n\nconst ProviderItem = ({provider, active, onConfigure}: Props) => {\n  const handleConfigure = (e: React.MouseEvent) => {\n    onConfigure?.(provider.key, e);\n  };\n\n  const renderDisabledLock = (p: LockedFeatureProps) => (\n    <LockedFeature provider={p.provider} features={p.features} />\n  );\n\n  const defaultRenderInstallButton = ({hasFeature}: RenderInstallButtonProps) => (\n    <Access access={['org:write']}>\n      {({hasAccess}) => (\n        <Button\n          type=\"submit\"\n          name=\"provider\"\n          size=\"small\"\n          value={provider.key}\n          disabled={!hasFeature || !hasAccess}\n          onClick={handleConfigure}\n        >\n          {t('Configure')}\n        </Button>\n      )}\n    </Access>\n  );\n\n  // TODO(epurkhiser): We should probably use a more explicit hook name,\n  // instead of just the feature names (sso-basic, sso-saml2, etc).\n  const featureKey = provider.requiredFeature;\n  const hookName = featureKey\n    ? (`feature-disabled:${descopeFeatureName(featureKey)}` as keyof FeatureDisabledHooks)\n    : null;\n\n  const featureProps = hookName ? {hookName} : {};\n\n  const getProviderDescription = providerName => {\n    if (providerName === 'SAML2') {\n      return t(\n        'your preferred SAML2 compliant provider like Ping Identity, Google SAML, Keycloak, or VMware Identity Manager'\n      );\n    }\n\n    if (providerName === 'Google') {\n      return t('Google (OAuth)');\n    }\n\n    return providerName;\n  };\n\n  return (\n    <Feature\n      {...featureProps}\n      features={[featureKey].filter(f => f)}\n      renderDisabled={({children, ...props}) =>\n        typeof children === 'function' &&\n        // TODO(ts): the Feature component isn't correctly templatized to allow\n        // for custom props in the renderDisabled function\n        children({...props, renderDisabled: renderDisabledLock as any})\n      }\n    >\n      {({\n        hasFeature,\n        features,\n        renderDisabled,\n        renderInstallButton,\n      }: FeatureRenderProps) => (\n        <PanelItem center>\n          <ProviderInfo>\n            <ProviderLogo\n              className={`provider-logo ${provider.name\n                .replace(/\\s/g, '-')\n                .toLowerCase()}`}\n            />\n            <div>\n              <ProviderName>{provider.name}</ProviderName>\n              <ProviderDescription>\n                {t(\n                  'Enable your organization to sign in with %s.',\n                  getProviderDescription(provider.name)\n                )}\n              </ProviderDescription>\n            </div>\n          </ProviderInfo>\n\n          <FeatureBadge>\n            {!hasFeature && renderDisabled({provider, features})}\n          </FeatureBadge>\n\n          <div>\n            {active ? (\n              <ActiveIndicator />\n            ) : (\n              (renderInstallButton ?? defaultRenderInstallButton)({provider, hasFeature})\n            )}\n          </div>\n        </PanelItem>\n      )}\n    </Feature>\n  );\n};\n\nexport default ProviderItem;\n\nconst ProviderInfo = styled('div')`\n  flex: 1;\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: ${space(2)};\n`;\n\nconst ProviderLogo = styled('div')`\n  height: 36px;\n  width: 36px;\n  border-radius: 3px;\n  margin-right: 0;\n  top: auto;\n`;\n\nconst ProviderName = styled('div')`\n  font-weight: bold;\n`;\n\nconst ProviderDescription = styled('div')`\n  margin-top: ${space(0.75)};\n  font-size: 0.8em;\n`;\n\nconst FeatureBadge = styled('div')`\n  flex: 1;\n`;\n\nconst ActiveIndicator = styled('div')`\n  background: ${p => p.theme.green300};\n  color: ${p => p.theme.white};\n  padding: ${space(1)} ${space(1.5)};\n  border-radius: 2px;\n  font-size: 0.8em;\n`;\n\nActiveIndicator.defaultProps = {\n  children: t('Active'),\n};\n\nconst DisabledHovercard = styled(Hovercard)`\n  width: 350px;\n`;\n\nconst LockedFeature = ({provider, features, className}: LockedFeatureProps) => (\n  <DisabledHovercard\n    containerClassName={className}\n    body={\n      <FeatureDisabled\n        features={features}\n        hideHelpToggle\n        message={t('%s SSO is disabled.', provider.name)}\n        featureName={t('SSO Auth')}\n      />\n    }\n  >\n    <Tag icon={<IconLock />}>{t('disabled')}</Tag>\n  </DisabledHovercard>\n);\n","import ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport {AuthProvider, Organization} from 'app/types';\nimport {descopeFeatureName} from 'app/utils';\nimport getCsrfToken from 'app/utils/getCsrfToken';\nimport withOrganization from 'app/utils/withOrganization';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/organization/permissionAlert';\n\nimport ProviderItem from './providerItem';\n\nconst providerPopularity = {\n  google: 0,\n  github: 1,\n  okta: 2,\n  'active-directory': 3,\n  saml2: 4,\n  onelogin: 5,\n  rippling: 6,\n  auth0: 7,\n};\n\ntype Props = {\n  organization: Organization;\n  providerList: AuthProvider[];\n  activeProvider?: AuthProvider;\n};\n\nconst OrganizationAuthList = ({organization, providerList, activeProvider}: Props) => {\n  const features = organization.features;\n\n  // Sort provider list twice: first, by popularity,\n  // and then a second time, to sort unavailable providers for the current plan to the end of the list.\n  const sortedByPopularity = (providerList ?? []).sort((a, b) => {\n    if (!(a.key in providerPopularity)) {\n      return -1;\n    }\n    if (!(b.key in providerPopularity)) {\n      return 1;\n    }\n    if (providerPopularity[a.key] === providerPopularity[b.key]) {\n      return 0;\n    }\n    return providerPopularity[a.key] > providerPopularity[b.key] ? 1 : -1;\n  });\n\n  const list = sortedByPopularity.sort((a, b) => {\n    const aEnabled = features.includes(descopeFeatureName(a.requiredFeature));\n    const bEnabled = features.includes(descopeFeatureName(b.requiredFeature));\n    if (aEnabled === bEnabled) {\n      return 0;\n    }\n    return aEnabled ? -1 : 1;\n  });\n\n  const warn2FADisable =\n    organization.require2FA &&\n    list.some(({requiredFeature}) =>\n      features.includes(descopeFeatureName(requiredFeature))\n    );\n\n  return (\n    <div className=\"sso\">\n      <SettingsPageHeader title=\"Authentication\" />\n      <PermissionAlert />\n      <Panel>\n        <PanelHeader>{t('Choose a provider')}</PanelHeader>\n        <PanelBody>\n          {!activeProvider && (\n            <PanelAlert type=\"info\">\n              {tct(\n                'Get started with Single Sign-on for your organization by selecting a provider. Read more in our [link:SSO documentation].',\n                {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/accounts/sso/\" />\n                  ),\n                }\n              )}\n            </PanelAlert>\n          )}\n\n          {warn2FADisable && (\n            <PanelAlert type=\"warning\">\n              {t('Require 2FA will be disabled if you enable SSO.')}\n            </PanelAlert>\n          )}\n\n          <form\n            action={`/organizations/${organization.slug}/auth/configure/`}\n            method=\"POST\"\n          >\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={getCsrfToken()} />\n            <input type=\"hidden\" name=\"init\" value=\"1\" />\n\n            {list.map(provider => (\n              <ProviderItem\n                key={provider.key}\n                provider={provider}\n                active={!!activeProvider && provider.key === activeProvider.key}\n              />\n            ))}\n            {list.length === 0 && (\n              <EmptyMessage>\n                {t('No authentication providers are available.')}\n              </EmptyMessage>\n            )}\n          </form>\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n};\n\nexport default withOrganization(OrganizationAuthList);\n","import {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport {AuthProvider, Organization} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport OrganizationAuthList from './organizationAuthList';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string}, {}> & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  providerList: AuthProvider[] | null;\n  provider: AuthProvider | null;\n};\n\nclass OrganizationAuth extends AsyncView<Props, State> {\n  UNSAFE_componentWillUpdate(_nextProps: Props, nextState: State) {\n    const access = this.props.organization.access;\n\n    if (nextState.provider && access.includes('org:write')) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      window.location.assign(`/organizations/${this.props.params.orgId}/auth/configure/`);\n    }\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      ['providerList', `/organizations/${this.props.params.orgId}/auth-providers/`],\n      ['provider', `/organizations/${this.props.params.orgId}/auth-provider/`],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Auth Settings'), this.props.organization.slug, false);\n  }\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleSendReminders = (_provider: AuthProvider) => {\n    this.setState({sendRemindersBusy: true});\n\n    this.api.request(\n      `/organizations/${this.props.params.orgId}/auth-provider/send-reminders/`,\n      {\n        method: 'POST',\n        data: {},\n        success: () => addSuccessMessage(t('Sent reminders to members')),\n        error: () => addErrorMessage(t('Failed to send reminders')),\n        complete: () => this.setState({sendRemindersBusy: false}),\n      }\n    );\n  };\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleConfigure = (provider: AuthProvider) => {\n    this.setState({busy: true});\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'POST',\n      data: {provider, init: true},\n      success: data => {\n        // Redirect to auth provider URL\n        if (data && data.auth_url) {\n          window.location.href = data.auth_url;\n        }\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleDisableProvider = (provider: AuthProvider) => {\n    this.setState({busy: true});\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'DELETE',\n      data: {provider},\n      success: () => {\n        this.setState({provider: null, busy: false});\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  renderBody() {\n    const {providerList, provider} = this.state;\n\n    if (providerList === null) {\n      return null;\n    }\n\n    if (this.props.organization.access.includes('org:write') && provider) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      return this.renderLoading();\n    }\n\n    const activeProvider = providerList?.find(p => p.key === provider?.key);\n\n    return (\n      <OrganizationAuthList activeProvider={activeProvider} providerList={providerList} />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationAuth);\n"],"sourceRoot":""}