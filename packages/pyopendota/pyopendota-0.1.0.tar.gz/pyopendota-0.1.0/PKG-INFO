Metadata-Version: 1.2
Name: pyopendota
Version: 0.1.0
Summary: A thin wrapper for <OPENDOTA/> API
Home-page: https://github.com/hrishikeshrt/pyopendota
Author: Hrishikesh Terdalkar
Author-email: hrishikeshrt@linuxmail.org
License: MIT license
Description: ===============
        <OPENDOTA/> API
        ===============
        
        
        .. image:: https://img.shields.io/pypi/v/pyopendota.svg
                :target: https://pypi.python.org/pypi/pyopendota
        
        .. image:: https://img.shields.io/travis/hrishikeshrt/pyopendota.svg
                :target: https://travis-ci.com/hrishikeshrt/pyopendota
        
        .. image:: https://readthedocs.org/projects/pyopendota/badge/?version=latest
                :target: https://pyopendota.readthedocs.io/en/latest/?version=latest
                :alt: Documentation Status
        
        
        
        
        A thin wrapper for <OPENDOTA/> API
        
        
        * Free software: MIT license
        * Documentation: https://opendota.readthedocs.io.
        
        
        Features
        --------
        
        * Transparent wrapper for majority of the API calls
        * Ability to authenticate using API key
        * In-built and cusomizable limit to protect against frequent API calls
        * Local file-based storage for frequent requests
        
        
        Usage
        -----
        
        To use <OPENDOTA/> API in a project::
        
            import opendota
        
            client = opendota.OpenDota()
        
            # Get common entities
            client.get_matches('match-id')
            client.get_player('player-id')
            client.get_team('team-id')
        
            # Search Functionality
            players = client.search_player('Dendi')
            teams = client.search_team('Alliance')
            heroes = client.search_hero('Crystal')
            leagues = client.search_league('International')
        
            # Database Schema
            client.get_schema()
            client.get_schema('matches')
        
            # Arbitrary Query
            client.explorer("select * from matches where limit 1")
        
        
        Credits
        -------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        
        =======
        History
        =======
        
        0.1.0 (2021-07-20)
        ------------------
        
        * First release on PyPI.
        
Keywords: opendota
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
