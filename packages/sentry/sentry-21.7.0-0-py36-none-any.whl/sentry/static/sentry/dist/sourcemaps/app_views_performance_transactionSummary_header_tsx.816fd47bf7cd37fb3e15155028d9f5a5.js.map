{"version":3,"sources":["webpack:///./app/views/performance/breadcrumb.tsx","webpack:///./app/views/performance/transactionSummary/keyTransactionButton.tsx","webpack:///./app/views/performance/transactionSummary/teamKeyTransactionButton.tsx","webpack:///./app/views/performance/transactionSummary/transactionThresholdButton.tsx","webpack:///./app/views/performance/transactionSummary/header.tsx","webpack:///./app/views/performance/transactionSummary/transactionTags/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/utils.tsx"],"names":["Breadcrumb","crumbs","this","props","organization","location","transactionName","vitalName","eventSlug","traceSlug","transactionComparison","realUserMonitoring","performanceTarget","pathname","getPerformanceLandingUrl","query","transaction","undefined","push","to","label","t","preserveGlobalSelection","rumTarget","vitalDetailRouteWithQuery","orgSlug","slug","projectID","decodeScalar","project","vitalsRouteWithQuery","summaryTarget","transactionSummaryRouteWithQuery","getCrumbs","Component","KeyTransactionButton","isLoading","keyFetchID","error","isKeyTransaction","eventView","projects","length","url","Symbol","setState","api","requestPromise","method","includeAllArgs","map","id","String","then","data","state","isKey","catch","err","responseJSON","detail","trackAnalyticsEvent","eventName","eventKey","organization_id","action","toggleKeyTransaction","fetchData","prevProps","orgSlugChanged","projectsChanged","icon","color","isSolid","onClick","toggleKeyTransactionHandler","withApi","TitleButton","isOpen","keyedTeams","keyedTeamsCount","button","tn","teamSlugs","join","title","TeamKeyTransactionButton","counts","getKeyedTeams","TeamKeyTransactionButtonWrapper","teams","disabled","projectId","find","proj","defined","isSuperuser","isActiveSuperuser","userTeams","filter","isMember","selectedTeams","selectedProjects","results","withTeams","withProjects","TransactionThresholdButton","transactionThreshold","transactionThresholdMetric","loadingThreshold","getProject","transactionThresholdUrl","threshold","metric","projectThresholdUrl","errorMessage","addErrorMessage","fetchTransactionThreshold","onChangeThreshold","openModal","modalProps","onApply","modalCss","backdrop","Tab","TransactionHeader","incompatibleAlertNoticeFn","errors","trackAlertClick","handleIncompatibleQuery","status","window","href","onIncompatibleQuery","onSuccess","handleCreateAlertSuccess","referrer","features","hasFeature","target","position","currentTab","hasWebVitals","vitalsTarget","tagsTarget","tagsRouteWithQuery","eventsTarget","eventsRouteWithQuery","RealUserMonitoring","gap","renderCreateAlertButton","renderKeyTransactionButton","renderSettingsButton","StyledNavTabs","isActive","TransactionSummary","trackVitalsTabClick","Tags","trackTagsTabClick","type","noTooltip","Events","trackEventsTabClick","React","NavTabs","decodeSelectedTagKey","tagKey","trackTagPageInteraction","parseInt","environment","statsPeriod","start","end","parseHistogramBucketInfo","row","field","Object","keys","f","includes","parts","split","histogramField","bucketSize","offset","multiplier","findNearestBucketIndex","chartData","xAxis","width","getBucketWidth","bin","Math","floor","getRefRect","i","data1","j","data2","count","point1","x","y","min","point2","max","asPixelRect","chartRef","dataRect","convertToPixel","xAxisIndex","yAxisIndex","isNaN","mapPoint","point","srcRect","destRect","xPercentage","yPercentage"],"mappings":"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","file":"chunks/app_views_performance_transactionSummary_header_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {Component} from 'react';\nimport {Location, LocationDescriptor} from 'history';\n\nimport Breadcrumbs, {Crumb} from 'app/components/breadcrumbs';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {decodeScalar} from 'app/utils/queryString';\n\nimport {vitalsRouteWithQuery} from './transactionSummary/transactionVitals/utils';\nimport {transactionSummaryRouteWithQuery} from './transactionSummary/utils';\nimport {vitalDetailRouteWithQuery} from './vitalDetail/utils';\nimport {getPerformanceLandingUrl} from './utils';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  transactionName?: string;\n  vitalName?: string;\n  eventSlug?: string;\n  traceSlug?: string;\n  transactionComparison?: boolean;\n  realUserMonitoring?: boolean;\n};\n\nclass Breadcrumb extends Component<Props> {\n  getCrumbs() {\n    const crumbs: Crumb[] = [];\n    const {\n      organization,\n      location,\n      transactionName,\n      vitalName,\n      eventSlug,\n      traceSlug,\n      transactionComparison,\n      realUserMonitoring,\n    } = this.props;\n\n    const performanceTarget: LocationDescriptor = {\n      pathname: getPerformanceLandingUrl(organization),\n      query: {\n        ...location.query,\n        // clear out the transaction name\n        transaction: undefined,\n      },\n    };\n\n    crumbs.push({\n      to: performanceTarget,\n      label: t('Performance'),\n      preserveGlobalSelection: true,\n    });\n\n    if (vitalName) {\n      const rumTarget = vitalDetailRouteWithQuery({\n        orgSlug: organization.slug,\n        vitalName: 'fcp',\n        projectID: decodeScalar(location.query.project),\n        query: location.query,\n      });\n      crumbs.push({\n        to: rumTarget,\n        label: t('Vital Detail'),\n        preserveGlobalSelection: true,\n      });\n    } else if (transactionName) {\n      if (realUserMonitoring) {\n        const rumTarget = vitalsRouteWithQuery({\n          orgSlug: organization.slug,\n          transaction: transactionName,\n          projectID: decodeScalar(location.query.project),\n          query: location.query,\n        });\n\n        crumbs.push({\n          to: rumTarget,\n          label: t('Web Vitals'),\n          preserveGlobalSelection: true,\n        });\n      } else {\n        const summaryTarget = transactionSummaryRouteWithQuery({\n          orgSlug: organization.slug,\n          transaction: transactionName,\n          projectID: decodeScalar(location.query.project),\n          query: location.query,\n        });\n\n        crumbs.push({\n          to: summaryTarget,\n          label: t('Transaction Summary'),\n          preserveGlobalSelection: true,\n        });\n      }\n    }\n\n    if (transactionName && eventSlug) {\n      crumbs.push({\n        to: '',\n        label: t('Event Details'),\n      });\n    } else if (transactionComparison) {\n      crumbs.push({\n        to: '',\n        label: t('Compare to Baseline'),\n      });\n    } else if (traceSlug) {\n      crumbs.push({\n        to: '',\n        label: t('Trace View'),\n      });\n    }\n\n    return crumbs;\n  }\n\n  render() {\n    return <Breadcrumbs crumbs={this.getCrumbs()} />;\n  }\n}\n\nexport default Breadcrumb;\n","import {Component} from 'react';\n\nimport {toggleKeyTransaction} from 'app/actionCreators/performance';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {IconStar} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport EventView from 'app/utils/discover/eventView';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  api: Client;\n  eventView: EventView;\n  organization: Organization;\n  transactionName: string;\n};\n\ntype State = {\n  isLoading: boolean;\n  keyFetchID: symbol | undefined;\n  error: null | string;\n\n  isKeyTransaction: boolean;\n};\n\nclass KeyTransactionButton extends Component<Props, State> {\n  state: State = {\n    isLoading: true,\n    keyFetchID: undefined,\n    error: null,\n\n    isKeyTransaction: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const orgSlugChanged = prevProps.organization.slug !== this.props.organization.slug;\n    const projectsChanged =\n      prevProps.eventView.project.length === 1 &&\n      this.props.eventView.project.length === 1 &&\n      prevProps.eventView.project[0] !== this.props.eventView.project[0];\n\n    if (orgSlugChanged || projectsChanged) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    const {organization, eventView, transactionName} = this.props;\n\n    const projects = eventView.project as number[];\n\n    if (projects.length !== 1) {\n      return;\n    }\n\n    const url = `/organizations/${organization.slug}/is-key-transactions/`;\n    const keyFetchID = Symbol('keyFetchID');\n\n    this.setState({isLoading: true, keyFetchID});\n\n    this.props.api\n      .requestPromise(url, {\n        method: 'GET',\n        includeAllArgs: true,\n        query: {\n          project: projects.map(id => String(id)),\n          transaction: transactionName,\n        },\n      })\n      .then(([data, _, _jqXHR]) => {\n        if (this.state.keyFetchID !== keyFetchID) {\n          // invariant: a different request was initiated after this request\n          return;\n        }\n\n        this.setState({\n          isLoading: false,\n          keyFetchID: undefined,\n          error: null,\n          isKeyTransaction: !!data?.isKey,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          isLoading: false,\n          keyFetchID: undefined,\n          error: err.responseJSON?.detail ?? null,\n          isKeyTransaction: false,\n        });\n      });\n  };\n\n  toggleKeyTransactionHandler = () => {\n    const {eventView, api, organization, transactionName} = this.props;\n    const {isKeyTransaction} = this.state;\n    const projects = eventView.project.map(String);\n\n    trackAnalyticsEvent({\n      eventName: 'Performance Views: Key Transaction toggle',\n      eventKey: 'performance_views.key_transaction.toggle',\n      organization_id: organization.id,\n      action: isKeyTransaction ? 'remove' : 'add',\n    });\n\n    toggleKeyTransaction(\n      api,\n      isKeyTransaction,\n      organization.slug,\n      projects,\n      transactionName\n    ).then(() => {\n      this.setState({isKeyTransaction: !isKeyTransaction});\n    });\n  };\n\n  render() {\n    const {isKeyTransaction, isLoading} = this.state;\n\n    if (this.props.eventView.project.length !== 1 || isLoading) {\n      return null;\n    }\n\n    return (\n      <Button\n        icon={isKeyTransaction ? <IconStar color=\"yellow300\" isSolid /> : <IconStar />}\n        onClick={this.toggleKeyTransactionHandler}\n      >\n        {t('Key Transaction')}\n      </Button>\n    );\n  }\n}\n\nexport default withApi(KeyTransactionButton);\n","import {Component} from 'react';\n\nimport Button from 'app/components/button';\nimport TeamKeyTransactionComponent, {\n  TitleProps,\n} from 'app/components/performance/teamKeyTransaction';\nimport * as TeamKeyTransactionManager from 'app/components/performance/teamKeyTransactionsManager';\nimport Tooltip from 'app/components/tooltip';\nimport {IconStar} from 'app/icons';\nimport {t, tn} from 'app/locale';\nimport {Organization, Project, Team} from 'app/types';\nimport {defined} from 'app/utils';\nimport EventView from 'app/utils/discover/eventView';\nimport {isActiveSuperuser} from 'app/utils/isActiveSuperuser';\nimport withProjects from 'app/utils/withProjects';\nimport withTeams from 'app/utils/withTeams';\n\n/**\n * This can't be a function component because `TeamKeyTransaction` uses\n * `DropdownControl` which in turn uses passes a ref to this component.\n */\nclass TitleButton extends Component<TitleProps> {\n  render() {\n    const {isOpen, keyedTeams, ...props} = this.props;\n    const keyedTeamsCount = keyedTeams?.length ?? 0;\n    const button = (\n      <Button\n        {...props}\n        icon={keyedTeamsCount ? <IconStar color=\"yellow300\" isSolid /> : <IconStar />}\n      >\n        {keyedTeamsCount\n          ? tn('Starred for Team', 'Starred for Teams', keyedTeamsCount)\n          : t('Star for Team')}\n      </Button>\n    );\n\n    if (!isOpen && keyedTeams?.length) {\n      const teamSlugs = keyedTeams.map(({slug}) => slug).join(', ');\n      return <Tooltip title={teamSlugs}>{button}</Tooltip>;\n    } else {\n      return button;\n    }\n  }\n}\n\ntype BaseProps = {\n  organization: Organization;\n  transactionName: string;\n  teams: Team[];\n};\n\ntype Props = BaseProps &\n  TeamKeyTransactionManager.TeamKeyTransactionManagerChildrenProps & {\n    project: Project;\n  };\n\nfunction TeamKeyTransactionButton({\n  counts,\n  getKeyedTeams,\n  project,\n  transactionName,\n  ...props\n}: Props) {\n  const keyedTeams = getKeyedTeams(project.id, transactionName);\n  return (\n    <TeamKeyTransactionComponent\n      counts={counts}\n      keyedTeams={keyedTeams}\n      title={TitleButton}\n      project={project}\n      transactionName={transactionName}\n      {...props}\n    />\n  );\n}\n\ntype WrapperProps = BaseProps & {\n  eventView: EventView;\n  projects: Project[];\n};\n\nfunction TeamKeyTransactionButtonWrapper({\n  eventView,\n  organization,\n  teams,\n  projects,\n  ...props\n}: WrapperProps) {\n  if (eventView.project.length !== 1) {\n    return <TitleButton isOpen={false} disabled keyedTeams={null} />;\n  }\n\n  const projectId = String(eventView.project[0]);\n  const project = projects.find(proj => proj.id === projectId);\n  if (!defined(project)) {\n    return <TitleButton isOpen={false} disabled keyedTeams={null} />;\n  }\n\n  const isSuperuser = isActiveSuperuser();\n  const userTeams = teams.filter(({isMember}) => isMember || isSuperuser);\n\n  return (\n    <TeamKeyTransactionManager.Provider\n      organization={organization}\n      teams={userTeams}\n      selectedTeams={['myteams']}\n      selectedProjects={[String(projectId)]}\n    >\n      <TeamKeyTransactionManager.Consumer>\n        {results => (\n          <TeamKeyTransactionButton\n            organization={organization}\n            project={project}\n            {...props}\n            {...results}\n          />\n        )}\n      </TeamKeyTransactionManager.Consumer>\n    </TeamKeyTransactionManager.Provider>\n  );\n}\n\nexport default withTeams(withProjects(TeamKeyTransactionButtonWrapper));\n","import {Component} from 'react';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {openModal} from 'app/actionCreators/modal';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {IconSettings} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport {defined} from 'app/utils';\nimport EventView from 'app/utils/discover/eventView';\nimport withApi from 'app/utils/withApi';\nimport withProjects from 'app/utils/withProjects';\n\nimport TransactionThresholdModal, {\n  modalCss,\n  TransactionThresholdMetric,\n} from './transactionThresholdModal';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  transactionName: string;\n  projects: Project[];\n  eventView: EventView;\n  onChangeThreshold?: (threshold: number, metric: TransactionThresholdMetric) => void;\n};\n\ntype State = {\n  transactionThreshold: number | undefined;\n  transactionThresholdMetric: TransactionThresholdMetric | undefined;\n  loadingThreshold: boolean;\n};\n\nclass TransactionThresholdButton extends Component<Props, State> {\n  state: State = {\n    transactionThreshold: undefined,\n    transactionThresholdMetric: undefined,\n    loadingThreshold: false,\n  };\n\n  componentDidMount() {\n    this.fetchTransactionThreshold();\n  }\n\n  getProject() {\n    const {projects, eventView} = this.props;\n    if (!defined(eventView)) {\n      return undefined;\n    }\n\n    const projectId = String(eventView.project[0]);\n    const project = projects.find(proj => proj.id === projectId);\n\n    return project;\n  }\n\n  fetchTransactionThreshold = () => {\n    const {api, organization, transactionName} = this.props;\n\n    const project = this.getProject();\n    if (!defined(project)) {\n      return;\n    }\n    const transactionThresholdUrl = `/organizations/${organization.slug}/project-transaction-threshold-override/`;\n\n    this.setState({loadingThreshold: true});\n\n    api\n      .requestPromise(transactionThresholdUrl, {\n        method: 'GET',\n        includeAllArgs: true,\n        query: {\n          project: project.id,\n          transaction: transactionName,\n        },\n      })\n      .then(([data]) => {\n        this.setState({\n          loadingThreshold: false,\n          transactionThreshold: data.threshold,\n          transactionThresholdMetric: data.metric,\n        });\n      })\n      .catch(() => {\n        const projectThresholdUrl = `/projects/${organization.slug}/${project.slug}/transaction-threshold/configure/`;\n        this.props.api\n          .requestPromise(projectThresholdUrl, {\n            method: 'GET',\n            includeAllArgs: true,\n            query: {\n              project: project.id,\n            },\n          })\n          .then(([data]) => {\n            this.setState({\n              loadingThreshold: false,\n              transactionThreshold: data.threshold,\n              transactionThresholdMetric: data.metric,\n            });\n          })\n          .catch(err => {\n            this.setState({loadingThreshold: false});\n            const errorMessage = err.responseJSON?.threshold ?? null;\n            addErrorMessage(errorMessage);\n          });\n      });\n  };\n\n  onChangeThreshold(threshold: number, metric: TransactionThresholdMetric) {\n    const {onChangeThreshold} = this.props;\n    this.setState({\n      transactionThreshold: threshold,\n      transactionThresholdMetric: metric,\n    });\n\n    if (defined(onChangeThreshold)) {\n      onChangeThreshold(threshold, metric);\n    }\n  }\n\n  openModal() {\n    const {organization, transactionName, eventView} = this.props;\n\n    const {transactionThreshold, transactionThresholdMetric} = this.state;\n\n    openModal(\n      modalProps => (\n        <TransactionThresholdModal\n          {...modalProps}\n          organization={organization}\n          transactionName={transactionName}\n          eventView={eventView}\n          transactionThreshold={transactionThreshold}\n          transactionThresholdMetric={transactionThresholdMetric}\n          onApply={(threshold, metric) => this.onChangeThreshold(threshold, metric)}\n        />\n      ),\n      {modalCss, backdrop: 'static'}\n    );\n  }\n\n  render() {\n    const {loadingThreshold} = this.state;\n    return (\n      <Button\n        onClick={() => this.openModal()}\n        icon={<IconSettings />}\n        disabled={loadingThreshold}\n        aria-label={t('Settings')}\n        data-test-id=\"set-transaction-threshold\"\n      />\n    );\n  }\n}\n\nexport default withApi(withProjects(TransactionThresholdButton));\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Feature from 'app/components/acl/feature';\nimport {GuideAnchor} from 'app/components/assistant/guideAnchor';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport {CreateAlertFromViewButton} from 'app/components/createAlertButton';\nimport FeatureBadge from 'app/components/featureBadge';\nimport * as Layout from 'app/components/layouts/thirds';\nimport ListLink from 'app/components/links/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport {IconSettings} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport EventView from 'app/utils/discover/eventView';\nimport {decodeScalar} from 'app/utils/queryString';\nimport Breadcrumb from 'app/views/performance/breadcrumb';\n\nimport {eventsRouteWithQuery} from './transactionEvents/utils';\nimport {tagsRouteWithQuery} from './transactionTags/utils';\nimport {vitalsRouteWithQuery} from './transactionVitals/utils';\nimport KeyTransactionButton from './keyTransactionButton';\nimport TeamKeyTransactionButton from './teamKeyTransactionButton';\nimport TransactionThresholdButton from './transactionThresholdButton';\nimport {TransactionThresholdMetric} from './transactionThresholdModal';\nimport {transactionSummaryRouteWithQuery} from './utils';\n\nexport enum Tab {\n  TransactionSummary,\n  RealUserMonitoring,\n  Tags,\n  Events,\n}\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  transactionName: string;\n  currentTab: Tab;\n  hasWebVitals: boolean;\n  onChangeThreshold?: (threshold: number, metric: TransactionThresholdMetric) => void;\n  handleIncompatibleQuery: React.ComponentProps<\n    typeof CreateAlertFromViewButton\n  >['onIncompatibleQuery'];\n};\n\nclass TransactionHeader extends React.Component<Props> {\n  trackAlertClick(errors?: Record<string, boolean>) {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.summary.create_alert_clicked',\n      eventName: 'Performance Views: Create alert clicked',\n      organization_id: organization.id,\n      status: errors ? 'error' : 'success',\n      errors,\n      url: window.location.href,\n    });\n  }\n\n  trackVitalsTabClick = () => {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.vitals.vitals_tab_clicked',\n      eventName: 'Performance Views: Vitals tab clicked',\n      organization_id: organization.id,\n    });\n  };\n\n  trackTagsTabClick = () => {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.tags.tags_tab_clicked',\n      eventName: 'Performance Views: Tags tab clicked',\n      organization_id: organization.id,\n    });\n  };\n\n  trackEventsTabClick = () => {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.events.events_tab_clicked',\n      eventName: 'Performance Views: Events tab clicked',\n      organization_id: organization.id,\n    });\n  };\n\n  handleIncompatibleQuery: React.ComponentProps<\n    typeof CreateAlertFromViewButton\n  >['onIncompatibleQuery'] = (incompatibleAlertNoticeFn, errors) => {\n    this.trackAlertClick(errors);\n    this.props.handleIncompatibleQuery?.(incompatibleAlertNoticeFn, errors);\n  };\n\n  handleCreateAlertSuccess = () => {\n    this.trackAlertClick();\n  };\n\n  renderCreateAlertButton() {\n    const {eventView, organization, projects} = this.props;\n\n    return (\n      <CreateAlertFromViewButton\n        eventView={eventView}\n        organization={organization}\n        projects={projects}\n        onIncompatibleQuery={this.handleIncompatibleQuery}\n        onSuccess={this.handleCreateAlertSuccess}\n        referrer=\"performance\"\n      />\n    );\n  }\n\n  renderKeyTransactionButton() {\n    const {eventView, organization, transactionName} = this.props;\n\n    return (\n      <Feature organization={organization} features={['team-key-transactions']}>\n        {({hasFeature}) =>\n          hasFeature ? (\n            <TeamKeyTransactionButton\n              transactionName={transactionName}\n              eventView={eventView}\n              organization={organization}\n            />\n          ) : (\n            <KeyTransactionButton\n              transactionName={transactionName}\n              eventView={eventView}\n              organization={organization}\n            />\n          )\n        }\n      </Feature>\n    );\n  }\n\n  renderSettingsButton() {\n    const {organization, transactionName, eventView, onChangeThreshold} = this.props;\n\n    return (\n      <Feature\n        organization={organization}\n        features={['project-transaction-threshold-override']}\n      >\n        {({hasFeature}) =>\n          hasFeature ? (\n            <GuideAnchor\n              target=\"project_transaction_threshold_override\"\n              position=\"bottom\"\n            >\n              <TransactionThresholdButton\n                organization={organization}\n                transactionName={transactionName}\n                eventView={eventView}\n                onChangeThreshold={onChangeThreshold}\n              />\n            </GuideAnchor>\n          ) : (\n            <Button\n              href={`/settings/${organization.slug}/performance/`}\n              icon={<IconSettings />}\n              aria-label={t('Settings')}\n            />\n          )\n        }\n      </Feature>\n    );\n  }\n\n  render() {\n    const {organization, location, transactionName, currentTab, hasWebVitals} =\n      this.props;\n\n    const summaryTarget = transactionSummaryRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: transactionName,\n      projectID: decodeScalar(location.query.project),\n      query: location.query,\n    });\n\n    const vitalsTarget = vitalsRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: transactionName,\n      projectID: decodeScalar(location.query.project),\n      query: location.query,\n    });\n\n    const tagsTarget = tagsRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: transactionName,\n      projectID: decodeScalar(location.query.project),\n      query: location.query,\n    });\n\n    const eventsTarget = eventsRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: transactionName,\n      projectID: decodeScalar(location.query.project),\n      query: location.query,\n    });\n\n    return (\n      <Layout.Header>\n        <Layout.HeaderContent>\n          <Breadcrumb\n            organization={organization}\n            location={location}\n            transactionName={transactionName}\n            realUserMonitoring={currentTab === Tab.RealUserMonitoring}\n          />\n          <Layout.Title>{transactionName}</Layout.Title>\n        </Layout.HeaderContent>\n        <Layout.HeaderActions>\n          <ButtonBar gap={1}>\n            <Feature organization={organization} features={['incidents']}>\n              {({hasFeature}) => hasFeature && this.renderCreateAlertButton()}\n            </Feature>\n            {this.renderKeyTransactionButton()}\n            {this.renderSettingsButton()}\n          </ButtonBar>\n        </Layout.HeaderActions>\n        <React.Fragment>\n          <StyledNavTabs>\n            <ListLink\n              to={summaryTarget}\n              isActive={() => currentTab === Tab.TransactionSummary}\n            >\n              {t('Overview')}\n            </ListLink>\n            {hasWebVitals && (\n              <ListLink\n                to={vitalsTarget}\n                isActive={() => currentTab === Tab.RealUserMonitoring}\n                onClick={this.trackVitalsTabClick}\n              >\n                {t('Web Vitals')}\n              </ListLink>\n            )}\n            <Feature features={['organizations:performance-tag-page']}>\n              <ListLink\n                to={tagsTarget}\n                isActive={() => currentTab === Tab.Tags}\n                onClick={this.trackTagsTabClick}\n              >\n                {t('Tags')}\n                <FeatureBadge type=\"beta\" noTooltip />\n              </ListLink>\n            </Feature>\n            <Feature features={['organizations:performance-events-page']}>\n              <ListLink\n                to={eventsTarget}\n                isActive={() => currentTab === Tab.Events}\n                onClick={this.trackEventsTabClick}\n              >\n                {t('All Events')}\n                <FeatureBadge type=\"beta\" noTooltip />\n              </ListLink>\n            </Feature>\n          </StyledNavTabs>\n        </React.Fragment>\n      </Layout.Header>\n    );\n  }\n}\n\nconst StyledNavTabs = styled(NavTabs)`\n  margin-bottom: 0;\n  /* Makes sure the tabs are pushed into another row */\n  width: 100%;\n`;\n\nexport default TransactionHeader;\n","import {Location, Query} from 'history';\n\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport {decodeScalar} from 'app/utils/queryString';\n\nexport function generateTagsRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/tags/`;\n}\n\nexport function decodeSelectedTagKey(location: Location): string | undefined {\n  return decodeScalar(location.query.tagKey);\n}\n\nexport function trackTagPageInteraction(organization: Organization) {\n  trackAnalyticsEvent({\n    eventKey: 'performance_views.tags.interaction',\n    eventName: 'Performance Views: Tag Page - Interaction',\n    organization_id: parseInt(organization.id, 10),\n  });\n}\n\nexport function tagsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  projectID?: string | string[];\n}) {\n  const pathname = generateTagsRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n      tagKey: query.tagKey,\n    },\n  };\n}\n\n// TODO(k-fish): Improve meta of backend response to return these directly\nexport function parseHistogramBucketInfo(row: {[key: string]: React.ReactText}) {\n  const field = Object.keys(row).find(f => f.includes('histogram'));\n  if (!field) {\n    return undefined;\n  }\n  const parts = field.split('_');\n  return {\n    histogramField: field,\n    bucketSize: parseInt(parts[parts.length - 3], 10),\n    offset: parseInt(parts[parts.length - 2], 10),\n    multiplier: parseInt(parts[parts.length - 1], 10),\n  };\n}\n","import {ECharts} from 'echarts';\nimport {Query} from 'history';\n\nimport {HistogramData} from 'app/utils/performance/histogram/types';\nimport {getBucketWidth} from 'app/utils/performance/histogram/utils';\n\nimport {Point, Rectangle} from './types';\n\nexport function generateVitalsRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/vitals/`;\n}\n\nexport function vitalsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalsRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\n/**\n * Given a value on the x-axis, return the index of the nearest bucket or null\n * if it cannot be found.\n *\n * A bucket contains a range of values, and nearest is defined as the bucket the\n * value will fall in.\n */\nexport function findNearestBucketIndex(\n  chartData: HistogramData,\n  xAxis: number\n): number | null {\n  const width = getBucketWidth(chartData);\n  // it's possible that the data is not available yet or the x axis is out of range\n  if (!chartData.length || xAxis >= chartData[chartData.length - 1].bin + width) {\n    return null;\n  } else if (xAxis < chartData[0].bin) {\n    return -1;\n  }\n\n  return Math.floor((xAxis - chartData[0].bin) / width);\n}\n\n/**\n * To compute pixel coordinates, we need at least 2 unique points on the chart.\n * The two points must have different x axis and y axis values for it to work.\n *\n * If all bars have the same y value, pick the most naive reference rect. This\n * may result in floating point errors, but should be okay for our purposes.\n */\nexport function getRefRect(chartData: HistogramData): Rectangle | null {\n  // not enough points to construct 2 reference points\n  if (chartData.length < 2) {\n    return null;\n  }\n\n  for (let i = 0; i < chartData.length; i++) {\n    const data1 = chartData[i];\n    for (let j = i + 1; j < chartData.length; j++) {\n      const data2 = chartData[j];\n\n      if (data1.bin !== data2.bin && data1.count !== data2.count) {\n        return {\n          point1: {x: i, y: Math.min(data1.count, data2.count)},\n          point2: {x: j, y: Math.max(data1.count, data2.count)},\n        };\n      }\n    }\n  }\n\n  // all data points have the same count, just pick any 2 histogram bins\n  // and use 0 and 1 as the count as we can rely on them being on the graph\n  return {\n    point1: {x: 0, y: 0},\n    point2: {x: 1, y: 1},\n  };\n}\n\n/**\n * Given an ECharts instance and a rectangle defined in terms of the x and y axis,\n * compute the corresponding pixel coordinates. If it cannot be done, return null.\n */\nexport function asPixelRect(chartRef: ECharts, dataRect: Rectangle): Rectangle | null {\n  const point1 = chartRef.convertToPixel({xAxisIndex: 0, yAxisIndex: 0}, [\n    dataRect.point1.x,\n    dataRect.point1.y,\n  ]);\n\n  if (isNaN(point1?.[0]) || isNaN(point1?.[1])) {\n    return null;\n  }\n\n  const point2 = chartRef.convertToPixel({xAxisIndex: 0, yAxisIndex: 0}, [\n    dataRect.point2.x,\n    dataRect.point2.y,\n  ]);\n\n  if (isNaN(point2?.[0]) || isNaN(point2?.[1])) {\n    return null;\n  }\n\n  return {\n    point1: {x: point1[0], y: point1[1]},\n    point2: {x: point2[0], y: point2[1]},\n  };\n}\n\n/**\n * Given a point on a source rectangle, map it to the corresponding point on the\n * destination rectangle. Assumes that the two rectangles are related by a simple\n * transformation containing only translations and scaling.\n */\nexport function mapPoint(\n  point: Point,\n  srcRect: Rectangle,\n  destRect: Rectangle\n): Point | null {\n  if (\n    srcRect.point1.x === srcRect.point2.x ||\n    srcRect.point1.y === srcRect.point2.y ||\n    destRect.point1.x === destRect.point2.x ||\n    destRect.point1.y === destRect.point2.y\n  ) {\n    return null;\n  }\n\n  const xPercentage =\n    (point.x - srcRect.point1.x) / (srcRect.point2.x - srcRect.point1.x);\n  const yPercentage =\n    (point.y - srcRect.point1.y) / (srcRect.point2.y - srcRect.point1.y);\n\n  return {\n    x: destRect.point1.x + (destRect.point2.x - destRect.point1.x) * xPercentage,\n    y: destRect.point1.y + (destRect.point2.y - destRect.point1.y) * yPercentage,\n  };\n}\n"],"sourceRoot":""}