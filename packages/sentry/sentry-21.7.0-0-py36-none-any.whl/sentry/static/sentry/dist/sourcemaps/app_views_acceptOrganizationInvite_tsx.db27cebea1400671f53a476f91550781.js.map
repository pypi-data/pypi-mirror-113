{"version":3,"sources":["webpack:///./app/views/acceptOrganizationInvite.tsx","webpack:///./app/views/asyncView.tsx"],"names":["AcceptOrganizationInvite","e","preventDefault","logout","api","window","location","replace","makeNextUrl","props","params","memberId","token","setState","accepting","requestPromise","method","browserHistory","state","inviteDetails","orgSlug","acceptError","this","t","path","urlEncode","next","pathname","user","ConfigStore","type","tct","email","switchLink","to","onClick","handleLogout","Fragment","requireSso","needsSso","authProvider","ssoProvider","Actions","ActionsLeft","label","priority","href","openInNewTab","disabled","handleAcceptInvite","title","InviteDescription","needsAuthentication","authenticationActions","existingMember","existingMemberAlert","needs2fa","warning2fa","needsEmailVerification","warningEmailVerification","acceptActions","AsyncView","space","getTitle","renderComponent","AsyncComponent"],"mappings":"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","file":"chunks/app_views_acceptOrganizationInvite_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {Fragment, MouseEvent} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {urlEncode} from '@sentry/utils';\n\nimport {logout} from 'app/actionCreators/account';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport NarrowLayout from 'app/components/narrowLayout';\nimport {t, tct} from 'app/locale';\nimport ConfigStore from 'app/stores/configStore';\nimport space from 'app/styles/space';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\ntype InviteDetails = {\n  orgSlug: string;\n  needsAuthentication: boolean;\n  needs2fa: boolean;\n  needsEmailVerification: boolean;\n  needsSso: boolean;\n  requireSso: boolean;\n  existingMember: boolean;\n  ssoProvider?: string;\n};\n\ntype Props = RouteComponentProps<{memberId: string; token: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  inviteDetails: InviteDetails;\n  accepting: boolean | undefined;\n  acceptError: boolean | undefined;\n};\n\nclass AcceptOrganizationInvite extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {memberId, token} = this.props.params;\n    return [['inviteDetails', `/accept-invite/${memberId}/${token}/`]];\n  }\n\n  getTitle() {\n    return t('Accept Organization Invite');\n  }\n\n  makeNextUrl(path: string) {\n    return `${path}?${urlEncode({next: window.location.pathname})}`;\n  }\n\n  handleLogout = async (e: MouseEvent) => {\n    e.preventDefault();\n    await logout(this.api);\n    window.location.replace(this.makeNextUrl('/auth/login/'));\n  };\n\n  handleAcceptInvite = async () => {\n    const {memberId, token} = this.props.params;\n\n    this.setState({accepting: true});\n    try {\n      await this.api.requestPromise(`/accept-invite/${memberId}/${token}/`, {\n        method: 'POST',\n      });\n      browserHistory.replace(`/${this.state.inviteDetails.orgSlug}/`);\n    } catch {\n      this.setState({acceptError: true});\n    }\n    this.setState({accepting: false});\n  };\n\n  get existingMemberAlert() {\n    const user = ConfigStore.get('user');\n\n    return (\n      <Alert type=\"warning\" data-test-id=\"existing-member\">\n        {tct(\n          'Your account ([email]) is already a member of this organization. [switchLink:Switch accounts]?',\n          {\n            email: user.email,\n            switchLink: (\n              <Link\n                to=\"\"\n                data-test-id=\"existing-member-link\"\n                onClick={this.handleLogout}\n              />\n            ),\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  get authenticationActions() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        {!inviteDetails.requireSso && (\n          <p data-test-id=\"action-info-general\">\n            {t(\n              `To continue, you must either create a new account, or login to an\n              existing Sentry account.`\n            )}\n          </p>\n        )}\n\n        {inviteDetails.needsSso && (\n          <p data-test-id=\"action-info-sso\">\n            {inviteDetails.requireSso\n              ? tct(\n                  `Note that [orgSlug] has required Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )\n              : tct(\n                  `Note that [orgSlug] has enabled Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )}\n          </p>\n        )}\n\n        <Actions>\n          <ActionsLeft>\n            {inviteDetails.needsSso && (\n              <Button\n                label=\"sso-login\"\n                priority=\"primary\"\n                href={this.makeNextUrl(`/auth/login/${inviteDetails.orgSlug}/`)}\n              >\n                {t('Join with %s', inviteDetails.ssoProvider)}\n              </Button>\n            )}\n            {!inviteDetails.requireSso && (\n              <Button\n                label=\"create-account\"\n                priority=\"primary\"\n                href={this.makeNextUrl('/auth/register/')}\n              >\n                {t('Create a new account')}\n              </Button>\n            )}\n          </ActionsLeft>\n          {!inviteDetails.requireSso && (\n            <ExternalLink\n              href={this.makeNextUrl('/auth/login/')}\n              openInNewTab={false}\n              data-test-id=\"link-with-existing\"\n            >\n              {t('Login using an existing account')}\n            </ExternalLink>\n          )}\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get warning2fa() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        <p data-test-id=\"2fa-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to configure two-factor authentication.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/security/\">\n            {t('Configure Two-Factor Auth')}\n          </Button>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get warningEmailVerification() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        <p data-test-id=\"email-verification-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to verify their email address.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/emails/\">\n            {t('Verify Email Address')}\n          </Button>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get acceptActions() {\n    const {inviteDetails, accepting} = this.state;\n\n    return (\n      <Actions>\n        <Button\n          label=\"join-organization\"\n          priority=\"primary\"\n          disabled={accepting}\n          onClick={this.handleAcceptInvite}\n        >\n          {t('Join the %s organization', inviteDetails.orgSlug)}\n        </Button>\n      </Actions>\n    );\n  }\n\n  renderError() {\n    return (\n      <NarrowLayout>\n        <Alert type=\"warning\">\n          {t('This organization invite link is no longer valid.')}\n        </Alert>\n      </NarrowLayout>\n    );\n  }\n\n  renderBody() {\n    const {inviteDetails, acceptError} = this.state;\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Accept organization invite')} />\n        {acceptError && (\n          <Alert type=\"error\">\n            {t('Failed to join this organization. Please try again')}\n          </Alert>\n        )}\n        <InviteDescription data-test-id=\"accept-invite\">\n          {tct('[orgSlug] is using Sentry to track and debug errors.', {\n            orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n          })}\n        </InviteDescription>\n        {inviteDetails.needsAuthentication\n          ? this.authenticationActions\n          : inviteDetails.existingMember\n          ? this.existingMemberAlert\n          : inviteDetails.needs2fa\n          ? this.warning2fa\n          : inviteDetails.needsEmailVerification\n          ? this.warningEmailVerification\n          : this.acceptActions}\n      </NarrowLayout>\n    );\n  }\n}\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(3)};\n`;\nconst ActionsLeft = styled('span')`\n  > a {\n    margin-right: ${space(1)};\n  }\n`;\n\nconst InviteDescription = styled('p')`\n  font-size: 1.2em;\n`;\nexport default AcceptOrganizationInvite;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n"],"sourceRoot":""}