{"version":3,"sources":["webpack:///./app/components/text.tsx","webpack:///./app/components/modals/redirectToProject.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/replaceRouterParams.tsx","webpack:///../node_modules/lodash/_baseFindIndex.js","webpack:///../node_modules/lodash/findLastIndex.js"],"names":["textStyles","Panel","space","RedirectToProjectModal","timer","setInterval","state","window","location","assign","newPath","setState","this","props","params","slug","recreateRoute","projectId","Header","Body","Fragment","t","tct","project","ButtonWrapper","priority","href","Component","ReactRouter","to","options","lastRootIndex","routeIndex","routes","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","route","matches","match","length","forEach","param","paramName","replace","module","exports","array","predicate","fromIndex","fromRight","index","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","nativeMin","min","undefined"],"mappings":"2hDAmBA,GAba,OAAO,MAAP,qBACTA,IADM,IAGYC,IAHZ,oBAIUC,OAAM,GAJhB,mBAKWA,OAAM,GALjB,+BAQWA,OAAM,GARjB,O,suBCaJC,E,wnBACW,CACbC,MAAO,I,kDAGT,WAAoB,WAClBC,aAAY,WACN,EAAKC,MAAMF,OAAS,EACtBG,OAAOC,SAASC,OAAO,EAAKC,SAI9B,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBF,MAAOE,EAAMF,MAAQ,QAEtB,O,mBAGL,WACE,MAAuBQ,KAAKC,MAArBC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,KAEf,OAAOC,OAAc,GAAD,OACfJ,KAAKC,OADU,IAElBC,OAAQ,EAAF,KACDA,GADC,IAEJG,UAAWF,S,oBAKjB,WACE,MAA6BH,KAAKC,MAA3BE,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,KACrB,OACE,QAAC,EAAAC,SAAD,YACE,QAACF,EAAD,WAASG,OAAE,oCAEX,QAACF,EAAD,WACE,yBACE,QAAC,EAAD,YACE,uBAAIE,OAAE,yCAEN,uBACGC,QACC,4EACA,CACEC,SAAS,2BAASR,IAClBX,MAAO,GAAF,OAAKQ,KAAKN,MAAMF,YAI3B,QAACoB,EAAD,WACE,QAAC,KAAD,CAAQC,SAAS,UAAUC,KAAMd,KAAKF,QAAtC,UACGW,OAAE,iBAAkBN,qB,GApDFY,aAA/BxB,E,qCA+DN,MAAeyB,aAAuBzB,GAGhCqB,GAAgB,OAAO,MAAP,sBAAH,iE,8gBCxDJ,SAASR,EACtBa,EACAC,GACQ,QAGJC,EACAC,EAHGC,EAAsCH,EAAtCG,OAAQnB,EAA8BgB,EAA9BhB,OAAQN,EAAsBsB,EAAtBtB,SAAU0B,EAAYJ,EAAZI,SAC3BC,EAAQF,EAAOG,KAAI,qBAAEC,MAAkB,MAK3B,iBAAPR,GACTG,EAAaC,EAAOK,QAAQT,GAAM,EAClCE,EAAgBQ,IAAcJ,EAAMK,MAAM,EAAGR,IAAa,SAAAK,GAAI,MAAgB,MAAZA,EAAK,OAEvEN,EAAgBQ,IAAcJ,GAAO,SAAAE,GAAI,MAAgB,MAAZA,EAAK,MAGpD,IAAII,EAAYN,EAAMK,MAAMT,EAAeC,QAEnB,IAAbE,IACTO,EAAYA,EAAUD,MAAM,EAAGN,IAGjC,IAAMQ,EAAM,UAAGlC,aAAH,EAAGA,EAAUkC,cAAb,QAAuB,GAC7BC,EAAI,UAAGnC,aAAH,EAAGA,EAAUmC,YAAb,QAAqB,GAEzBC,EAAY,GAAH,OAAMH,EAAUI,KAAK,KAArB,OACC,iBAAPhB,EAAkB,GAAKA,GADjB,OAEZa,GAFY,OAEHC,GAEZ,OAAOG,OAAoBF,EAAW9B,K,mECtDzB,SAASgC,EACtBC,EACAjC,GAGA,IAAMkC,EAAUD,EAAME,MAAM,SAE5B,OAAKD,GAAYA,EAAQE,QAKzBF,EAAQG,SAAQ,SAAAC,GACd,IAAMC,EAAYD,EAAMZ,MAAM,QACG,IAAtB1B,EAAOuC,KAIlBN,EAAQA,EAAMO,QAAQF,EAAOtC,EAAOuC,QAG/BN,GAbEA,E,6XCUXQ,EAAOC,QAZP,SAAuBC,EAAOC,EAAWC,EAAWC,GAIlD,IAHA,IAAIV,EAASO,EAAMP,OACfW,EAAQF,GAAaC,EAAY,GAAK,GAElCA,EAAYC,MAAYA,EAAQX,GACtC,GAAIQ,EAAUD,EAAMI,GAAQA,EAAOJ,GACjC,OAAOI,EAGX,OAAQ,I,0DCpBV,IAAIC,EAAgB,EAAQ,4CACxBC,EAAe,EAAQ,2CACvBC,EAAY,EAAQ,uCAGpBC,EAAYC,KAAKC,IACjBC,EAAYF,KAAKG,IAoDrBd,EAAOC,QAfP,SAAuBC,EAAOC,EAAWC,GACvC,IAAIT,EAAkB,MAATO,EAAgB,EAAIA,EAAMP,OACvC,IAAKA,EACH,OAAQ,EAEV,IAAIW,EAAQX,EAAS,EAOrB,YANkBoB,IAAdX,IACFE,EAAQG,EAAUL,GAClBE,EAAQF,EAAY,EAChBM,EAAUf,EAASW,EAAO,GAC1BO,EAAUP,EAAOX,EAAS,IAEzBY,EAAcL,EAAOM,EAAaL,EAAW,GAAIG,GAAO","file":"chunks/app_components_modals_redirectToProject_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import styled from '@emotion/styled';\n\nimport Panel from 'app/components/panels/panel';\nimport space from 'app/styles/space';\nimport textStyles from 'app/styles/text';\n\nconst Text = styled('div')`\n  ${textStyles};\n\n  ${/* sc-selector */ Panel} & {\n    padding-left: ${space(2)};\n    padding-right: ${space(2)};\n\n    &:first-child {\n      padding-top: ${space(2)};\n    }\n  }\n`;\n\nexport default Text;\n","import {Component, Fragment} from 'react';\nimport * as ReactRouter from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport Text from 'app/components/text';\nimport {t, tct} from 'app/locale';\nimport recreateRoute from 'app/utils/recreateRoute';\n\ntype Props = ModalRenderProps &\n  ReactRouter.WithRouterProps & {\n    slug: string;\n  };\n\ntype State = {\n  timer: number;\n};\n\nclass RedirectToProjectModal extends Component<Props, State> {\n  state: State = {\n    timer: 5,\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      if (this.state.timer <= 1) {\n        window.location.assign(this.newPath);\n        return;\n      }\n\n      this.setState(state => ({\n        timer: state.timer - 1,\n      }));\n    }, 1000);\n  }\n\n  get newPath() {\n    const {params, slug} = this.props;\n\n    return recreateRoute('', {\n      ...this.props,\n      params: {\n        ...params,\n        projectId: slug,\n      },\n    });\n  }\n\n  render() {\n    const {slug, Header, Body} = this.props;\n    return (\n      <Fragment>\n        <Header>{t('Redirecting to New Project...')}</Header>\n\n        <Body>\n          <div>\n            <Text>\n              <p>{t('The project slug has been changed.')}</p>\n\n              <p>\n                {tct(\n                  'You will be redirected to the new project [project] in [timer] seconds...',\n                  {\n                    project: <strong>{slug}</strong>,\n                    timer: `${this.state.timer}`,\n                  }\n                )}\n              </p>\n              <ButtonWrapper>\n                <Button priority=\"primary\" href={this.newPath}>\n                  {t('Continue to %s', slug)}\n                </Button>\n              </ButtonWrapper>\n            </Text>\n          </div>\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default ReactRouter.withRouter(RedirectToProjectModal);\nexport {RedirectToProjectModal};\n\nconst ButtonWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","/**\n * Given a route string, replace path parameters (e.g. `:id`) with value from `params`\n *\n * e.g. {id: 'test'}\n */\nexport default function replaceRouterParams(\n  route: string,\n  params: {[key: string]: string | undefined}\n): string {\n  // parse route params from route\n  const matches = route.match(/:\\w+/g);\n\n  if (!matches || !matches.length) {\n    return route;\n  }\n\n  // replace with current params\n  matches.forEach(param => {\n    const paramName = param.slice(1);\n    if (typeof params[paramName] === 'undefined') {\n      return;\n    }\n\n    route = route.replace(param, params[paramName] as string);\n  });\n\n  return route;\n}\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n"],"sourceRoot":""}