{"version":3,"sources":["webpack:///./app/components/pagination/paginationCaption.tsx","webpack:///./app/views/organizationGroupDetails/grouping/errorMessage.tsx","webpack:///./app/views/organizationGroupDetails/grouping/newIssue.tsx","webpack:///./app/views/organizationGroupDetails/grouping/grouping.tsx","webpack:///./app/views/organizationGroupDetails/grouping/index.tsx"],"names":["PaginationCaption","caption","Wrapper","p","theme","subText","fontSizeMedium","space","ErrorMessage","error","groupId","onRetry","type","status","responseJSON","detail","code","message","errorMessage","errorCode","title","t","subTitle","getErrorMessage","size","description","action","priority","to","location","search","undefined","NewIssue","sampleEvent","eventCount","organization","Fragment","EventDetails","data","hideIcons","hideLevel","ExtraInfo","TimeWrapper","StyledIconClock","date","dateCreated","suffix","EventCount","fontSizeSmall","IconClock","Grouping","api","router","query","cursor","level","useState","isLoading","setIsLoading","isGroupingLevelDetailsLoading","setIsGroupingLevelDetailsLoading","setError","groupingLevels","setGroupingLevels","activeGroupingLevel","setActiveGroupingLevel","activeGroupingLevelDetails","setActiveGroupingLevelDetails","pagination","setPagination","useEffect","fetchGroupingLevels","length","defined","Number","id","setSecondGrouping","replace","pathname","fetchGroupingLevelDetails","handleSetActiveGroupingLevel","debounce","groupingLevelId","DEFAULT_DEBOUNCE_DURATION","requestPromise","response","levels","method","includeAllArgs","per_page","xhr","pageLinks","getResponseHeader","Array","isArray","links","parseLinkHeader","hasMore","previous","results","next","paginationCurrentQuantity","Header","Body","SliderWrapper","StyledRangeSlider","name","allowedValues","map","groupingLevel","value","onChange","showLabel","Content","isReloading","StyledPanelTable","headers","hash","metadata","latestEvent","StyledPagination","disabled","tct","result","tn","current","total","withApi","PanelTable","breakpoints","Pagination","RangeSlider","Slider","backgroundSecondary","GroupingContainer","params","features","renderDisabled","withOrganization"],"mappings":"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","file":"chunks/app_views_organizationGroupDetails_grouping_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\n\ntype Props = {\n  caption: React.ReactNode;\n};\n\nfunction PaginationCaption({caption}: Props) {\n  return <Wrapper>{caption}</Wrapper>;\n}\n\nexport default PaginationCaption;\n\nconst Wrapper = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(2)};\n`;\n","import Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport LoadingError from 'app/components/loadingError';\nimport {Panel} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {Group} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype ErrorCode = 'not_hierarchical' | 'no_events' | 'merged_issues' | 'missing_feature';\n\ntype Error = {\n  status: number;\n  responseJSON?: {\n    detail: {\n      code: ErrorCode;\n      extra: Record<string, any>;\n      message: string;\n    };\n  };\n};\n\ntype Props = {\n  error: Error | string;\n  groupId: Group['id'];\n  onRetry: () => void;\n};\n\nfunction ErrorMessage({error, groupId, onRetry}: Props) {\n  function getErrorMessage(errorCode: ErrorCode) {\n    switch (errorCode) {\n      case 'merged_issues':\n        return {\n          title: t('An issue can only contain one fingerprint'),\n          subTitle: t(\n            'This issue needs to be fully unmerged before grouping levels can be shown'\n          ),\n        };\n      case 'missing_feature':\n        return {\n          title: t('This project does not have the grouping tree feature'),\n        };\n\n      case 'no_events':\n        return {\n          title: t('This issue has no events'),\n        };\n      case 'not_hierarchical':\n        return {\n          title: t('This issue does not have hierarchical grouping'),\n        };\n      default:\n        return undefined;\n    }\n  }\n\n  if (typeof error === 'string') {\n    return <Alert type=\"warning\">{error}</Alert>;\n  }\n\n  if (error.status === 403 && error.responseJSON?.detail) {\n    const {code, message} = error.responseJSON.detail;\n    const errorMessage = getErrorMessage(code);\n\n    return (\n      <Panel>\n        <EmptyMessage\n          size=\"large\"\n          title={errorMessage?.title ?? message}\n          description={errorMessage?.subTitle}\n          action={\n            code === 'merged_issues' ? (\n              <Button\n                priority=\"primary\"\n                to={`/organizations/sentry/issues/${groupId}/merged/?${location.search}`}\n              >\n                {t('Unmerge issue')}\n              </Button>\n            ) : undefined\n          }\n        />\n      </Panel>\n    );\n  }\n\n  return (\n    <LoadingError\n      message={t('Unable to load grouping levels, please try again later')}\n      onRetry={onRetry}\n    />\n  );\n}\n\nexport default ErrorMessage;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport EventOrGroupHeader from 'app/components/eventOrGroupHeader';\nimport TimeSince from 'app/components/timeSince';\nimport {IconClock} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport {Event} from 'app/types/event';\n\ntype Props = {\n  sampleEvent: Event;\n  eventCount: number;\n  organization: Organization;\n};\n\nfunction NewIssue({sampleEvent, eventCount, organization}: Props) {\n  return (\n    <Fragment>\n      <EventDetails>\n        <EventOrGroupHeader\n          data={sampleEvent}\n          organization={organization}\n          hideIcons\n          hideLevel\n        />\n        <ExtraInfo>\n          <TimeWrapper>\n            <StyledIconClock size=\"11px\" />\n            <TimeSince date={sampleEvent.dateCreated} suffix={t('old')} />\n          </TimeWrapper>\n        </ExtraInfo>\n      </EventDetails>\n      <EventCount>{eventCount}</EventCount>\n    </Fragment>\n  );\n}\n\nexport default NewIssue;\n\nconst EventDetails = styled('div')`\n  overflow: hidden;\n  line-height: 1.1;\n`;\n\nconst ExtraInfo = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(2)};\n  justify-content: flex-start;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst EventCount = styled('div')`\n  align-items: center;\n  line-height: 1.1;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  color: ${p => p.theme.subText};\n`;\n","import {useEffect, useState} from 'react';\nimport {InjectedRouter} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'app/api';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport PaginationCaption from 'app/components/pagination/paginationCaption';\nimport {PanelTable} from 'app/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'app/constants';\nimport {t, tct, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {BaseGroup, Group, Organization} from 'app/types';\nimport {defined} from 'app/utils';\nimport parseLinkHeader from 'app/utils/parseLinkHeader';\nimport withApi from 'app/utils/withApi';\nimport RangeSlider, {\n  Slider,\n} from 'app/views/settings/components/forms/controls/rangeSlider';\n\nimport ErrorMessage from './errorMessage';\nimport NewIssue from './newIssue';\n\ntype Error = React.ComponentProps<typeof ErrorMessage>['error'];\n\ntype Props = {\n  organization: Organization;\n  groupId: Group['id'];\n  location: Location<{level?: number; cursor?: string}>;\n  api: Client;\n  router: InjectedRouter;\n};\n\ntype GroupingLevelDetails = Partial<Pick<BaseGroup, 'title' | 'metadata'>> & {\n  eventCount: number;\n  hash: string;\n  latestEvent: BaseGroup['latestEvent'];\n};\n\ntype GroupingLevel = {\n  id: string;\n  isCurrent: boolean;\n};\n\nfunction Grouping({api, groupId, location, organization, router}: Props) {\n  const {cursor, level} = location.query;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGroupingLevelDetailsLoading, setIsGroupingLevelDetailsLoading] =\n    useState(false);\n  const [error, setError] = useState<undefined | Error | string>(undefined);\n  const [groupingLevels, setGroupingLevels] = useState<GroupingLevel[]>([]);\n  const [activeGroupingLevel, setActiveGroupingLevel] = useState<number | undefined>(\n    undefined\n  );\n  const [activeGroupingLevelDetails, setActiveGroupingLevelDetails] = useState<\n    GroupingLevelDetails[]\n  >([]);\n\n  const [pagination, setPagination] = useState('');\n\n  useEffect(() => {\n    fetchGroupingLevels();\n  }, []);\n\n  useEffect(() => {\n    setSecondGrouping();\n  }, [groupingLevels]);\n\n  useEffect(() => {\n    updateUrlWithNewLevel();\n  }, [activeGroupingLevel]);\n\n  useEffect(() => {\n    fetchGroupingLevelDetails();\n  }, [activeGroupingLevel, cursor]);\n\n  const handleSetActiveGroupingLevel = debounce((groupingLevelId: number | '') => {\n    setActiveGroupingLevel(Number(groupingLevelId));\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  async function fetchGroupingLevels() {\n    setIsLoading(true);\n    setError(undefined);\n    try {\n      const response = await api.requestPromise(`/issues/${groupId}/grouping/levels/`);\n      setIsLoading(false);\n      setGroupingLevels(response.levels);\n    } catch (err) {\n      setIsLoading(false);\n      setError(err);\n    }\n  }\n\n  async function fetchGroupingLevelDetails() {\n    if (!groupingLevels.length || !defined(activeGroupingLevel)) {\n      return;\n    }\n\n    setIsGroupingLevelDetailsLoading(true);\n    setError(undefined);\n\n    try {\n      const [response, , xhr] = await api.requestPromise(\n        `/issues/${groupId}/grouping/levels/${activeGroupingLevel}/new-issues/`,\n        {\n          method: 'GET',\n          includeAllArgs: true,\n          query: {\n            ...location.query,\n            per_page: 10,\n          },\n        }\n      );\n\n      const pageLinks = xhr && xhr.getResponseHeader?.('Link');\n      setPagination(pageLinks ?? '');\n      setActiveGroupingLevelDetails(Array.isArray(response) ? response : [response]);\n      setIsGroupingLevelDetailsLoading(false);\n    } catch (err) {\n      setIsGroupingLevelDetailsLoading(false);\n      setError(err);\n    }\n  }\n\n  function updateUrlWithNewLevel() {\n    if (!defined(activeGroupingLevel) || level === activeGroupingLevel) {\n      return;\n    }\n\n    router.replace({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, level: activeGroupingLevel},\n    });\n  }\n\n  function setSecondGrouping() {\n    if (!groupingLevels.length) {\n      return;\n    }\n\n    if (defined(level)) {\n      if (!defined(groupingLevels[level])) {\n        setError(t('The level you were looking for was not found.'));\n        return;\n      }\n\n      if (level === activeGroupingLevel) {\n        return;\n      }\n\n      setActiveGroupingLevel(level);\n      return;\n    }\n\n    if (groupingLevels.length > 1) {\n      setActiveGroupingLevel(Number(groupingLevels[1].id));\n      return;\n    }\n\n    setActiveGroupingLevel(Number(groupingLevels[0].id));\n  }\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <ErrorMessage onRetry={fetchGroupingLevels} groupId={groupId} error={error} />;\n  }\n\n  if (!activeGroupingLevelDetails.length) {\n    return <LoadingIndicator />;\n  }\n\n  const links = parseLinkHeader(pagination);\n  const hasMore = links.previous?.results || links.next?.results;\n  const paginationCurrentQuantity = activeGroupingLevelDetails.length;\n\n  return (\n    <Wrapper>\n      <Header>\n        {t(\n          'This issue is an aggregate of multiple events that sentry determined originate from the same root-cause. Use this page to explore more detailed groupings that exist within this issue.'\n        )}\n      </Header>\n      <Body>\n        <SliderWrapper>\n          {t('Fewer issues')}\n          <StyledRangeSlider\n            name=\"grouping-level\"\n            allowedValues={groupingLevels.map(groupingLevel => Number(groupingLevel.id))}\n            value={activeGroupingLevel ?? 0}\n            onChange={handleSetActiveGroupingLevel}\n            showLabel={false}\n          />\n          {t('More issues')}\n        </SliderWrapper>\n        <Content isReloading={isGroupingLevelDetailsLoading}>\n          <StyledPanelTable headers={['', t('Events')]}>\n            {activeGroupingLevelDetails.map(\n              ({hash, title, metadata, latestEvent, eventCount}) => {\n                // XXX(markus): Ugly hack to make NewIssue show the right things.\n                return (\n                  <NewIssue\n                    key={hash}\n                    sampleEvent={{\n                      ...latestEvent,\n                      metadata: metadata || latestEvent.metadata,\n                      title: title || latestEvent.title,\n                    }}\n                    eventCount={eventCount}\n                    organization={organization}\n                  />\n                );\n              }\n            )}\n          </StyledPanelTable>\n          <StyledPagination\n            pageLinks={pagination}\n            disabled={isGroupingLevelDetailsLoading}\n            caption={\n              <PaginationCaption\n                caption={tct('Showing [current] of [total] [result]', {\n                  result: hasMore\n                    ? t('results')\n                    : tn('result', 'results', paginationCurrentQuantity),\n                  current: paginationCurrentQuantity,\n                  total: hasMore\n                    ? `${paginationCurrentQuantity}+`\n                    : paginationCurrentQuantity,\n                })}\n              />\n            }\n          />\n        </Content>\n      </Body>\n    </Wrapper>\n  );\n}\n\nexport default withApi(Grouping);\n\nconst Wrapper = styled('div')`\n  flex: 1;\n  display: grid;\n  align-content: flex-start;\n  margin: -${space(3)} -${space(4)};\n  padding: ${space(3)} ${space(4)};\n`;\n\nconst Header = styled('p')`\n  && {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nconst Body = styled('div')`\n  display: grid;\n  grid-gap: ${space(3)};\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr minmax(60px, auto);\n  > * {\n    padding: ${space(1.5)} ${space(2)};\n    :nth-child(-n + 2) {\n      padding: ${space(2)};\n    }\n    :nth-child(2n) {\n      display: flex;\n      text-align: right;\n      justify-content: flex-end;\n    }\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    grid-template-columns: 1fr minmax(80px, auto);\n  }\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 0;\n`;\n\nconst Content = styled('div')<{isReloading: boolean}>`\n  ${p =>\n    p.isReloading &&\n    `\n      ${StyledPanelTable}, ${StyledPagination} {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    `}\n`;\n\nconst SliderWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(1.5)};\n  grid-template-columns: max-content max-content;\n  justify-content: space-between;\n  align-items: flex-start;\n  position: relative;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  padding-bottom: ${space(2)};\n\n  @media (min-width: 700px) {\n    grid-template-columns: max-content minmax(270px, auto) max-content;\n    align-items: center;\n    justify-content: flex-start;\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledRangeSlider = styled(RangeSlider)`\n  ${Slider} {\n    background: transparent;\n    margin-top: 0;\n    margin-bottom: 0;\n\n    ::-ms-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-moz-range-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-webkit-slider-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n  }\n\n  position: absolute;\n  bottom: 0;\n  left: ${space(1.5)};\n  right: ${space(1.5)};\n\n  @media (min-width: 700px) {\n    position: static;\n    left: auto;\n    right: auto;\n  }\n`;\n","import {RouteComponentProps} from 'react-router';\n\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport {Group, Organization} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport Grouping from './grouping';\n\ntype RouteParams = {groupId: Group['id']; orgId: Organization['slug']};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\nfunction GroupingContainer({organization, params, location, router}: Props) {\n  return (\n    <Feature\n      features={['grouping-tree-ui']}\n      organization={organization}\n      renderDisabled={() => (\n        <PageContent>\n          <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n        </PageContent>\n      )}\n    >\n      <Grouping\n        location={location}\n        groupId={params.groupId}\n        organization={organization}\n        router={router}\n      />\n    </Feature>\n  );\n}\n\nexport default withOrganization(GroupingContainer);\n"],"sourceRoot":""}