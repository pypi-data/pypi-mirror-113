{"version":3,"sources":["webpack:///./app/bootstrap/initializeLocale.tsx","webpack:///./app/bootstrap/initializeMain.tsx","webpack:///./app/locale.tsx","webpack:///./app/utils/localStorage.tsx","webpack:///../node_modules/moment/locale|lazy|/(bg|cs|de|en|es|fi|fr|it|ja|ru|zh-cn|zh-tw)\\.js$/|groupOptions: {}|namespace object","webpack:///../src/sentry/locale|lazy|/(bg|cs|de|en|es|fi|fr|it|ja|ru|zh_CN|zh_TW)\\/.*\\.po$/|groupOptions: {}|namespace object"],"names":["convertToDjangoLocaleFormat","language","split","left","right","toUpperCase","getTranslations","DEFAULT_LOCALE_DATA","Sentry","scope","setLevel","setFingerprint","setExtra","initializeLocale","config","queryString","qs","window","location","search","queryStringLang","Array","isArray","lang","languageCode","user","options","translations","setLocale","moment","initializeMain","initializeApp","markerStyles","background","outline","LOCALE_DEBUG","localStorage","domain","plural_forms","toggleLocaleDebug","value","console","log","i18n","Jed","missing_key_callback","locale_data","sentry","getClient","warning","Error","error","renderTemplate","template","components","idx","renderGroup","groupKey","children","item","isString","push","group","reference","React","element","length","key","mark","node","$$typeof","Symbol","for","type","ref","props","style","_owner","_store","proxy","format","formatString","args","some","isObject","componentMap","Object","keys","argsInvolveReact","nodes","cursor","sprintf","forEach","match","arg","parseInt","formatForReact","gettext","string","val","ngettext","singular","plural","countArg","Math","abs","includes","toLocaleString","slice","gettextComponentTemplate","parsed","process","startPos","inGroup","regex","buf","satisfied","pos","lastIndex","exec","substr","index","fullMatch","groupName","closeBraceOrValueSeparator","endPos","rest","parseComponentTemplate","functions","mod","setItem","removeItem","bind","getItem","e","createLocalStorage","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","code","ids","id","t","module","exports"],"mappings":"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","file":"chunks/app_bootstrap_initializeMain_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as Sentry from '@sentry/react';\nimport * as moment from 'moment';\nimport * as qs from 'query-string';\n\nimport {DEFAULT_LOCALE_DATA, setLocale} from 'app/locale';\nimport {Config} from 'app/types';\n\n// zh-cn => zh_CN\nfunction convertToDjangoLocaleFormat(language: string) {\n  const [left, right] = language.split('-');\n  return left + (right ? '_' + right.toUpperCase() : '');\n}\n\nasync function getTranslations(language: string) {\n  language = convertToDjangoLocaleFormat(language);\n\n  // No need to load the english locale\n  if (language === 'en') {\n    return DEFAULT_LOCALE_DATA;\n  }\n\n  try {\n    return await import(`sentry-locale/${language}/LC_MESSAGES/django.po`);\n  } catch (e) {\n    Sentry.withScope(scope => {\n      scope.setLevel(Sentry.Severity.Warning);\n      scope.setFingerprint(['sentry-locale-not-found']);\n      scope.setExtra('locale', language);\n      Sentry.captureException(e);\n    });\n\n    // Default locale if not found\n    return DEFAULT_LOCALE_DATA;\n  }\n}\n\n/**\n * Initialize locale\n *\n * This *needs* to be initialized as early as possible (e.g. before `app/locale` is used),\n * otherwise the rest of the application will fail to load.\n *\n * Priority:\n *\n * - URL params (`?lang=en`)\n * - User configuration options\n * - User's system language code (from request)\n * - \"en\" as default\n */\nexport async function initializeLocale(config: Config) {\n  let queryString: qs.ParsedQuery = {};\n\n  // Parse query string for `lang`\n  try {\n    queryString = qs.parse(window.location.search) || {};\n  } catch {\n    // ignore if this fails to parse\n    // this can happen if we have an invalid query string\n    // e.g. unencoded \"%\"\n  }\n\n  const queryStringLang = Array.isArray(queryString.lang)\n    ? queryString.lang[0]\n    : queryString.lang;\n  const languageCode =\n    queryStringLang || config.user?.options?.language || config.languageCode || 'en';\n\n  try {\n    const translations = await getTranslations(languageCode);\n    setLocale(translations);\n\n    // No need to import english\n    if (languageCode !== 'en') {\n      await import(`moment/locale/${languageCode}`);\n      moment.locale(languageCode);\n    }\n  } catch (err) {\n    Sentry.captureException(err);\n  }\n}\n","import {Config} from 'app/types';\n\nimport {initializeLocale} from './initializeLocale';\n\nexport async function initializeMain(config: Config) {\n  // This needs to be loaded as early as possible, or else the locale library can\n  // throw an exception and prevent the application from being loaded.\n  //\n  // e.g. `app/constants` uses `t()` and is imported quite early\n  await initializeLocale(config);\n\n  // This is dynamically imported because we need to make sure locale is configured\n  // before proceeding.\n  const {initializeApp} = await import('./initializeApp');\n  await initializeApp(config);\n}\n","import * as React from 'react';\nimport * as Sentry from '@sentry/react';\nimport Jed from 'jed';\nimport isArray from 'lodash/isArray';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport {sprintf} from 'sprintf-js';\n\nimport localStorage from 'app/utils/localStorage';\n\nconst markerStyles = {\n  background: '#ff801790',\n  outline: '2px solid #ff801790',\n};\n\nconst LOCALE_DEBUG = localStorage.getItem('localeDebug') === '1';\n\nexport const DEFAULT_LOCALE_DATA = {\n  '': {\n    domain: 'sentry',\n    lang: 'en',\n    plural_forms: 'nplurals=2; plural=(n != 1);',\n  },\n};\n\nexport function setLocaleDebug(value: boolean) {\n  localStorage.setItem('localeDebug', value ? '1' : '0');\n  // eslint-disable-next-line no-console\n  console.log(`Locale debug is: ${value ? 'on' : 'off'}. Reload page to apply changes!`);\n}\n\n/**\n * Toggles the locale debug flag in local storage, but does _not_ reload the\n * page. The caller should do this.\n */\nexport function toggleLocaleDebug() {\n  const currentValue = localStorage.getItem('localeDebug');\n  setLocaleDebug(currentValue !== '1');\n}\n\n/**\n * Global Jed locale object loaded with translations via setLocale\n */\nlet i18n: any = null;\n\n/**\n * Set the current application locale.\n *\n * NOTE: This MUST be called early in the application before calls to any\n * translation functions, as this mutates a singleton translation object used\n * to lookup translations at runtime.\n */\nexport function setLocale(translations: any) {\n  i18n = new Jed({\n    domain: 'sentry',\n    missing_key_callback: () => {},\n    locale_data: {\n      sentry: translations,\n    },\n  });\n\n  return i18n;\n}\n\ntype FormatArg = ComponentMap | React.ReactNode;\n\n/**\n * Helper to return the i18n client, and initialize for the default locale (English)\n * if it has otherwise not been initialized.\n */\nfunction getClient() {\n  if (!i18n) {\n    // If this happens, it could mean that an import was added/changed where\n    // locale initialization does not happen soon enough.\n    const warning = new Error('Locale not set, defaulting to English');\n    console.error(warning); // eslint-disable-line no-console\n    Sentry.captureException(warning);\n    return setLocale(DEFAULT_LOCALE_DATA);\n  }\n\n  return i18n;\n}\n\n/**\n * printf style string formatting which render as react nodes.\n */\nfunction formatForReact(formatString: string, args: FormatArg[]) {\n  const nodes: React.ReactNodeArray = [];\n  let cursor = 0;\n\n  // always re-parse, do not cache, because we change the match\n  sprintf.parse(formatString).forEach((match: any, idx: number) => {\n    if (isString(match)) {\n      nodes.push(match);\n      return;\n    }\n\n    let arg: FormatArg = null;\n\n    if (match[2]) {\n      arg = (args[0] as ComponentMap)[match[2][0]];\n    } else if (match[1]) {\n      arg = args[parseInt(match[1], 10) - 1];\n    } else {\n      arg = args[cursor++];\n    }\n\n    // this points to a react element!\n    if (React.isValidElement(arg)) {\n      nodes.push(React.cloneElement(arg, {key: idx}));\n    } else {\n      // not a react element, fuck around with it so that sprintf.format\n      // can format it for us.  We make sure match[2] is null so that we\n      // do not go down the object path, and we set match[1] to the first\n      // index and then pass an array with two items in.\n      match[2] = null;\n      match[1] = 1;\n      nodes.push(<span key={idx++}>{sprintf.format([match], [null, arg])}</span>);\n    }\n  });\n\n  return nodes;\n}\n\n/**\n * Determine if any arguments include React elements.\n */\nfunction argsInvolveReact(args: FormatArg[]) {\n  if (args.some(React.isValidElement)) {\n    return true;\n  }\n\n  if (args.length !== 1 || !isObject(args[0])) {\n    return false;\n  }\n\n  const componentMap = args[0] as ComponentMap;\n\n  return Object.keys(componentMap).some(key => React.isValidElement(componentMap[key]));\n}\n\n/**\n * Parse template strings will be parsed into an array of TemplateSubvalue's,\n * this represents either a portion of the string, or a object with the group\n * key indicating the group to lookup the group value in.\n */\ntype TemplateSubvalue = string | {group: string};\n\n/**\n * ParsedTemplate is a mapping of group names to Template Subvalue arrays.\n */\ntype ParsedTemplate = {[group: string]: TemplateSubvalue[]};\n\n/**\n * ComponentMap maps template group keys to react node instances.\n *\n * NOTE: template group keys that include additional sub values (e.g.\n * [groupName:this string is the sub value]) will override the mapped react\n * nodes children prop.\n *\n * In the above example the component map of {groupName: <strong>text</strong>}\n * will be translated to `<strong>this string is the sub value</strong>`.\n */\ntype ComponentMap = {[group: string]: React.ReactNode};\n\n/**\n * Parses a template string into groups.\n *\n * The top level group will be keyed as `root`. All other group names will have\n * been extracted from the template string.\n */\nexport function parseComponentTemplate(template: string) {\n  const parsed: ParsedTemplate = {};\n\n  function process(startPos: number, group: string, inGroup: boolean) {\n    const regex = /\\[(.*?)(:|\\])|\\]/g;\n    const buf: TemplateSubvalue[] = [];\n\n    let satisfied = false;\n    let match: ReturnType<typeof regex.exec>;\n\n    let pos = (regex.lastIndex = startPos);\n\n    // eslint-disable-next-line no-cond-assign\n    while ((match = regex.exec(template)) !== null) {\n      const substr = template.substr(pos, match.index - pos);\n      if (substr !== '') {\n        buf.push(substr);\n      }\n\n      const [fullMatch, groupName, closeBraceOrValueSeparator] = match;\n\n      if (fullMatch === ']') {\n        if (inGroup) {\n          satisfied = true;\n          break;\n        } else {\n          pos = regex.lastIndex;\n          continue;\n        }\n      }\n\n      if (closeBraceOrValueSeparator === ']') {\n        pos = regex.lastIndex;\n      } else {\n        pos = regex.lastIndex = process(regex.lastIndex, groupName, true);\n      }\n      buf.push({group: groupName});\n    }\n\n    let endPos = regex.lastIndex;\n    if (!satisfied) {\n      const rest = template.substr(pos);\n      if (rest) {\n        buf.push(rest);\n      }\n      endPos = template.length;\n    }\n\n    parsed[group] = buf;\n    return endPos;\n  }\n\n  process(0, 'root', false);\n\n  return parsed;\n}\n\n/**\n * Renders a parsed template into a React tree given a ComponentMap to use for\n * the parsed groups.\n */\nexport function renderTemplate(template: ParsedTemplate, components: ComponentMap) {\n  let idx = 0;\n\n  function renderGroup(groupKey: string) {\n    const children: React.ReactNode[] = [];\n    const group = template[groupKey] || [];\n\n    for (const item of group) {\n      if (isString(item)) {\n        children.push(<span key={idx++}>{item}</span>);\n      } else {\n        children.push(renderGroup(item.group));\n      }\n    }\n\n    // In case we cannot find our component, we call back to an empty\n    // span so that stuff shows up at least.\n    let reference = components[groupKey] ?? <span key={idx++} />;\n\n    if (!React.isValidElement(reference)) {\n      reference = <span key={idx++}>{reference}</span>;\n    }\n\n    const element = reference as React.ReactElement;\n\n    return children.length === 0\n      ? React.cloneElement(element, {key: idx++})\n      : React.cloneElement(element, {key: idx++}, children);\n  }\n\n  return <React.Fragment>{renderGroup('root')}</React.Fragment>;\n}\n\n/**\n * mark is used to debug translations by visually marking translated strings.\n *\n * NOTE: This is a no-op and will return the node if LOCALE_DEBUG is not\n * currently enabled. See setLocaleDebug and toggleLocaleDebug.\n */\nfunction mark<T>(node: T): T {\n  if (!LOCALE_DEBUG) {\n    return node;\n  }\n\n  // TODO(epurkhiser): Explain why we manually create a react node and assign\n  // the toString function. This could likely also use better typing, but will\n  // require some understanding of reacts internal types.\n  const proxy: any = {\n    $$typeof: Symbol.for('react.element'),\n    type: 'span',\n    key: null,\n    ref: null,\n    props: {\n      style: markerStyles,\n      children: isArray(node) ? node : [node],\n    },\n    _owner: null,\n    _store: {},\n  };\n\n  proxy.toString = () => '✅' + node + '✅';\n\n  return proxy;\n}\n\n/**\n * sprintf style string formatting. Does not handle translations.\n *\n * See the sprintf-js library [0] for specifics on the argument\n * parameterization format.\n *\n * [0]: https://github.com/alexei/sprintf.js\n */\nexport function format(formatString: string, args: FormatArg[]) {\n  if (argsInvolveReact(args)) {\n    return formatForReact(formatString, args);\n  }\n\n  return sprintf(formatString, ...args) as string;\n}\n\n/**\n * Translates a string to the current locale.\n *\n * See the sprintf-js library [0] for specifics on the argument\n * parameterization format.\n *\n * [0]: https://github.com/alexei/sprintf.js\n */\nexport function gettext(string: string, ...args: FormatArg[]) {\n  const val: string = getClient().gettext(string);\n\n  if (args.length === 0) {\n    return mark(val);\n  }\n\n  // XXX(ts): It IS possible to use gettext in such a way that it will return a\n  // React.ReactNodeArray, however we currently rarely (if at all) use it in\n  // this way, and usually just expect strings back.\n  return mark(format(val, args) as string);\n}\n\n/**\n * Translates a singular and plural string to the current locale. Supports\n * argument parameterization, and will use the first argument as the counter to\n * determine which message to use.\n *\n * See the sprintf-js library [0] for specifics on the argument\n * parameterization format.\n *\n * [0]: https://github.com/alexei/sprintf.js\n */\nexport function ngettext(singular: string, plural: string, ...args: FormatArg[]) {\n  let countArg = 0;\n\n  if (args.length > 0) {\n    countArg = Math.abs(args[0] as number) || 0;\n\n    // `toLocaleString` will render `999` as `\"999\"` but `9999` as `\"9,999\"`. This means that any call with `tn` or `ngettext` cannot use `%d` in the codebase but has to use `%s`.\n    // This means a string is always being passed in as an argument, but `sprintf-js` implicitly coerces strings that can be parsed as integers into an integer.\n    // This would break under any locale that used different formatting and other undesirable behaviors.\n    if ((singular + plural).includes('%d')) {\n      // eslint-disable-next-line no-console\n      console.error(new Error('You should not use %d within tn(), use %s instead'));\n    } else {\n      args = [countArg.toLocaleString(), ...args.slice(1)];\n    }\n  }\n\n  // XXX(ts): See XXX in gettext.\n  return mark(format(getClient().ngettext(singular, plural, countArg), args) as string);\n}\n\n/**\n * special form of gettext where you can render nested react components in\n * template strings.\n *\n * ```jsx\n * gettextComponentTemplate('Welcome. Click [link:here]', {\n *   root: <p/>,\n *   link: <a href=\"#\" />,\n * });\n * ```\n *\n * The root string is always called \"root\", the rest is prefixed with the name\n * in the brackets\n *\n * You may recursively nest additional groups within the grouped string values.\n */\nexport function gettextComponentTemplate(template: string, components: ComponentMap) {\n  const tmpl = parseComponentTemplate(getClient().gettext(template));\n  return mark(renderTemplate(tmpl, components));\n}\n\n/**\n * Shorthand versions should primarily be used.\n */\nexport {gettext as t, gettextComponentTemplate as tct, ngettext as tn};\n","interface LocalStorage {\n  setItem(key: string, value: string): void;\n  getItem(key: string): string | null;\n  removeItem(key: string): void;\n}\n\nfunction createLocalStorage(): LocalStorage {\n  try {\n    const localStorage = window.localStorage;\n\n    const mod = 'sentry';\n    localStorage.setItem(mod, mod);\n    localStorage.removeItem(mod);\n\n    return {\n      setItem: localStorage.setItem.bind(localStorage),\n      getItem: localStorage.getItem.bind(localStorage),\n      removeItem: localStorage.removeItem.bind(localStorage),\n    } as LocalStorage;\n  } catch (e) {\n    return {\n      setItem() {\n        return;\n      },\n      // Returns null if key doesn't exist:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/getItem\n      getItem() {\n        return null;\n      },\n      removeItem() {\n        return null;\n      },\n    } as LocalStorage;\n  }\n}\n\nconst functions = createLocalStorage();\n\nexport default functions;\n","var map = {\n\t\"./bg.js\": [\n\t\t\"../node_modules/moment/locale/bg.js\",\n\t\t\"locale/bg\"\n\t],\n\t\"./cs.js\": [\n\t\t\"../node_modules/moment/locale/cs.js\",\n\t\t\"locale/cs\"\n\t],\n\t\"./de.js\": [\n\t\t\"../node_modules/moment/locale/de.js\",\n\t\t\"locale/de\"\n\t],\n\t\"./es.js\": [\n\t\t\"../node_modules/moment/locale/es.js\",\n\t\t\"locale/es\"\n\t],\n\t\"./fi.js\": [\n\t\t\"../node_modules/moment/locale/fi.js\",\n\t\t\"locale/fi\"\n\t],\n\t\"./fr.js\": [\n\t\t\"../node_modules/moment/locale/fr.js\",\n\t\t\"locale/fr\"\n\t],\n\t\"./it.js\": [\n\t\t\"../node_modules/moment/locale/it.js\",\n\t\t\"locale/it\"\n\t],\n\t\"./ja.js\": [\n\t\t\"../node_modules/moment/locale/ja.js\",\n\t\t\"locale/ja\"\n\t],\n\t\"./ru.js\": [\n\t\t\"../node_modules/moment/locale/ru.js\",\n\t\t\"locale/ru\"\n\t],\n\t\"./zh-cn.js\": [\n\t\t\"../node_modules/moment/locale/zh-cn.js\",\n\t\t\"locale/zh-cn\"\n\t],\n\t\"./zh-tw.js\": [\n\t\t\"../node_modules/moment/locale/zh-tw.js\",\n\t\t\"locale/zh-tw\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = \"../node_modules/moment/locale lazy recursive (bg|cs|de|en|es|fi|fr|it|ja|ru|zh-cn|zh-tw)\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./bg/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/bg/LC_MESSAGES/django.po\",\n\t\t\"locale/bg\"\n\t],\n\t\"./cs/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/cs/LC_MESSAGES/django.po\",\n\t\t\"locale/cs\"\n\t],\n\t\"./de/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/de/LC_MESSAGES/django.po\",\n\t\t\"locale/de\"\n\t],\n\t\"./en/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/en/LC_MESSAGES/django.po\",\n\t\t\"src_sentry_locale_en_LC_MESSAGES_django_po\"\n\t],\n\t\"./es/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/es/LC_MESSAGES/django.po\",\n\t\t\"locale/es\"\n\t],\n\t\"./fi/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/fi/LC_MESSAGES/django.po\",\n\t\t\"locale/fi\"\n\t],\n\t\"./fr/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/fr/LC_MESSAGES/django.po\",\n\t\t\"locale/fr\"\n\t],\n\t\"./it/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/it/LC_MESSAGES/django.po\",\n\t\t\"locale/it\"\n\t],\n\t\"./ja/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/ja/LC_MESSAGES/django.po\",\n\t\t\"locale/ja\"\n\t],\n\t\"./ru/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/ru/LC_MESSAGES/django.po\",\n\t\t\"locale/ru\"\n\t],\n\t\"./zh_CN/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/zh_CN/LC_MESSAGES/django.po\",\n\t\t\"locale/zh-cn\"\n\t],\n\t\"./zh_TW/LC_MESSAGES/django.po\": [\n\t\t\"../src/sentry/locale/zh_TW/LC_MESSAGES/django.po\",\n\t\t\"locale/zh-tw\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = \"../src/sentry/locale lazy recursive (bg|cs|de|en|es|fi|fr|it|ja|ru|zh_CN|zh_TW)\\\\/.*\\\\.po$\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}