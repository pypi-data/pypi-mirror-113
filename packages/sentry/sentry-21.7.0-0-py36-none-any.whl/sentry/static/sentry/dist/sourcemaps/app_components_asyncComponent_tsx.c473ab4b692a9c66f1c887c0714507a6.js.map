{"version":3,"sources":["webpack:///./app/components/asyncComponentSearchInput.tsx","webpack:///./app/views/permissionDenied.tsx","webpack:///./app/components/asyncComponent.tsx","webpack:///./app/components/loadingError.tsx","webpack:///./app/styles/organization.tsx","webpack:///./app/utils/getRouteStringFromRoutes.tsx","webpack:///./app/utils/withProject.tsx","webpack:///./app/views/routeError.tsx"],"names":["AsyncComponentSearchInput","query","busy","searchQuery","props","location","api","setState","requestPromise","url","includeAllArgs","method","data","jqXHR","state","onSuccess","onError","debounce","immediateQuery","debounceWait","evt","handleChange","target","value","updateRoute","onSearchSubmit","preventDefault","router","push","pathname","this","placeholder","children","className","defaultSearchBar","Form","onSubmit","handleSearch","onChange","handleInputChange","StyledLoadingIndicator","size","hideMessage","mini","undefined","React","t","LoadingIndicator","ReactRouter","ERROR_NAME","PermissionDenied","organization","project","routes","route","getRouteStringFromRoutes","Sentry","scope","setFingerprint","setExtra","features","access","Error","title","message","tct","link","href","Component","withRouter","withOrganization","withProject","wrapErrorHandling","component","fn","error","console","setTimeout","AsyncComponent","context","Client","remainingRequests","_measurement","hasMeasured","finished","shouldReload","reloadData","getDefaultState","fetchData","shouldReloadOnVisible","loading","document","hidden","extraState","endpoints","getEndpoints","length","clear","forEach","stateKey","endpoint","params","options","locationQuery","paginate","cursor","disableEntireQuery","request","success","_","handleRequestSuccess","allowError","handleError","bind","render","metric","name","reloadOnVisible","addEventListener","visibilityReloader","_newProps","_newContext","prevProps","prevContext","isRouterInContext","isLocationInProps","currentLocation","prevLocation","routeString","start","isEqual","search","remountComponent","removeEventListener","reloading","errors","_resp","_args","initialRequest","prevState","getResponseHeader","markShouldMeasure","onLoadAllEndpointsSuccess","onRequestSuccess","args","responseText","category","level","onRequestError","warn","getEndpoint","getEndpointParams","firstEndpoint","stateKeyOrDefault","urlOrDefault","renderError","disableLog","disableReport","unauthorizedErrors","Object","values","find","resp","status","permissionErrors","shouldLogSentry","shouldRenderBadRequests","badRequests","filter","responseJSON","detail","map","join","disableLogSentry","shouldRenderLoading","renderLoading","renderBody","renderComponent","PropTypes","LoadingError","onRetry","StyledAlert","type","Content","onClick","priority","Alert","Panel","space","PageContent","p","theme","breakpoints","PageHeader","HeaderTitle","headerFontSize","textColor","Array","isArray","routesWithPaths","path","lastAbsolutePathIndex","findLastIndex","startsWith","slice","WrappedComponent","getDisplayName","SentryTypes","RouteError","enrichScopeContext","e","_timeout","window","clearTimeout","querySelector","remove","icon","Heading","adblockSuspected"],"mappings":"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","file":"chunks/app_components_asyncComponent_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport * as ReactRouter from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'app/api';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {t} from 'app/locale';\nimport Input from 'app/views/settings/components/forms/controls/input';\n\ntype RenderProps = {\n  defaultSearchBar: React.ReactNode;\n  busy: boolean;\n  handleChange: (value: string) => void;\n  value: string;\n};\n\ntype DefaultProps = {\n  /**\n   * Placeholder text in the search input\n   */\n  placeholder: string;\n  /**\n   * Time in milliseconds to wait before firing off the request\n   */\n  debounceWait?: number; // optional, otherwise app/views/settings/organizationMembers/organizationMembersList.tsx L:191 is not happy\n};\n\ntype Props = ReactRouter.WithRouterProps &\n  DefaultProps & {\n    api: Client;\n    className?: string;\n    /**\n     * URL to make the search request to\n     */\n    url: string;\n    /**\n     * Updates URL with search query in the URL param: `query`\n     */\n    updateRoute?: boolean;\n\n    onSearchSubmit?: (query: string, event: React.FormEvent) => void;\n    onSuccess: (data: object, jqXHR: JQueryXHR | undefined) => void;\n    onError: () => void;\n\n    /**\n     * A render-prop child may be passed to handle custom rendering of the input.\n     */\n    children?: (otps: RenderProps) => React.ReactNode;\n  };\n\ntype State = {\n  query: string;\n  busy: boolean;\n};\n\n/**\n * This is a search input that can be easily used in AsyncComponent/Views.\n *\n * It probably doesn't make too much sense outside of an AsyncComponent atm.\n */\nclass AsyncComponentSearchInput extends React.Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    placeholder: t('Search...'),\n    debounceWait: 200,\n  };\n\n  state: State = {\n    query: '',\n    busy: false,\n  };\n\n  immediateQuery = async (searchQuery: string) => {\n    const {location, api} = this.props;\n    this.setState({busy: true});\n\n    try {\n      const [data, , jqXHR] = await api.requestPromise(`${this.props.url}`, {\n        includeAllArgs: true,\n        method: 'GET',\n        query: {...location.query, query: searchQuery},\n      });\n      // only update data if the request's query matches the current query\n      if (this.state.query === searchQuery) {\n        this.props.onSuccess(data, jqXHR);\n      }\n    } catch {\n      this.props.onError();\n    }\n\n    this.setState({busy: false});\n  };\n\n  query = debounce(this.immediateQuery, this.props.debounceWait);\n\n  handleChange = (query: string) => {\n    this.query(query);\n    this.setState({query});\n  };\n\n  handleInputChange = (evt: React.ChangeEvent<HTMLInputElement>) =>\n    this.handleChange(evt.target.value);\n\n  /**\n   * This is called when \"Enter\" (more specifically a form \"submit\" event) is pressed.\n   */\n  handleSearch = (evt: React.FormEvent<HTMLFormElement>) => {\n    const {updateRoute, onSearchSubmit} = this.props;\n    evt.preventDefault();\n\n    // Update the URL to reflect search term.\n    if (updateRoute) {\n      const {router, location} = this.props;\n      router.push({\n        pathname: location.pathname,\n        query: {\n          query: this.state.query,\n        },\n      });\n    }\n\n    if (typeof onSearchSubmit !== 'function') {\n      return;\n    }\n    onSearchSubmit(this.state.query, evt);\n  };\n\n  render() {\n    const {placeholder, children, className} = this.props;\n    const {busy, query} = this.state;\n\n    const defaultSearchBar = (\n      <Form onSubmit={this.handleSearch}>\n        <Input\n          value={query}\n          onChange={this.handleInputChange}\n          className={className}\n          placeholder={placeholder}\n        />\n        {busy && <StyledLoadingIndicator size={18} hideMessage mini />}\n      </Form>\n    );\n\n    return children === undefined\n      ? defaultSearchBar\n      : children({defaultSearchBar, busy, value: query, handleChange: this.handleChange});\n  }\n}\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  position: absolute;\n  right: 25px;\n  top: 50%;\n  transform: translateY(-13px);\n`;\n\nconst Form = styled('form')`\n  position: relative;\n`;\n\nexport default ReactRouter.withRouter(AsyncComponentSearchInput);\n","import {Component} from 'react';\nimport DocumentTitle from 'react-document-title';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport LoadingError from 'app/components/loadingError';\nimport {t, tct} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport {LightWeightOrganization, Project} from 'app/types';\nimport getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\n\nconst ERROR_NAME = 'Permission Denied';\n\ntype Props = WithRouterProps & {\n  organization: LightWeightOrganization;\n  project?: Project;\n};\n\nclass PermissionDenied extends Component<Props> {\n  componentDidMount() {\n    const {organization, project, routes} = this.props;\n\n    const route = getRouteStringFromRoutes(routes);\n    Sentry.withScope(scope => {\n      scope.setFingerprint([ERROR_NAME, route]);\n      scope.setExtra('route', route);\n      scope.setExtra('orgFeatures', (organization && organization.features) || []);\n      scope.setExtra('orgAccess', (organization && organization.access) || []);\n      scope.setExtra('projectFeatures', (project && project.features) || []);\n      Sentry.captureException(new Error(`${ERROR_NAME}${route ? ` : ${route}` : ''}`));\n    });\n  }\n\n  render() {\n    return (\n      <DocumentTitle title={t('Permission Denied')}>\n        <PageContent>\n          <LoadingError\n            message={tct(\n              `Your role does not have the necessary permissions to access this\n               resource, please read more about [link:organizational roles]`,\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/accounts/membership/\" />\n                ),\n              }\n            )}\n          />\n        </PageContent>\n      </DocumentTitle>\n    );\n  }\n}\n\nexport default withRouter(withOrganization(withProject(PermissionDenied)));\n","import * as React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {WithRouterProps} from 'react-router/lib/withRouter';\nimport * as Sentry from '@sentry/react';\nimport isEqual from 'lodash/isEqual';\nimport PropTypes from 'prop-types';\n\nimport {Client} from 'app/api';\nimport AsyncComponentSearchInput from 'app/components/asyncComponentSearchInput';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {t} from 'app/locale';\nimport {metric} from 'app/utils/analytics';\nimport getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';\nimport PermissionDenied from 'app/views/permissionDenied';\nimport RouteError from 'app/views/routeError';\n\ntype AsyncComponentProps = Partial<RouteComponentProps<{}, {}>>;\n\ntype AsyncComponentState = {\n  loading: boolean;\n  reloading: boolean;\n  error: boolean;\n  errors: Record<string, JQueryXHR>;\n  remainingRequests?: number;\n  [key: string]: any;\n};\n\ntype SearchInputProps = React.ComponentProps<typeof AsyncComponentSearchInput>;\n\ntype RenderSearchInputArgs = Omit<\n  SearchInputProps,\n  'api' | 'onSuccess' | 'onError' | 'url' | keyof WithRouterProps\n> & {\n  stateKey?: string;\n  url?: SearchInputProps['url'];\n};\n\n/**\n * Wraps methods on the AsyncComponent to catch errors and set the `error`\n * state on error.\n */\nfunction wrapErrorHandling<T extends any[], U>(\n  component: AsyncComponent,\n  fn: (...args: T) => U\n) {\n  return (...args: T): U | null => {\n    try {\n      return fn(...args);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n      setTimeout(() => {\n        throw error;\n      });\n      component.setState({error});\n      return null;\n    }\n  };\n}\n\nexport default class AsyncComponent<\n  P extends AsyncComponentProps = AsyncComponentProps,\n  S extends AsyncComponentState = AsyncComponentState\n> extends React.Component<P, S> {\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  // Override this flag to have the component reload it's state when the window\n  // becomes visible again. This will set the loading and reloading state, but\n  // will not render a loading state during reloading.\n  //\n  // eslint-disable-next-line react/sort-comp\n  reloadOnVisible = false;\n\n  // When enabling reloadOnVisible, this flag may be used to turn on and off\n  // the reloading. This is useful if your component only needs to reload when\n  // becoming visible during certain states.\n  //\n  // eslint-disable-next-line react/sort-comp\n  shouldReloadOnVisible = false;\n\n  // This affects how the component behaves when `remountComponent` is called\n  // By default, the component gets put back into a \"loading\" state when re-fetching data.\n  // If this is true, then when we fetch data, the original ready component remains mounted\n  // and it will need to handle any additional \"reloading\" states\n  shouldReload = false;\n\n  // should `renderError` render the `detail` attribute of a 400 error\n  shouldRenderBadRequests = false;\n\n  constructor(props: P, context: any) {\n    super(props, context);\n\n    this.fetchData = wrapErrorHandling(this, this.fetchData.bind(this));\n    this.render = wrapErrorHandling(this, this.render.bind(this));\n\n    this.state = this.getDefaultState() as Readonly<S>;\n\n    this._measurement = {\n      hasMeasured: false,\n    };\n    if (props.routes && props.routes) {\n      metric.mark({name: `async-component-${getRouteStringFromRoutes(props.routes)}`});\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.api = new Client();\n    this.fetchData();\n\n    if (this.reloadOnVisible) {\n      document.addEventListener('visibilitychange', this.visibilityReloader);\n    }\n  }\n\n  // Compatibility shim for child classes that call super on this hook.\n  UNSAFE_componentWillReceiveProps(_newProps: P, _newContext: any) {}\n\n  componentDidUpdate(prevProps: P, prevContext: any) {\n    const isRouterInContext = !!prevContext.router;\n    const isLocationInProps = prevProps.location !== undefined;\n\n    const currentLocation = isLocationInProps\n      ? this.props.location\n      : isRouterInContext\n      ? this.context.router.location\n      : null;\n    const prevLocation = isLocationInProps\n      ? prevProps.location\n      : isRouterInContext\n      ? prevContext.router.location\n      : null;\n\n    if (!(currentLocation && prevLocation)) {\n      return;\n    }\n\n    // Take a measurement from when this component is initially created until it finishes it's first\n    // set of API requests\n    if (\n      !this._measurement.hasMeasured &&\n      this._measurement.finished &&\n      this.props.routes\n    ) {\n      const routeString = getRouteStringFromRoutes(this.props.routes);\n      metric.measure({\n        name: 'app.component.async-component',\n        start: `async-component-${routeString}`,\n        data: {\n          route: routeString,\n          error: this._measurement.error,\n        },\n      });\n      this._measurement.hasMeasured = true;\n    }\n\n    // Re-fetch data when router params change.\n    if (\n      !isEqual(this.props.params, prevProps.params) ||\n      currentLocation.search !== prevLocation.search ||\n      currentLocation.state !== prevLocation.state\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    document.removeEventListener('visibilitychange', this.visibilityReloader);\n  }\n\n  api: Client = new Client();\n  private _measurement: any;\n\n  // XXX: cant call this getInitialState as React whines\n  getDefaultState(): AsyncComponentState {\n    const endpoints = this.getEndpoints();\n    const state = {\n      // has all data finished requesting?\n      loading: true,\n      // is the component reload\n      reloading: false,\n      // is there an error loading ANY data?\n      error: false,\n      errors: {},\n    };\n    endpoints.forEach(([stateKey, _endpoint]) => {\n      state[stateKey] = null;\n    });\n    return state;\n  }\n\n  // Check if we should measure render time for this component\n  markShouldMeasure = ({\n    remainingRequests,\n    error,\n  }: {remainingRequests?: number; error?: any} = {}) => {\n    if (!this._measurement.hasMeasured) {\n      this._measurement.finished = remainingRequests === 0;\n      this._measurement.error = error || this._measurement.error;\n    }\n  };\n\n  remountComponent = () => {\n    if (this.shouldReload) {\n      this.reloadData();\n    } else {\n      this.setState(this.getDefaultState(), this.fetchData);\n    }\n  };\n\n  visibilityReloader = () =>\n    this.shouldReloadOnVisible &&\n    !this.state.loading &&\n    !document.hidden &&\n    this.reloadData();\n\n  reloadData() {\n    this.fetchData({reloading: true});\n  }\n\n  fetchData = (extraState?: object) => {\n    const endpoints = this.getEndpoints();\n\n    if (!endpoints.length) {\n      this.setState({loading: false, error: false});\n      return;\n    }\n\n    // Cancel any in flight requests\n    this.api.clear();\n\n    this.setState({\n      loading: true,\n      error: false,\n      remainingRequests: endpoints.length,\n      ...extraState,\n    });\n\n    endpoints.forEach(([stateKey, endpoint, params, options]) => {\n      options = options || {};\n      // If you're using nested async components/views make sure to pass the\n      // props through so that the child component has access to props.location\n      const locationQuery = (this.props.location && this.props.location.query) || {};\n      let query = (params && params.query) || {};\n      // If paginate option then pass entire `query` object to API call\n      // It should only be expecting `query.cursor` for pagination\n      if ((options.paginate || locationQuery.cursor) && !options.disableEntireQuery) {\n        query = {...locationQuery, ...query};\n      }\n\n      this.api.request(endpoint, {\n        method: 'GET',\n        ...params,\n        query,\n        success: (data, _, jqXHR) => {\n          this.handleRequestSuccess({stateKey, data, jqXHR}, true);\n        },\n        error: error => {\n          // Allow endpoints to fail\n          // allowError can have side effects to handle the error\n          if (options.allowError && options.allowError(error)) {\n            error = null;\n          }\n          this.handleError(error, [stateKey, endpoint, params, options]);\n        },\n      });\n    });\n  };\n\n  onRequestSuccess(_resp /* {stateKey, data, jqXHR} */) {\n    // Allow children to implement this\n  }\n\n  onRequestError(_resp, _args) {\n    // Allow children to implement this\n  }\n\n  onLoadAllEndpointsSuccess() {\n    // Allow children to implement this\n  }\n\n  handleRequestSuccess({stateKey, data, jqXHR}, initialRequest?: boolean) {\n    this.setState(\n      prevState => {\n        const state = {\n          [stateKey]: data,\n          // TODO(billy): This currently fails if this request is retried by SudoModal\n          [`${stateKey}PageLinks`]: jqXHR && jqXHR.getResponseHeader('Link'),\n        };\n\n        if (initialRequest) {\n          state.remainingRequests = prevState.remainingRequests! - 1;\n          state.loading = prevState.remainingRequests! > 1;\n          state.reloading = prevState.reloading && state.loading;\n          this.markShouldMeasure({remainingRequests: state.remainingRequests});\n        }\n\n        return state;\n      },\n      () => {\n        // if everything is loaded and we don't have an error, call the callback\n        if (this.state.remainingRequests === 0 && !this.state.error) {\n          this.onLoadAllEndpointsSuccess();\n        }\n      }\n    );\n    this.onRequestSuccess({stateKey, data, jqXHR});\n  }\n\n  handleError(error, args) {\n    const [stateKey] = args;\n    if (error && error.responseText) {\n      Sentry.addBreadcrumb({\n        message: error.responseText,\n        category: 'xhr',\n        level: Sentry.Severity.Error,\n      });\n    }\n    this.setState(prevState => {\n      const loading = prevState.remainingRequests! > 1;\n      const state: AsyncComponentState = {\n        [stateKey]: null,\n        errors: {\n          ...prevState.errors,\n          [stateKey]: error,\n        },\n        error: prevState.error || !!error,\n        remainingRequests: prevState.remainingRequests! - 1,\n        loading,\n        reloading: prevState.reloading && loading,\n      };\n      this.markShouldMeasure({remainingRequests: state.remainingRequests, error: true});\n\n      return state;\n    });\n    this.onRequestError(error, args);\n  }\n\n  /**\n   * @deprecated use getEndpoints\n   */\n  getEndpointParams() {\n    // eslint-disable-next-line no-console\n    console.warn('getEndpointParams is deprecated');\n    return {};\n  }\n\n  /**\n   * @deprecated use getEndpoints\n   */\n  getEndpoint() {\n    // eslint-disable-next-line no-console\n    console.warn('getEndpoint is deprecated');\n    return null;\n  }\n\n  /**\n   * Return a list of endpoint queries to make.\n   *\n   * return [\n   *   ['stateKeyName', '/endpoint/', {optional: 'query params'}, {options}]\n   * ]\n   */\n  getEndpoints(): Array<[string, string, any?, any?]> {\n    const endpoint = this.getEndpoint();\n    if (!endpoint) {\n      return [];\n    }\n    return [['data', endpoint, this.getEndpointParams()]];\n  }\n\n  renderSearchInput({stateKey, url, ...props}: RenderSearchInputArgs) {\n    const [firstEndpoint] = this.getEndpoints() || [null];\n    const stateKeyOrDefault = stateKey || (firstEndpoint && firstEndpoint[0]);\n    const urlOrDefault = url || (firstEndpoint && firstEndpoint[1]);\n    return (\n      <AsyncComponentSearchInput\n        url={urlOrDefault}\n        {...props}\n        api={this.api}\n        onSuccess={(data, jqXHR) => {\n          this.handleRequestSuccess({stateKey: stateKeyOrDefault, data, jqXHR});\n        }}\n        onError={() => {\n          this.renderError(new Error('Error with AsyncComponentSearchInput'));\n        }}\n      />\n    );\n  }\n\n  renderLoading(): React.ReactNode {\n    return <LoadingIndicator />;\n  }\n\n  renderError(error?: Error, disableLog = false, disableReport = false): React.ReactNode {\n    const {errors} = this.state;\n\n    // 401s are captured by SudoModal, but may be passed back to AsyncComponent if they close the modal without identifying\n    const unauthorizedErrors = Object.values(errors).find(\n      resp => resp && resp.status === 401\n    );\n\n    // Look through endpoint results to see if we had any 403s, means their role can not access resource\n    const permissionErrors = Object.values(errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    // If all error responses have status code === 0, then show error message but don't\n    // log it to sentry\n    const shouldLogSentry =\n      !!Object.values(errors).find(resp => resp && resp.status !== 0) || disableLog;\n\n    if (unauthorizedErrors) {\n      return (\n        <LoadingError message={t('You are not authorized to access this resource.')} />\n      );\n    }\n\n    if (permissionErrors) {\n      return <PermissionDenied />;\n    }\n\n    if (this.shouldRenderBadRequests) {\n      const badRequests = Object.values(errors)\n        .filter(\n          resp =>\n            resp && resp.status === 400 && resp.responseJSON && resp.responseJSON.detail\n        )\n        .map(resp => resp.responseJSON.detail);\n\n      if (badRequests.length) {\n        return <LoadingError message={badRequests.join('\\n')} />;\n      }\n    }\n\n    return (\n      <RouteError\n        error={error}\n        disableLogSentry={!shouldLogSentry}\n        disableReport={disableReport}\n      />\n    );\n  }\n\n  shouldRenderLoading() {\n    const {loading, reloading} = this.state;\n    return loading && (!this.shouldReload || !reloading);\n  }\n\n  renderComponent() {\n    return this.shouldRenderLoading()\n      ? this.renderLoading()\n      : this.state.error\n      ? this.renderError(new Error('Unable to load all required endpoints'))\n      : this.renderBody();\n  }\n\n  /**\n   * Renders once all endpoints have been loaded\n   */\n  renderBody(): React.ReactNode {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  render() {\n    return this.renderComponent();\n  }\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport {Panel} from 'app/components/panels';\nimport {IconInfo} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\n\ntype DefaultProps = {\n  message: React.ReactNode;\n};\n\ntype Props = DefaultProps & {\n  onRetry?: () => void;\n};\n\n/**\n * Renders an Alert box of type \"error\". Renders a \"Retry\" button only if a `onRetry` callback is defined.\n */\nclass LoadingError extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    message: t('There was an error loading data.'),\n  };\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    const {message, onRetry} = this.props;\n    return (\n      <StyledAlert type=\"error\">\n        <Content>\n          <IconInfo size=\"lg\" />\n          <div data-test-id=\"loading-error-message\">{message}</div>\n          {onRetry && (\n            <Button onClick={onRetry} type=\"button\" priority=\"default\" size=\"small\">\n              {t('Retry')}\n            </Button>\n          )}\n        </Content>\n      </StyledAlert>\n    );\n  }\n}\n\nexport default LoadingError;\n\nconst StyledAlert = styled(Alert)`\n  ${/* sc-selector */ Panel} & {\n    border-radius: 0;\n    border-width: 1px 0;\n  }\n`;\n\nconst Content = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: min-content auto max-content;\n  align-items: center;\n`;\n","// Shared styles for the new org level pages with global project/env/time selection\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\n\nexport const PageContent = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: ${space(2)} ${space(4)} ${space(3)};\n  margin-bottom: -20px; /* <footer> has margin-top: 20px; */\n\n  /* No footer at smallest breakpoint */\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const PageHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${space(2)};\n  min-height: 32px;\n`;\n\nexport const HeaderTitle = styled('h4')`\n  flex: 1;\n  font-size: ${p => p.theme.headerFontSize};\n  line-height: ${p => p.theme.headerFontSize};\n  font-weight: normal;\n  color: ${p => p.theme.textColor};\n  margin: 0;\n`;\n","import {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\ntype RouteWithPath = Omit<PlainRoute, 'path'> & Required<Pick<PlainRoute, 'path'>>;\n\n/**\n * Creates a route string from an array of `routes` from react-router\n *\n * It will look for the last route path that begins with a `/` and\n * concatenate all of the following routes. Skips any routes without a path\n *\n * @param {Array<{}>} routes An array of route objects from react-router\n * @return String Returns a route path\n */\nexport default function getRouteStringFromRoutes(routes?: PlainRoute[]): string {\n  if (!Array.isArray(routes)) {\n    return '';\n  }\n\n  const routesWithPaths = routes.filter((route): route is RouteWithPath => !!route.path);\n\n  const lastAbsolutePathIndex = findLastIndex(routesWithPaths, ({path}) =>\n    path.startsWith('/')\n  );\n\n  return routesWithPaths\n    .slice(lastAbsolutePathIndex)\n    .filter(({path}) => !!path)\n    .map(({path}) => path)\n    .join('');\n}\n","import * as React from 'react';\n\nimport SentryTypes from 'app/sentryTypes';\nimport {Project} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\n\ntype InjectedProjectProps = {\n  project?: Project;\n};\n\n/**\n * Currently wraps component with project from context\n */\nconst withProject = <P extends InjectedProjectProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends React.Component<\n    Omit<P, keyof InjectedProjectProps> & Partial<InjectedProjectProps>\n  > {\n    static displayName = `withProject(${getDisplayName(WrappedComponent)})`;\n    static contextTypes = {\n      project: SentryTypes.Project,\n    };\n\n    render() {\n      const {project, ...props} = this.props;\n      return (\n        <WrappedComponent\n          {...({project: project ?? this.context.project, ...props} as P)}\n        />\n      );\n    }\n  };\n\nexport default withProject;\n","import {Component} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {LightWeightOrganization, Project} from 'app/types';\nimport getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\n\ntype Props = WithRouterProps & {\n  organization: LightWeightOrganization;\n  error: Error | undefined;\n  /**\n   * Disable logging to Sentry\n   */\n  disableLogSentry?: boolean;\n  disableReport?: boolean;\n  project?: Project;\n};\n\nclass RouteError extends Component<Props> {\n  UNSAFE_componentWillMount() {\n    const {error} = this.props;\n    const {disableLogSentry, disableReport, organization, project, routes} = this.props;\n\n    if (disableLogSentry) {\n      return;\n    }\n    if (!error) {\n      return;\n    }\n\n    const route = getRouteStringFromRoutes(routes);\n    const enrichScopeContext = scope => {\n      scope.setExtra('route', route);\n      scope.setExtra('orgFeatures', (organization && organization.features) || []);\n      scope.setExtra('orgAccess', (organization && organization.access) || []);\n      scope.setExtra('projectFeatures', (project && project.features) || []);\n      return scope;\n    };\n\n    if (route) {\n      /**\n       * Unexpectedly, error.message would sometimes not have a setter property, causing another exception to be thrown,\n       * and losing the original error in the process. Wrapping the mutation in a try-catch in an attempt to preserve\n       * the original error for logging.\n       * See https://github.com/getsentry/sentry/issues/16314 for more details.\n       */\n      try {\n        error.message = `${error.message}: ${route}`;\n      } catch (e) {\n        Sentry.withScope(scope => {\n          enrichScopeContext(scope);\n          Sentry.captureException(e);\n        });\n      }\n    }\n    // TODO(dcramer): show something in addition to embed (that contains it?)\n    // throw this in a timeout so if it errors we dont fall over\n    this._timeout = window.setTimeout(() => {\n      Sentry.withScope(scope => {\n        enrichScopeContext(scope);\n        Sentry.captureException(error);\n      });\n\n      if (!disableReport) {\n        Sentry.showReportDialog();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      window.clearTimeout(this._timeout);\n    }\n    document.querySelector('.sentry-error-embed-wrapper')?.remove();\n  }\n\n  private _timeout: undefined | number;\n\n  render() {\n    // TODO(dcramer): show additional resource links\n    return (\n      <Alert icon={<IconWarning size=\"md\" />} type=\"error\">\n        <Heading>\n          <span>{t('Oops! Something went wrong')}</span>\n        </Heading>\n        <p>\n          {t(`\n          It looks like you've hit an issue in our client application. Don't worry though!\n          We use Sentry to monitor Sentry and it's likely we're already looking into this!\n          `)}\n        </p>\n        <p>{t(\"If you're daring, you may want to try the following:\")}</p>\n        <ul>\n          {window && window.adblockSuspected && (\n            <li>\n              {t(\n                \"We detected something AdBlock-like. Try disabling it, as it's known to cause issues.\"\n              )}\n            </li>\n          )}\n          <li>\n            {tct(`Give it a few seconds and [link:reload the page].`, {\n              link: (\n                <a\n                  onClick={() => {\n                    window.location.href = window.location.href;\n                  }}\n                />\n              ),\n            })}\n          </li>\n          <li>\n            {tct(`If all else fails, [link:contact us] with more details.`, {\n              link: <a href=\"https://github.com/getsentry/sentry/issues/new/choose\" />,\n            })}\n          </li>\n        </ul>\n      </Alert>\n    );\n  }\n}\n\nconst Heading = styled('h3')`\n  display: flex;\n  align-items: center;\n\n  font-size: ${p => p.theme.headerFontSize};\n  font-weight: normal;\n\n  margin-bottom: ${space(1.5)};\n`;\n\nexport default withRouter(withOrganization(withProject(RouteError)));\nexport {RouteError};\n"],"sourceRoot":""}