# syntax=docker/dockerfile:1.2

FROM ubuntu:18.04 AS base_ext
LABEL Pool Server
# 0.2-3 M. Huang <mhuang@nao.cas.cn>
# 0.1 yuxin<syx1026@qq.com>
#ARG DEBIAN_FRONTEND=noninteractive
#ENV TZ=Etc/UTC
RUN apt-get update \
&& apt-get install -y apt-utils inetutils-ping curl net-tools sudo \
&& apt-get install -y nano \
&& apt-get install -y git python3-pip apache2 libapache2-mod-wsgi-py3

# rebuild mark
ARG re=rebuild

# setup env
# can be modified at run time

# setup user
ARG USR=apache
ARG UHOME=/home/${USR}
RUN groupadd ${USR} && useradd -g ${USR} ${USR} -m --home=${UHOME} -G sudo \
&& mkdir -p ${UHOME}/.config \
&& /bin/echo -e '\n'${USR} ALL = NOPASSWD: ALL >> /etc/sudoers

WORKDIR ${UHOME}
ENV PATH="${UHOME}/.local/bin:$PATH"

# setup config files
COPY fdi/pns/config.py .config/pnslocal.py
COPY fdi/pns/resources/httppool_server.conf /etc/apache2/sites-available/httppool_server.conf
ARG PROJ_DIR=/var/www/httppool_server
RUN mkdir -p ${PROJ_DIR}/data \
&& echo export APACHE_RUN_USER=${USR} >> /etc/apache2/envvars \
&& echo export APACHE_RUN_GROUP=${USR} >> /etc/apache2/envvars \
&& mkdir -p /var/log/apache2 /var/run/apache2 \
&& touch /var/log/apache2/error-ps.log \
&& touch /var/log/apache2/access-ps.log \
&& ln -s /var/log/apache2/error-ps.log . \
&& ln -s /var/log/apache2/error.log . \
&& ln -s /var/log/apache2/access-ps.log . \
&& ln -s /var/log/apache2/access.log . \
&& ln -s /etc/apache2/sites-available/httppool_server.conf . \
&& ln -s /etc/apache2/apache2.conf . \
&& ln -s /etc/apache2/ports.conf .

#RUN echo WSGIRestrictEmbedded On >> /etc/apache2/apache2.conf

# config software
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0 \
&& python3 -m pip install pip -U

# convinience aliases
COPY fdi/pns/resources/profile .
COPY fdi/pns/resources/httppool_server.wsgi ${PROJ_DIR}/
RUN cat profile >> .bashrc && rm profile \
&& chmod 755 ${PROJ_DIR}/httppool_server.wsgi \
&& ln -s  ${PROJ_DIR}/httppool_server.wsgi .

# Configure permission
RUN for i in  /var/log/apache2 /var/run/lock/ /var/run/apache2 ${PROJ_DIR} ${UHOME}/; \
do chown -R ${USR}:${USR} $i; echo $i; done \
&& chgrp ${USR} /etc/apache2 /etc/apache2/sites-available \
&& chmod g+w /etc/apache2 /etc/apache2/sites-available


# If install fdi repo, instead of package
# make dir for fdi.
ENV PKGS_DIR=${UHOME}
RUN mkdir -p ${PKGS_DIR} && chown ${USR}:${USR} ${PKGS_DIR}

# Run as user
USER ${USR}

# install and test fdi
ARG fd=rebuild

# If install fdi repo, instead of package
WORKDIR ${PKGS_DIR}
#RUN git clone --depth 10 -b develop http://mercury.bao.ac.cn:9006/mh/fdi.git
# from local repo
ARG PKG=fdi
COPY --chown=${USR}:${USR} ./ tmp/
RUN git clone --depth 20 -b develop  file://$PWD/tmp ${PKG}
WORKDIR ${PKGS_DIR}/${PKG}/
RUN make install EXT="[DEV,SERV]" I="--user"

# If installing fdi package
# no [DEV] needed
#RUN python3 -m pip install http://mercury.bao.ac.cn:9006/mh/fdi/-/archive/develop/fdi-develop.tar.gz#egg=fdi[SERV] --user
#RUN python3 -m pip install fdi[SERV]

WORKDIR ${UHOME}

# httppool_server_entrypoint.sh is used for replacing apache listen ports and configurations of httppool_server.
USER root
COPY fdi/pns/resources/httppool_server_entrypoint.sh .
RUN chmod 755 ./httppool_server_entrypoint.sh


USER ${USR}
# update ~/.config/pnslocal.py so test can be run with correct setting
RUN --mount=type=secret,id=envs sudo cp /run/secrets/envs . \
&& sudo chown ${USR} envs \
&& cat ./envs \
&& for i in `cat ./envs`; do export $i; done \
&& ./httppool_server_entrypoint.sh no-run


WORKDIR ${PKGS_DIR}/${PKG}/
RUN make test \
&& rm -rf ../tmp

WORKDIR ${UHOME}

RUN /bin/ls -la; \
date > build

ENTRYPOINT  ["/home/apache/httppool_server_entrypoint.sh"]
#, "2>&1", "|", "tee", "-a", "/home/apache/log"]

