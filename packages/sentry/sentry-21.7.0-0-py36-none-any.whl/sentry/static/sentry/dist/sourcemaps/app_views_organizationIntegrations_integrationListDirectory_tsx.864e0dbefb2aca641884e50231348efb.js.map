{"version":3,"sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/createFuzzySearch.tsx","webpack:///./app/views/organizationIntegrations/integrationRow.tsx","webpack:///./app/views/organizationIntegrations/integrationListDirectory.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx"],"names":["SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","loadFuzzySearch","createFuzzySearch","objects","options","keys","Error","Fuse","default","opts","DEFAULT_FUSE_OPTIONS","urlMap","plugin","firstParty","sentryApp","documentIntegration","IntegrationRow","props","organization","type","slug","displayName","status","publishStatus","configurations","categories","alertText","baseUrl","PanelRow","noPadding","FlexContainer","size","pluginId","Container","IntegrationName","to","IntegrationDetails","LearnMore","t","PublishStatus","StyledLink","InternalContainer","map","category","CategoryTag","startCase","priority","AlertContainer","icon","ResolveNowButton","href","onClick","trackIntegrationEvent","integration_type","convertIntegrationTypeToSnakeCase","integration","PanelItem","space","Link","p","theme","gray300","gray200","success","purple200","gray100","white","gray500","Button","subText","fuseOptions","threshold","location","distance","includeScore","IntegrationListDirectory","app","state","appInstalls","find","i","POPULARITY_WEIGHT","a","b","localeCompare","weightA","getPopularityWeight","getInstallValue","debounce","search","numResults","view","search_term","num_results","queryString","selectedCategory","Array","isArray","searchInput","searchString","undefined","browserHistory","pathname","fuzzy","list","displayedList","searchResults","sortIntegrations","item","filter","getCategoriesForIntegration","includes","setState","value","updateQueryString","result","updateDisplayedList","debouncedTrackIntegrationSearch","length","provider","integrations","key","name","isLegacy","isHidden","projectList","id","getSentryAppInstallStatus","getAppInstall","isSentryApp","renderSentryApp","isPlugin","renderPlugin","isDocumentIntegration","renderDocumentIntegration","renderProvider","this","publishedApps","orgOwnedApps","extraApp","plugins","published","push","orgOwned","combined","concat","providers","Object","values","documentIntegrations","getFilterParameters","trackPageViewed","integrationsInstalled","Set","forEach","add","integrations_installed","startSession","orgId","params","baseEndpoints","query","includeConfig","extraAppSlug","URLSearchParams","get","groupBy","unmigratableRepos","repo","split","config","install","sort","diffWeight","sortByInstalled","diffPop","sortByPopularity","sortByName","_","prevState","createSearch","categoryList","uniq","flatten","Fragment","hideHeader","action","ActionContainer","onChange","onCategorySelect","choices","handleSearchChange","placeholder","width","access","renderIntegration","EmptyResultsContainer","EmptyResultsBody","tct","searchTerm","EmptyResultsBodyBold","link","AsyncComponent","withOrganization","PermissionAlert","hasAccess"],"mappings":"2bAWA,SAASA,EAAT,GAA6E,IAA/CC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,SAiBnDC,EAfCH,GAAYC,EAIbD,GAAWC,EACb,UAAUF,EAAV,cAAqBC,EAArB,cAAkCC,GAGhCD,EACF,UAAUD,EAAV,cAAqBC,GAGvB,UAAUD,EAAV,cAAqBE,GAXZF,EAgBX,OACE,QAAC,IAAD,CAAeA,MAAK,UAAKI,EAAL,aAApB,SACGD,IArBEJ,E,kCA0BT,O,ukDCnCO,SAASM,IACd,OAAO,qGAGF,SAAeC,EAAtB,oC,wCAAO,WAGLC,EAAgBC,GAHX,8EAIAA,EAAQC,KAJR,sBAKG,IAAIC,MAAM,qCALb,uBAQyBL,IARzB,uBAQWM,EARX,EAQEC,QACDC,EATD,OAUAC,MACAN,GAXA,kBAaE,IAAIG,EAAKJ,EAASM,IAbpB,4C,m6ICyBP,IAAME,GAAS,CACbC,OAAQ,UACRC,WAAY,eACZC,UAAW,cACXC,oBAAqB,yBAGjBC,GAAiB,SAACC,GACtB,IACEC,EASED,EATFC,aACAC,EAQEF,EARFE,KACAC,EAOEH,EAPFG,KACAC,EAMEJ,EANFI,YACAC,EAKEL,EALFK,OACAC,EAIEN,EAJFM,cACAC,EAGEP,EAHFO,eACAC,EAEER,EAFFQ,WACAC,EACET,EADFS,UAGIC,EACc,aAAlBJ,EAAA,oBACiBL,EAAaE,KAD9B,+BACyDA,EADzD,yBAEiBF,EAAaE,KAF9B,YAEsCT,GAAOQ,GAF7C,YAEsDC,EAFtD,KAwBF,OACE,QAACQ,GAAD,CAAUC,WAAS,EAAC,eAAcT,EAAlC,WACE,QAACU,GAAD,YACE,QAAC,KAAD,CAAYC,KAAM,GAAIC,SAAUZ,KAChC,QAACa,GAAD,YACE,QAACC,GAAD,CAAiBC,GAAIR,EAArB,SAA+BN,KAC/B,QAACe,GAAD,WAZFd,GACK,QAAC,IAAD,CAAmBA,OAAQA,KAE7B,QAACe,GAAD,CAAWF,GAAIR,EAAf,UAAyBW,OAAE,gBAhBrB,cAATnB,EACuB,cAAlBI,IAAiC,QAACgB,GAAD,CAAejB,OAAQC,IAG1DC,EAAiB,GACtB,QAACgB,GAAD,CAAYL,GAAE,UAAKR,EAAL,uBAAd,mBAAqDH,EAArD,yBACEA,EAAiB,EAAI,IAAM,MAE3B,YAsBA,QAACiB,GAAD,UACGhB,aADH,EACGA,EAAYiB,KAAI,SAAAC,GAAQ,OACvB,QAACC,GAAD,CAEED,SAAUE,IAAUF,GACpBG,SAAUH,IAAapB,GAFlBoB,WAOZjB,IACC,QAACqB,GAAD,WACE,QAAC,IAAD,CAAO5B,KAAK,UAAU6B,MAAM,QAAC,KAAD,CAAajB,KAAK,OAA9C,WACE,yBAAOL,KACP,QAACuB,GAAD,CACEC,KAAI,UAAKvB,EAAL,sDACJI,KAAK,SACLoB,QAAS,kBACPC,QACE,mCACA,CACEC,kBAAkBC,QAAkCnC,GACpDoC,YAAanC,GAEfF,IAVN,UAcGoB,OAAE,0BA7EXtB,G,6BAsFN,IAAMY,IAAW,OAAO4B,KAAP,sBAAH,gDAIR1B,IAAgB,OAAO,MAAP,sBAAH,4CAGN2B,OAAM,GAHA,KAMbhB,IAAoB,OAAOX,GAAP,qBAAH,cACR2B,OAAM,GADE,KAIjBxB,IAAY,OAAO,MAAP,qBAAH,iDAKTC,IAAkB,OAAOwB,IAAP,qBAAH,4CAIftB,IAAqB,OAAO,MAAP,qBAAH,yFAOlBI,IAAa,OAAOkB,IAAP,qBAAH,UACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UADR,gCAIH,SAAAF,GAAC,OAAIA,EAAEC,MAAME,UAJV,kBAKIL,OAAM,KALV,yBAUVpB,IAAY,OAAOqB,IAAP,qBAAH,UACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UADT,KAMTtB,IAAgB,QAAO,gBAAEjB,EAAF,EAAEA,OAAWL,GAAb,mBAC3B,qBAASA,GAAT,cAAiBqB,OAAE,GAAD,OAAIhB,SADF,qBAAH,UAGR,SAACL,GAAD,MACU,cAAjBA,EAAMK,OAAyBL,EAAM2C,MAAMG,QAAU9C,EAAM2C,MAAMC,UAJlD,oCAMDJ,OAAM,KANL,0DAUN,SAAAE,GAAC,OAAIA,EAAEC,MAAME,UAVP,kBAWCL,OAAM,KAXP,yBAiBbb,IAAc,QAClB,cACEE,SADF,IAEEH,EAFF,EAEEA,SACGgB,GAHL,mBAQM,qBAASA,GAAT,aAAahB,OATD,qBAAH,gEAcD,SAAAgB,GAAC,OAAKA,EAAEb,SAAWa,EAAEC,MAAMI,UAAYL,EAAEC,MAAMK,UAd9C,kCAgBFR,OAAM,KAhBJ,kBAiBCA,OAAM,GAjBP,iBAkBAA,OAAM,GAlBN,6BAoBN,SAAAE,GAAC,OAAKA,EAAEb,SAAWa,EAAEC,MAAMM,MAAQP,EAAEC,MAAMO,UApBrC,KAuBXlB,IAAmB,OAAOmB,KAAP,qBAAH,UACX,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,UADF,iBAKhBtB,IAAiB,OAAO,MAAP,qBAAH,gBACHU,OAAM,GADH,cAIpB,M,ykBChLA,IAAMa,GAAc,CAClBC,UAAW,GACXC,SAAU,EACVC,SAAU,IACVC,cAAc,EACdrE,KAAM,CAAC,OAAQ,MAAO,OAAQ,OAyBnBsE,GAAb,iC,IAAA,G,EAAA,E,gaAAA,wLAMiB,IANjB,qCAOoB,IAPpB,2CAQ0B,IAR1B,mCA6HkB,SAACC,GAAD,uBACd,EAAKC,MAAMC,mBADG,aACd,EAAwBC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,IAAIxD,OAASwD,EAAIxD,YA9HzD,yCAuJwB,SAACmC,GAAD,uBACpB0B,KAAkB1B,EAAYnC,aADV,QACmB,MAxJ3C,gCA0Je,SAAC8D,EAA0BC,GAA3B,OACXD,EAAE9D,KAAKgE,cAAcD,EAAE/D,UA3J3B,sCA6JqB,SAAC8D,EAA0BC,GAC5C,IAAME,EAAU,EAAKC,oBAAoBJ,GAEzC,OADgB,EAAKI,oBAAoBH,GACxBE,MAhKrB,qCAmKoB,SAACH,EAA0BC,GAA3B,OAChB,EAAKI,gBAAgBJ,GAAK,EAAKI,gBAAgBL,OApKnD,oDAoMoCM,KAAS,SAACC,EAAgBC,IAC1DtC,QACE,uCACA,CACEuC,KAAM,yBACNC,YAAaH,EACbI,YAAaH,GAEf,EAAKzE,MAAMC,gBA9M4B,OAE7C,yCAmNwB,WACpB,MAA2B4E,QAAkB,EAAK7E,MAAMuD,SAASiB,QAA1D9C,EAAP,EAAOA,SAAU8C,EAAjB,EAAiBA,OAEXM,EAAmBC,MAAMC,QAAQtD,GAAYA,EAAS,GAAKA,GAAY,GAG7E,MAAO,CAACuD,YAFYF,MAAMC,QAAQR,GAAUA,EAAO,GAAKA,GAAU,GAE7CM,wBAzNzB,uCA+NsB,WAClB,MAAwC,EAAKlB,MAAtCqB,EAAP,EAAOA,YAAaH,EAApB,EAAoBA,iBAEdI,EAAeL,YAAA,SAChBA,QAAkB,EAAK7E,MAAMuD,SAASiB,SADtB,IAEnBA,OAAQS,QAA4BE,EACpCzD,SAAUoD,QAAsCK,KAGlDC,yBAAuB,CACrBC,SAAU,EAAKrF,MAAMuD,SAAS8B,SAC9Bb,OAAQU,EAAe,IAAH,OAAOA,QAAiBC,QA1OlD,yCAiPwB,WACpB,MAAqD,EAAKvB,MAAnD0B,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMN,EAApB,EAAoBA,YAAaH,EAAjC,EAAiCA,iBAE7BU,EAAgBD,EAEpB,GAAIN,GAAeK,EAAO,CACxB,IAAMG,EAAgBH,EAAMd,OAAOS,GACnCO,EAAgB,EAAKE,iBAAiBD,EAAchE,KAAI,SAAAsC,GAAC,OAAIA,EAAE4B,SAWjE,OARIb,IACFU,EAAgBA,EAAcI,QAAO,SAAAtD,GAAW,OAC9CuD,QAA4BvD,GAAawD,SAAShB,OAItD,EAAKiB,SAAS,CAACP,kBAERA,MAnQX,0EAsQuB,WAAOQ,GAAP,iEACnB,EAAKD,SAAS,CAACd,YAAae,IAAQ,WAClC,EAAKC,oBACL,IAAMC,EAAS,EAAKC,sBAChBH,GACF,EAAKI,gCAAgCJ,EAAOE,EAAOG,WALpC,2CAtQvB,8FAgRqB,YAAwC,IAA/B3E,EAA+B,EAAtCsE,MACnB,EAAKD,SAAS,CAACjB,iBAAkBpD,IAAW,WAC1C,EAAKuE,oBACL,EAAKE,sBAEDzE,IACFS,QACE,2CACA,CACEuC,KAAM,yBACNhD,YAEF,EAAK1B,MAAMC,qBA5RrB,oCAmSmB,SAACqG,GAAkC,QAC3CrG,EAAgB,EAAKD,MAArBC,aAEDsG,EAAY,oBAChB,EAAK3C,MAAM2C,oBADK,aAChB,EAAyBX,QAAO,SAAA7B,GAAC,OAAIA,EAAEuC,SAASE,MAAQF,EAASE,cADjD,QACyD,GAE3E,OACE,QAAC,GAAD,CAEE,eAAa,kBACbvG,aAAcA,EACdC,KAAK,aACLC,KAAMmG,EAASnG,KACfC,YAAakG,EAASG,KACtBpG,OAAQkG,EAAaF,OAAS,YAAc,gBAC5C/F,cAAc,YACdC,eAAgBgG,EAAaF,OAC7B7F,YAAYqF,QAA4BS,IAV1C,cACcA,EAASE,UA3S7B,kCAyTiB,SAAC7G,GACd,IAAOM,EAAgB,EAAKD,MAArBC,aAEDyG,EAAW/G,EAAOgH,SAClBvG,EAAc,GAAH,OAAMT,EAAO8G,KAAb,YAAqBC,EAAW,WAAa,IAE9D,OAAIA,IAAa/G,EAAOiH,YAAYP,OAC3B,MAGP,QAAC,GAAD,CAEE,eAAa,kBACbpG,aAAcA,EACdC,KAAK,SACLC,KAAMR,EAAOQ,KACbC,YAAaA,EACbC,OAAQV,EAAOiH,YAAYP,OAAS,YAAc,gBAClD/F,cAAc,YACdC,eAAgBZ,EAAOiH,YAAYP,OACnC7F,YAAYqF,QAA4BlG,IAV1C,qBACqBA,EAAOkH,SApUlC,qCAmVoB,SAAClD,GACjB,IAAO1D,EAAgB,EAAKD,MAArBC,aACDI,GAASyG,QAA0B,EAAKC,cAAcpD,IACtDnD,GAAaqF,QAA4BlC,GAE/C,OACE,QAAC,GAAD,CAEE,eAAa,kBACb1D,aAAcA,EACdC,KAAK,YACLC,KAAMwD,EAAIxD,KACVC,YAAauD,EAAI8C,KACjBpG,OAAQA,EACRC,cAAeqD,EAAItD,OACnBE,eAAgB,EAChBC,WAAYA,GAVd,yBACyBmD,EAAIxD,WA1VnC,+CAwW8B,SAACmC,GAC3B,IAAOrC,EAAgB,EAAKD,MAArBC,aACP,OACE,QAAC,GAAD,CAEEA,aAAcA,EACdC,KAAK,sBACLC,KAAMmC,EAAYnC,KAClBC,YAAakC,EAAYmE,KACzBnG,cAAc,YACdC,eAAgB,EAChBC,YAAYqF,QAA4BvD,IAR1C,kBACkBA,EAAYnC,WA5WpC,uCAwXsB,SAACmC,GACnB,OAAI0E,QAAY1E,GACP,EAAK2E,gBAAgB3E,IAE1B4E,QAAS5E,GACJ,EAAK6E,aAAa7E,IAEvB8E,QAAsB9E,GACjB,EAAK+E,0BAA0B/E,GAEjC,EAAKgF,eAAehF,MAlY/B,gDAUE,WACE,qFAEEiD,KAAM,GACNC,cAAe,GACfV,iBAAkB,OAfxB,uCAmBE,WAA4B,WAC1B,EAAyDyC,KAAK3D,MAAvD4D,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAcC,EAApC,EAAoCA,SAAUC,EAA9C,EAA8CA,QACxCC,EAAYJ,GAAiB,GAEd,OAAjBC,GAAyBC,GAC3BD,EAAaI,KAAKH,GAKpB,IAAMI,EAAWL,aAAH,EAAGA,EAAc7B,QAC7B,SAAAjC,GAAG,OAAKiE,EAAU9D,MAAK,SAAApB,GAAC,OAAIA,EAAEvC,OAASwD,EAAIxD,WAUvC4H,EAAY,GACfC,OAAOJ,GACPI,OAAOF,UAAY,IACnBE,OAAOT,KAAKU,WACZD,OAAOL,UAAW,IAClBK,OAAOE,OAAOC,OAAOC,OAElB7C,EAAOgC,KAAK7B,iBAAiBqC,GAEnC,EAAwCR,KAAKc,sBAAtCpD,EAAP,EAAOA,YAAaH,EAApB,EAAoBA,iBAEpByC,KAAKxB,SAAS,CAACR,OAAMN,cAAaH,qBAAmB,WACnD,EAAKqB,sBACL,EAAKmC,uBArDX,6BAyDE,WAGE,MAA+Cf,KAAK3D,MAA7C2C,EAAP,EAAOA,aAAciB,EAArB,EAAqBA,cAAeG,EAApC,EAAoCA,QAC9BY,EAAwB,IAAIC,IAElCjC,WAAckC,SAAQ,SAACnG,GACrBiG,EAAsBG,IAAIpG,EAAYgE,SAASE,QAGjDgB,WAAe5B,OAAO2B,KAAKR,eAAe0B,SAAQ,SAAC5I,GACjD0I,EAAsBG,IAAI7I,EAAUM,SAGtCwH,WAASc,SAAQ,SAAC9I,GACZA,EAAOiH,YAAYP,QACrBkC,EAAsBG,IAAI/I,EAAOQ,UAGrCgC,QACE,4BACA,CACEwG,uBAAwBJ,EAAsBzH,KAC9C4D,KAAM,0BAER6C,KAAKvH,MAAMC,aACX,CAAC2I,cAAc,MAnFrB,0BAuFE,WACE,IAAOC,EAAStB,KAAKvH,MAAM8I,OAApBD,MACDE,EAA8D,CAClE,CAAC,SAAD,yBAA6BF,EAA7B,0BACA,CACE,eADF,yBAEoBA,EAFpB,kBAGE,CAACG,MAAO,CAACC,cAAe,KAE1B,CAAC,eAAD,yBAAmCJ,EAAnC,kBACA,CAAC,gBAAiB,gBAAiB,CAACG,MAAO,CAAC3I,OAAQ,eACpD,CAAC,cAAD,yBAAkCwI,EAAlC,+BACA,CAAC,UAAD,yBAA8BA,EAA9B,uBAOIK,EAAe,IAAIC,gBAAgB5B,KAAKvH,MAAMuD,SAASiB,QAAQ4E,IAAI,aAKzE,OAJIF,GACFH,EAAclB,KAAK,CAAC,WAAD,uBAA6BqB,EAA7B,OAGdH,IA/GX,kCAoHE,WAEE,OAAOM,IAAQ9B,KAAK3D,MAAM0F,mBAAmB,SAAAC,GAAI,OAAIA,EAAK9C,KAAK+C,MAAM,KAAK,QAtH9E,qBAyHE,WAAuC,QACrC,2BAAOjC,KAAK3D,MAAM6F,cAAlB,aAAO,EAAmBxB,iBAA1B,QAAuC,KA1H3C,6BAiIE,SAAgB3F,GACd,IAAOiE,EAAgBgB,KAAK3D,MAArB2C,aAEP,IAAIW,QAAS5E,GACX,OAAOA,EAAYsE,YAAYP,OAAS,EAAI,EAAI,EAGlD,IAAIW,QAAY1E,GAAc,CAC5B,IAAMoH,EAAUnC,KAAKR,cAAczE,GACnC,OAAIoH,EACwB,YAAnBA,EAAQrJ,OAAuB,EAAI,EAErC,EAGT,OAAI+G,QAAsB9E,GACjB,EAGFiE,WAAczC,MAAK,SAAAC,GAAC,OAAIA,EAAEuC,SAASE,MAAQlE,EAAYkE,OAAO,EAAI,IApJ7E,8BAsKE,SAAiBD,GAAuC,WACtD,OAAOA,EAAaoD,MAAK,SAAC1F,EAA0BC,GAElD,IAAM0F,EAAa,EAAKC,gBAAgB5F,EAAGC,GAC3C,GAAmB,IAAf0F,EACF,OAAOA,EAGT,IAAME,EAAU,EAAKC,iBAAiB9F,EAAGC,GACzC,OAAgB,IAAZ4F,EACKA,EAGF,EAAKE,WAAW/F,EAAGC,QAnLhC,qDAuLE,WAAyB+F,EAAUC,GAAnC,oEACM3C,KAAK3D,MAAM2B,KAAKc,SAAW6D,EAAU3E,KAAKc,OADhD,gCAEUkB,KAAK4C,eAFf,gDAvLF,+FA6LE,2FACS5E,EAAQgC,KAAK3D,MAAb2B,KADT,KAEEgC,KAFF,UAGiBtI,OAAkBsG,GAAQ,GAAIlC,IAH/C,yBAGIiC,MAHJ,WAEOS,SAFP,gEA7LF,qEAqYE,WACE,IAAO8C,EAAStB,KAAKvH,MAAM8I,OAApBD,MACP,EAA6DtB,KAAK3D,MAA3D4B,EAAP,EAAOA,cAAeD,EAAtB,EAAsBA,KAAMN,EAA5B,EAA4BA,YAAaH,EAAzC,EAAyCA,iBAEnCnG,GAAQ0C,OAAE,gBACV+I,EAAeC,IAAKC,IAAQ/E,EAAK9D,IAAIoE,QAA+B8D,OAE1E,OACE,QAAC,EAAAY,SAAD,YACE,QAAC,IAAD,CAAqB5L,MAAOA,EAAOC,QAASiK,KAE1CtB,KAAKvH,MAAMwK,aACX,QAAC,IAAD,CACE7L,MAAOA,EACP8L,QACE,QAACC,GAAD,YACE,QAAC,IAAD,CACEjE,KAAK,oBACLkE,SAAUpD,KAAKqD,iBACf5E,MAAOlB,EACP+F,QAAO,CACL,CAAC,IAAIxJ,OAAE,oBADF,eAEF+I,EAAa3I,KAAI,SAAAC,GAAQ,MAAI,CAACA,EAAUE,IAAUF,YAGzD,QAAC,IAAD,CACEsH,MAAO/D,GAAe,GACtB0F,SAAUpD,KAAKuD,mBACfC,aAAa1J,OAAE,0BACf2J,MAAM,eAOhB,QAAC,IAAD,CAAiBC,OAAQ,CAAC,uBAC1B,QAAC,KAAD,WACE,QAAC,IAAD,UACGzF,EAAca,OACbb,EAAc/D,IAAI8F,KAAK2D,oBAEvB,QAACC,GAAD,YACE,QAACC,GAAD,WACGC,QAAI,4CAA6C,CAChDC,WAAYrG,OAGhB,QAACsG,GAAD,WACGlK,OAAE,0CAEL,QAAC+J,GAAD,WACGC,QAAI,sDAAuD,CAC1DG,MACE,aAAGvJ,KAAK,wFA3b9B,GAA8CwJ,KAwcxCf,IAAkB,OAAO,MAAP,qBAAH,kEAGPlI,OAAM,GAHC,KAMf2I,IAAwB,OAAO,MAAP,qBAAH,qHAQrBC,IAAmB,OAAO,MAAP,qBAAH,0CAGX,SAAA1I,GAAC,OAAIA,EAAEC,MAAMC,UAHF,oBAIFJ,OAAM,GAJJ,KAOhB+I,IAAuB,OAAOH,GAAP,qBAAH,4CAI1B,IAAeM,OAAiBhI,K,m8CChiBhC,IAAMiI,EAAkB,SAAC,GAAD,QAAEV,cAAF,MAAW,CAAC,aAAZ,EAA6BjL,GAA7B,mBACtB,QAAC,IAAD,CAAQiL,OAAQA,EAAhB,SACG,qBAAEW,YAEC,QAAC,IAAD,KAAO1L,KAAK,UAAU6B,MAAM,QAAC,KAAD,CAAajB,KAAK,QAAad,GAA3D,cACGqB,OACC,kGANNsK,E,8BAcN","file":"chunks/app_views_organizationIntegrations_integrationListDirectory_tsx.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {DEFAULT_FUSE_OPTIONS} from 'app/constants';\n\nexport function loadFuzzySearch() {\n  return import('fuse.js');\n}\n\nexport async function createFuzzySearch<\n  T = string,\n  Options extends Fuse.FuseOptions<T> = Fuse.FuseOptions<T>\n>(objects: any[], options: Options): Promise<Fuse<T, Options>> {\n  if (!options.keys) {\n    throw new Error('You need to define `options.keys`');\n  }\n\n  const {default: Fuse} = await loadFuzzySearch();\n  const opts = {\n    ...DEFAULT_FUSE_OPTIONS,\n    ...options,\n  };\n  return new Fuse(objects, opts);\n}\n","import styled from '@emotion/styled';\nimport startCase from 'lodash/startCase';\n\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport space from 'app/styles/space';\nimport {IntegrationInstallationStatus, Organization, SentryApp} from 'app/types';\nimport {\n  convertIntegrationTypeToSnakeCase,\n  trackIntegrationEvent,\n} from 'app/utils/integrationUtil';\n\nimport IntegrationStatus from './integrationStatus';\n\ntype Props = {\n  organization: Organization;\n  type: 'plugin' | 'firstParty' | 'sentryApp' | 'documentIntegration';\n  slug: string;\n  displayName: string;\n  status?: IntegrationInstallationStatus;\n  publishStatus: 'unpublished' | 'published' | 'internal';\n  configurations: number;\n  categories: string[];\n  alertText?: string;\n};\n\nconst urlMap = {\n  plugin: 'plugins',\n  firstParty: 'integrations',\n  sentryApp: 'sentry-apps',\n  documentIntegration: 'document-integrations',\n};\n\nconst IntegrationRow = (props: Props) => {\n  const {\n    organization,\n    type,\n    slug,\n    displayName,\n    status,\n    publishStatus,\n    configurations,\n    categories,\n    alertText,\n  } = props;\n\n  const baseUrl =\n    publishStatus === 'internal'\n      ? `/settings/${organization.slug}/developer-settings/${slug}/`\n      : `/settings/${organization.slug}/${urlMap[type]}/${slug}/`;\n\n  const renderDetails = () => {\n    if (type === 'sentryApp') {\n      return publishStatus !== 'published' && <PublishStatus status={publishStatus} />;\n    }\n    // TODO: Use proper translations\n    return configurations > 0 ? (\n      <StyledLink to={`${baseUrl}?tab=configurations`}>{`${configurations} Configuration${\n        configurations > 1 ? 's' : ''\n      }`}</StyledLink>\n    ) : null;\n  };\n\n  const renderStatus = () => {\n    // status should be undefined for document integrations\n    if (status) {\n      return <IntegrationStatus status={status} />;\n    }\n    return <LearnMore to={baseUrl}>{t('Learn More')}</LearnMore>;\n  };\n\n  return (\n    <PanelRow noPadding data-test-id={slug}>\n      <FlexContainer>\n        <PluginIcon size={36} pluginId={slug} />\n        <Container>\n          <IntegrationName to={baseUrl}>{displayName}</IntegrationName>\n          <IntegrationDetails>\n            {renderStatus()}\n            {renderDetails()}\n          </IntegrationDetails>\n        </Container>\n        <InternalContainer>\n          {categories?.map(category => (\n            <CategoryTag\n              key={category}\n              category={startCase(category)}\n              priority={category === publishStatus}\n            />\n          ))}\n        </InternalContainer>\n      </FlexContainer>\n      {alertText && (\n        <AlertContainer>\n          <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />}>\n            <span>{alertText}</span>\n            <ResolveNowButton\n              href={`${baseUrl}?tab=configurations&referrer=directory_resolve_now`}\n              size=\"xsmall\"\n              onClick={() =>\n                trackIntegrationEvent(\n                  'integrations.resolve_now_clicked',\n                  {\n                    integration_type: convertIntegrationTypeToSnakeCase(type),\n                    integration: slug,\n                  },\n                  organization\n                )\n              }\n            >\n              {t('Resolve Now')}\n            </ResolveNowButton>\n          </Alert>\n        </AlertContainer>\n      )}\n    </PanelRow>\n  );\n};\n\nconst PanelRow = styled(PanelItem)`\n  flex-direction: column;\n`;\n\nconst FlexContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n\nconst InternalContainer = styled(FlexContainer)`\n  padding: 0 ${space(2)};\n`;\n\nconst Container = styled('div')`\n  flex: 1;\n  padding: 0 16px;\n`;\n\nconst IntegrationName = styled(Link)`\n  font-weight: bold;\n`;\n\nconst IntegrationDetails = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-top: 6px;\n  font-size: 0.8em;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.gray300};\n  &:before {\n    content: '|';\n    color: ${p => p.theme.gray200};\n    margin-right: ${space(0.75)};\n    font-weight: normal;\n  }\n`;\n\nconst LearnMore = styled(Link)`\n  color: ${p => p.theme.gray300};\n`;\n\ntype PublishStatusProps = {status: SentryApp['status']; theme?: any};\n\nconst PublishStatus = styled(({status, ...props}: PublishStatusProps) => (\n  <div {...props}>{t(`${status}`)}</div>\n))`\n  color: ${(props: PublishStatusProps) =>\n    props.status === 'published' ? props.theme.success : props.theme.gray300};\n  font-weight: light;\n  margin-right: ${space(0.75)};\n  text-transform: capitalize;\n  &:before {\n    content: '|';\n    color: ${p => p.theme.gray200};\n    margin-right: ${space(0.75)};\n    font-weight: normal;\n  }\n`;\n\n// TODO(Priscila): Replace this component with the Tag component\nconst CategoryTag = styled(\n  ({\n    priority: _priority,\n    category,\n    ...p\n  }: {\n    category: string;\n    priority: boolean;\n    theme?: any;\n  }) => <div {...p}>{category}</div>\n)`\n  display: flex;\n  flex-direction: row;\n  padding: 1px 10px;\n  background: ${p => (p.priority ? p.theme.purple200 : p.theme.gray100)};\n  border-radius: 20px;\n  font-size: ${space(1.5)};\n  margin-right: ${space(1)};\n  line-height: ${space(3)};\n  text-align: center;\n  color: ${p => (p.priority ? p.theme.white : p.theme.gray500)};\n`;\n\nconst ResolveNowButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  float: right;\n`;\n\nconst AlertContainer = styled('div')`\n  padding: 0px ${space(3)} 0px 68px;\n`;\n\nexport default IntegrationRow;\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\nimport groupBy from 'lodash/groupBy';\nimport startCase from 'lodash/startCase';\nimport uniq from 'lodash/uniq';\nimport * as queryString from 'query-string';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport SelectControl from 'app/components/forms/selectControl';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {\n  AppOrProviderOrPlugin,\n  DocumentIntegration,\n  Integration,\n  IntegrationProvider,\n  Organization,\n  PluginWithProjectList,\n  SentryApp,\n  SentryAppInstallation,\n} from 'app/types';\nimport {createFuzzySearch} from 'app/utils/createFuzzySearch';\nimport {\n  getCategoriesForIntegration,\n  getSentryAppInstallStatus,\n  isDocumentIntegration,\n  isPlugin,\n  isSentryApp,\n  trackIntegrationEvent,\n} from 'app/utils/integrationUtil';\nimport withOrganization from 'app/utils/withOrganization';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/organization/permissionAlert';\n\nimport {documentIntegrations, POPULARITY_WEIGHT} from './constants';\nimport IntegrationRow from './integrationRow';\n\nconst fuseOptions = {\n  threshold: 0.3,\n  location: 0,\n  distance: 100,\n  includeScore: true as const,\n  keys: ['slug', 'key', 'name', 'id'],\n};\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n  hideHeader: boolean;\n};\n\ntype State = {\n  integrations: Integration[] | null;\n  plugins: PluginWithProjectList[] | null;\n  appInstalls: SentryAppInstallation[] | null;\n  orgOwnedApps: SentryApp[] | null;\n  publishedApps: SentryApp[] | null;\n  config: {providers: IntegrationProvider[]} | null;\n  extraApp?: SentryApp;\n  searchInput: string;\n  list: AppOrProviderOrPlugin[];\n  displayedList: AppOrProviderOrPlugin[];\n  selectedCategory: string;\n  fuzzy?: Fuse<AppOrProviderOrPlugin, typeof fuseOptions>;\n};\n\nconst TEXT_SEARCH_ANALYTICS_DEBOUNCE_IN_MS = 1000;\n\nexport class IntegrationListDirectory extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  // Some integrations require visiting a different website to add them. When\n  // we come back to the tab we want to show our integrations as soon as we can.\n  shouldReload = true;\n  reloadOnVisible = true;\n  shouldReloadOnVisible = true;\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      list: [],\n      displayedList: [],\n      selectedCategory: '',\n    };\n  }\n\n  onLoadAllEndpointsSuccess() {\n    const {publishedApps, orgOwnedApps, extraApp, plugins} = this.state;\n    const published = publishedApps || [];\n    // If we have an extra app in state from query parameter, add it as org owned app\n    if (orgOwnedApps !== null && extraApp) {\n      orgOwnedApps.push(extraApp);\n    }\n\n    // we dont want the app to render twice if its the org that created\n    // the published app.\n    const orgOwned = orgOwnedApps?.filter(\n      app => !published.find(p => p.slug === app.slug)\n    );\n\n    /**\n     * We should have three sections:\n     * 1. Public apps and integrations available to everyone\n     * 2. Unpublished apps available to that org\n     * 3. Internal apps available to that org\n     */\n\n    const combined = ([] as AppOrProviderOrPlugin[])\n      .concat(published)\n      .concat(orgOwned ?? [])\n      .concat(this.providers)\n      .concat(plugins ?? [])\n      .concat(Object.values(documentIntegrations));\n\n    const list = this.sortIntegrations(combined);\n\n    const {searchInput, selectedCategory} = this.getFilterParameters();\n\n    this.setState({list, searchInput, selectedCategory}, () => {\n      this.updateDisplayedList();\n      this.trackPageViewed();\n    });\n  }\n\n  trackPageViewed() {\n    // count the number of installed apps\n\n    const {integrations, publishedApps, plugins} = this.state;\n    const integrationsInstalled = new Set();\n    // add installed integrations\n    integrations?.forEach((integration: Integration) => {\n      integrationsInstalled.add(integration.provider.key);\n    });\n    // add sentry apps\n    publishedApps?.filter(this.getAppInstall).forEach((sentryApp: SentryApp) => {\n      integrationsInstalled.add(sentryApp.slug);\n    });\n    // add plugins\n    plugins?.forEach((plugin: PluginWithProjectList) => {\n      if (plugin.projectList.length) {\n        integrationsInstalled.add(plugin.slug);\n      }\n    });\n    trackIntegrationEvent(\n      'integrations.index_viewed',\n      {\n        integrations_installed: integrationsInstalled.size,\n        view: 'integrations_directory',\n      },\n      this.props.organization,\n      {startSession: true}\n    );\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId} = this.props.params;\n    const baseEndpoints: ([string, string, any] | [string, string])[] = [\n      ['config', `/organizations/${orgId}/config/integrations/`],\n      [\n        'integrations',\n        `/organizations/${orgId}/integrations/`,\n        {query: {includeConfig: 0}},\n      ],\n      ['orgOwnedApps', `/organizations/${orgId}/sentry-apps/`],\n      ['publishedApps', '/sentry-apps/', {query: {status: 'published'}}],\n      ['appInstalls', `/organizations/${orgId}/sentry-app-installations/`],\n      ['plugins', `/organizations/${orgId}/plugins/configs/`],\n    ];\n    /**\n     * optional app to load for super users\n     * should only be done for unpublished integrations from another org\n     * but no checks are in place to ensure the above condition\n     */\n    const extraAppSlug = new URLSearchParams(this.props.location.search).get('extra_app');\n    if (extraAppSlug) {\n      baseEndpoints.push(['extraApp', `/sentry-apps/${extraAppSlug}/`]);\n    }\n\n    return baseEndpoints;\n  }\n\n  // State\n\n  get unmigratableReposByOrg() {\n    // Group by [GitHub|BitBucket|VSTS] Org name\n    return groupBy(this.state.unmigratableRepos, repo => repo.name.split('/')[0]);\n  }\n\n  get providers(): IntegrationProvider[] {\n    return this.state.config?.providers ?? [];\n  }\n\n  getAppInstall = (app: SentryApp) =>\n    this.state.appInstalls?.find(i => i.app.slug === app.slug);\n\n  // Returns 0 if uninstalled, 1 if pending, and 2 if installed\n  getInstallValue(integration: AppOrProviderOrPlugin) {\n    const {integrations} = this.state;\n\n    if (isPlugin(integration)) {\n      return integration.projectList.length > 0 ? 2 : 0;\n    }\n\n    if (isSentryApp(integration)) {\n      const install = this.getAppInstall(integration);\n      if (install) {\n        return install.status === 'pending' ? 1 : 2;\n      }\n      return 0;\n    }\n\n    if (isDocumentIntegration(integration)) {\n      return 0;\n    }\n\n    return integrations?.find(i => i.provider.key === integration.key) ? 2 : 0;\n  }\n\n  getPopularityWeight = (integration: AppOrProviderOrPlugin) =>\n    POPULARITY_WEIGHT[integration.slug] ?? 1;\n\n  sortByName = (a: AppOrProviderOrPlugin, b: AppOrProviderOrPlugin) =>\n    a.slug.localeCompare(b.slug);\n\n  sortByPopularity = (a: AppOrProviderOrPlugin, b: AppOrProviderOrPlugin) => {\n    const weightA = this.getPopularityWeight(a);\n    const weightB = this.getPopularityWeight(b);\n    return weightB - weightA;\n  };\n\n  sortByInstalled = (a: AppOrProviderOrPlugin, b: AppOrProviderOrPlugin) =>\n    this.getInstallValue(b) - this.getInstallValue(a);\n\n  sortIntegrations(integrations: AppOrProviderOrPlugin[]) {\n    return integrations.sort((a: AppOrProviderOrPlugin, b: AppOrProviderOrPlugin) => {\n      // sort by whether installed first\n      const diffWeight = this.sortByInstalled(a, b);\n      if (diffWeight !== 0) {\n        return diffWeight;\n      }\n      // then sort by popularity\n      const diffPop = this.sortByPopularity(a, b);\n      if (diffPop !== 0) {\n        return diffPop;\n      }\n      // then sort by name\n      return this.sortByName(a, b);\n    });\n  }\n\n  async componentDidUpdate(_: Props, prevState: State) {\n    if (this.state.list.length !== prevState.list.length) {\n      await this.createSearch();\n    }\n  }\n\n  async createSearch() {\n    const {list} = this.state;\n    this.setState({\n      fuzzy: await createFuzzySearch(list || [], fuseOptions),\n    });\n  }\n\n  debouncedTrackIntegrationSearch = debounce((search: string, numResults: number) => {\n    trackIntegrationEvent(\n      'integrations.directory_item_searched',\n      {\n        view: 'integrations_directory',\n        search_term: search,\n        num_results: numResults,\n      },\n      this.props.organization\n    );\n  }, TEXT_SEARCH_ANALYTICS_DEBOUNCE_IN_MS);\n\n  /**\n   * Get filter parameters and guard against `queryString.parse` returning arrays.\n   */\n  getFilterParameters = (): {searchInput: string; selectedCategory: string} => {\n    const {category, search} = queryString.parse(this.props.location.search);\n\n    const selectedCategory = Array.isArray(category) ? category[0] : category || '';\n    const searchInput = Array.isArray(search) ? search[0] : search || '';\n\n    return {searchInput, selectedCategory};\n  };\n\n  /**\n   * Update the query string with the current filter parameter values.\n   */\n  updateQueryString = () => {\n    const {searchInput, selectedCategory} = this.state;\n\n    const searchString = queryString.stringify({\n      ...queryString.parse(this.props.location.search),\n      search: searchInput ? searchInput : undefined,\n      category: selectedCategory ? selectedCategory : undefined,\n    });\n\n    browserHistory.replace({\n      pathname: this.props.location.pathname,\n      search: searchString ? `?${searchString}` : undefined,\n    });\n  };\n\n  /**\n   * Filter the integrations list by ANDing together the search query and the category select.\n   */\n  updateDisplayedList = (): AppOrProviderOrPlugin[] => {\n    const {fuzzy, list, searchInput, selectedCategory} = this.state;\n\n    let displayedList = list;\n\n    if (searchInput && fuzzy) {\n      const searchResults = fuzzy.search(searchInput);\n      displayedList = this.sortIntegrations(searchResults.map(i => i.item));\n    }\n\n    if (selectedCategory) {\n      displayedList = displayedList.filter(integration =>\n        getCategoriesForIntegration(integration).includes(selectedCategory)\n      );\n    }\n\n    this.setState({displayedList});\n\n    return displayedList;\n  };\n\n  handleSearchChange = async (value: string) => {\n    this.setState({searchInput: value}, () => {\n      this.updateQueryString();\n      const result = this.updateDisplayedList();\n      if (value) {\n        this.debouncedTrackIntegrationSearch(value, result.length);\n      }\n    });\n  };\n\n  onCategorySelect = ({value: category}: {value: string}) => {\n    this.setState({selectedCategory: category}, () => {\n      this.updateQueryString();\n      this.updateDisplayedList();\n\n      if (category) {\n        trackIntegrationEvent(\n          'integrations.directory_category_selected',\n          {\n            view: 'integrations_directory',\n            category,\n          },\n          this.props.organization\n        );\n      }\n    });\n  };\n\n  // Rendering\n  renderProvider = (provider: IntegrationProvider) => {\n    const {organization} = this.props;\n    // find the integration installations for that provider\n    const integrations =\n      this.state.integrations?.filter(i => i.provider.key === provider.key) ?? [];\n\n    return (\n      <IntegrationRow\n        key={`row-${provider.key}`}\n        data-test-id=\"integration-row\"\n        organization={organization}\n        type=\"firstParty\"\n        slug={provider.slug}\n        displayName={provider.name}\n        status={integrations.length ? 'Installed' : 'Not Installed'}\n        publishStatus=\"published\"\n        configurations={integrations.length}\n        categories={getCategoriesForIntegration(provider)}\n      />\n    );\n  };\n\n  renderPlugin = (plugin: PluginWithProjectList) => {\n    const {organization} = this.props;\n\n    const isLegacy = plugin.isHidden;\n    const displayName = `${plugin.name} ${isLegacy ? '(Legacy)' : ''}`;\n    // hide legacy integrations if we don't have any projects with them\n    if (isLegacy && !plugin.projectList.length) {\n      return null;\n    }\n    return (\n      <IntegrationRow\n        key={`row-plugin-${plugin.id}`}\n        data-test-id=\"integration-row\"\n        organization={organization}\n        type=\"plugin\"\n        slug={plugin.slug}\n        displayName={displayName}\n        status={plugin.projectList.length ? 'Installed' : 'Not Installed'}\n        publishStatus=\"published\"\n        configurations={plugin.projectList.length}\n        categories={getCategoriesForIntegration(plugin)}\n      />\n    );\n  };\n\n  // render either an internal or non-internal app\n  renderSentryApp = (app: SentryApp) => {\n    const {organization} = this.props;\n    const status = getSentryAppInstallStatus(this.getAppInstall(app));\n    const categories = getCategoriesForIntegration(app);\n\n    return (\n      <IntegrationRow\n        key={`sentry-app-row-${app.slug}`}\n        data-test-id=\"integration-row\"\n        organization={organization}\n        type=\"sentryApp\"\n        slug={app.slug}\n        displayName={app.name}\n        status={status}\n        publishStatus={app.status}\n        configurations={0}\n        categories={categories}\n      />\n    );\n  };\n\n  renderDocumentIntegration = (integration: DocumentIntegration) => {\n    const {organization} = this.props;\n    return (\n      <IntegrationRow\n        key={`doc-int-${integration.slug}`}\n        organization={organization}\n        type=\"documentIntegration\"\n        slug={integration.slug}\n        displayName={integration.name}\n        publishStatus=\"published\"\n        configurations={0}\n        categories={getCategoriesForIntegration(integration)}\n      />\n    );\n  };\n\n  renderIntegration = (integration: AppOrProviderOrPlugin) => {\n    if (isSentryApp(integration)) {\n      return this.renderSentryApp(integration);\n    }\n    if (isPlugin(integration)) {\n      return this.renderPlugin(integration);\n    }\n    if (isDocumentIntegration(integration)) {\n      return this.renderDocumentIntegration(integration);\n    }\n    return this.renderProvider(integration);\n  };\n\n  renderBody() {\n    const {orgId} = this.props.params;\n    const {displayedList, list, searchInput, selectedCategory} = this.state;\n\n    const title = t('Integrations');\n    const categoryList = uniq(flatten(list.map(getCategoriesForIntegration))).sort();\n\n    return (\n      <Fragment>\n        <SentryDocumentTitle title={title} orgSlug={orgId} />\n\n        {!this.props.hideHeader && (\n          <SettingsPageHeader\n            title={title}\n            action={\n              <ActionContainer>\n                <SelectControl\n                  name=\"select-categories\"\n                  onChange={this.onCategorySelect}\n                  value={selectedCategory}\n                  choices={[\n                    ['', t('All Categories')],\n                    ...categoryList.map(category => [category, startCase(category)]),\n                  ]}\n                />\n                <SearchBar\n                  query={searchInput || ''}\n                  onChange={this.handleSearchChange}\n                  placeholder={t('Filter Integrations...')}\n                  width=\"25em\"\n                />\n              </ActionContainer>\n            }\n          />\n        )}\n\n        <PermissionAlert access={['org:integrations']} />\n        <Panel>\n          <PanelBody>\n            {displayedList.length ? (\n              displayedList.map(this.renderIntegration)\n            ) : (\n              <EmptyResultsContainer>\n                <EmptyResultsBody>\n                  {tct('No Integrations found for \"[searchTerm]\".', {\n                    searchTerm: searchInput,\n                  })}\n                </EmptyResultsBody>\n                <EmptyResultsBodyBold>\n                  {t(\"Not seeing what you're looking for?\")}\n                </EmptyResultsBodyBold>\n                <EmptyResultsBody>\n                  {tct('[link:Build it on the Sentry Integration Platform.]', {\n                    link: (\n                      <a href=\"https://docs.sentry.io/product/integrations/integration-platform/\" />\n                    ),\n                  })}\n                </EmptyResultsBody>\n              </EmptyResultsContainer>\n            )}\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nconst ActionContainer = styled('div')`\n  display: grid;\n  grid-template-columns: 240px max-content;\n  grid-gap: ${space(2)};\n`;\n\nconst EmptyResultsContainer = styled('div')`\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst EmptyResultsBody = styled('div')`\n  font-size: 16px;\n  line-height: 28px;\n  color: ${p => p.theme.gray300};\n  padding-bottom: ${space(2)};\n`;\n\nconst EmptyResultsBodyBold = styled(EmptyResultsBody)`\n  font-weight: bold;\n`;\n\nexport default withOrganization(IntegrationListDirectory);\n","import * as React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['org:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner or manager role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n"],"sourceRoot":""}