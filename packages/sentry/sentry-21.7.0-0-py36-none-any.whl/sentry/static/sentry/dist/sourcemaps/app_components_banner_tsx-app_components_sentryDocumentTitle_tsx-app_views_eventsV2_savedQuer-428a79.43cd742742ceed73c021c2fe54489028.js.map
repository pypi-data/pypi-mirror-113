{"version":3,"sources":["webpack:///./app/actionCreators/discoverSavedQueries.tsx","webpack:///./app/components/banner.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/views/eventsV2/savedQuery/utils.tsx","webpack:///../node_modules/lodash/negate.js","webpack:///../node_modules/lodash/omitBy.js"],"names":["fetchSavedQuery","api","orgId","queryId","promise","requestPromise","method","catch","addErrorMessage","t","createSavedQuery","query","data","updateSavedQuery","id","deleteSavedQuery","makeKey","prefix","dismissBanner","bannerKey","localStorage","setItem","Banner","key","value","setValue","title","subtitle","isDismissable","dismissKey","className","backgroundImg","backgroundComponent","children","React","getItem","dismissed","dismiss","BannerWrapper","CloseButton","onClick","BannerContent","BannerTitle","BannerSubtitle","StyledButtonBar","gap","p","css","theme","gray500","space","dropShadowLight","borderRadius","white","breakpoints","fontSizeExtraLarge","ButtonBar","Button","defaultProps","icon","label","priority","borderless","size","SentryDocumentTitle","orgSlug","projectSlug","docTitle","handleCreateQuery","organization","eventView","isNewQuery","payload","toNewQuery","trackAnalyticsEvent","getAnalyticsCreateEventKeyName","organization_id","parseInt","extractAnalyticsQueryFields","slug","then","savedQuery","addSuccessMessage","err","error","message","EVENT_NAME_EXISTING_MAP","request","success","failed","EVENT_NAME_NEW_MAP","handleUpdateQuery","name","Promise","reject","eventKey","eventName","handleUpdateQueryName","_saved","handleDeleteQuery","type","projects","fields","module","exports","predicate","TypeError","args","arguments","length","call","this","apply","baseIteratee","negate","pickBy","object"],"mappings":"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","file":"chunks/app_components_banner_tsx-app_components_sentryDocumentTitle_tsx-app_views_eventsV2_savedQuer-428a79.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["import {addErrorMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport {NewQuery, SavedQuery} from 'app/types';\n\nexport function fetchSavedQueries(\n  api: Client,\n  orgId: string,\n  query: string = ''\n): Promise<SavedQuery[]> {\n  const promise: Promise<SavedQuery[]> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/`,\n    {\n      method: 'GET',\n      query: {query: `version:2 ${query}`.trim()},\n    }\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to load saved queries'));\n  });\n  return promise;\n}\n\nexport function fetchSavedQuery(\n  api: Client,\n  orgId: string,\n  queryId: string\n): Promise<SavedQuery> {\n  const promise: Promise<SavedQuery> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/${queryId}/`,\n    {\n      method: 'GET',\n    }\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to load saved query'));\n  });\n  return promise;\n}\n\nexport function createSavedQuery(\n  api: Client,\n  orgId: string,\n  query: NewQuery\n): Promise<SavedQuery> {\n  const promise: Promise<SavedQuery> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/`,\n    {\n      method: 'POST',\n      data: query,\n    }\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to create your saved query'));\n  });\n  return promise;\n}\n\nexport function updateSavedQuery(\n  api: Client,\n  orgId: string,\n  query: NewQuery\n): Promise<SavedQuery> {\n  const promise: Promise<SavedQuery> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/${query.id}/`,\n    {\n      method: 'PUT',\n      data: query,\n    }\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to update your saved query'));\n  });\n  return promise;\n}\n\nexport function deleteSavedQuery(\n  api: Client,\n  orgId: string,\n  queryId: string\n): Promise<void> {\n  const promise: Promise<void> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/${queryId}/`,\n    {method: 'DELETE'}\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to delete the saved query'));\n  });\n  return promise;\n}\n","import * as React from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport {IconClose} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\n\nconst makeKey = (prefix: string) => `${prefix}-banner-dismissed`;\n\nfunction dismissBanner(bannerKey: string) {\n  localStorage.setItem(makeKey(bannerKey), 'true');\n}\n\nfunction useDismissable(bannerKey: string) {\n  const key = makeKey(bannerKey);\n  const [value, setValue] = React.useState(localStorage.getItem(key));\n\n  const dismiss = () => {\n    setValue('true');\n    dismissBanner(bannerKey);\n  };\n\n  return [value === 'true', dismiss] as const;\n}\n\ntype BannerWrapperProps = {\n  backgroundImg?: string;\n  backgroundComponent?: React.ReactNode;\n};\n\ntype Props = BannerWrapperProps & {\n  title?: string;\n  subtitle?: string;\n  isDismissable?: boolean;\n  dismissKey?: string;\n  className?: string;\n};\n\ntype BannerType = React.FC<Props> & {\n  /**\n   * Helper function to hide banners outside of their usage\n   */\n  dismiss: typeof dismissBanner;\n};\n\nconst Banner: BannerType = ({\n  title,\n  subtitle,\n  isDismissable = true,\n  dismissKey = 'generic-banner',\n  className,\n  backgroundImg,\n  backgroundComponent,\n  children,\n}) => {\n  const [dismissed, dismiss] = useDismissable(dismissKey);\n\n  if (dismissed) {\n    return null;\n  }\n\n  return (\n    <BannerWrapper backgroundImg={backgroundImg} className={className}>\n      {backgroundComponent}\n      {isDismissable ? <CloseButton onClick={dismiss} /> : null}\n      <BannerContent>\n        <BannerTitle>{title}</BannerTitle>\n        <BannerSubtitle>{subtitle}</BannerSubtitle>\n        <StyledButtonBar gap={1}>{children}</StyledButtonBar>\n      </BannerContent>\n    </BannerWrapper>\n  );\n};\n\nBanner.dismiss = dismissBanner;\n\nconst BannerWrapper = styled('div')<BannerWrapperProps>`\n  ${p =>\n    p.backgroundImg\n      ? css`\n          background: url(${p.backgroundImg});\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: center center;\n        `\n      : css`\n          background-color: ${p.theme.gray500};\n        `}\n  display: flex;\n  overflow: hidden;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: ${space(2)};\n  box-shadow: ${p => p.theme.dropShadowLight};\n  border-radius: ${p => p.theme.borderRadius};\n  height: 180px;\n  color: ${p => p.theme.white};\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    height: 220px;\n  }\n`;\n\nconst BannerContent = styled('div')`\n  position: absolute;\n  display: grid;\n  justify-items: center;\n  grid-template-rows: repeat(3, max-content);\n  text-align: center;\n  padding: ${space(4)};\n`;\n\nconst BannerTitle = styled('h1')`\n  margin: 0;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    font-size: 40px;\n  }\n`;\n\nconst BannerSubtitle = styled('div')`\n  margin: 0;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    font-size: ${p => p.theme.fontSizeExtraLarge};\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(2)};\n  width: fit-content;\n`;\n\nconst CloseButton = styled(Button)`\n  position: absolute;\n  display: block;\n  top: ${space(2)};\n  right: ${space(2)};\n  color: ${p => p.theme.white};\n  cursor: pointer;\n  z-index: 1;\n`;\n\nCloseButton.defaultProps = {\n  icon: <IconClose />,\n  label: t('Close'),\n  priority: 'link',\n  borderless: true,\n  size: 'xsmall',\n};\n\nexport default Banner;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {\n  createSavedQuery,\n  deleteSavedQuery,\n  updateSavedQuery,\n} from 'app/actionCreators/discoverSavedQueries';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport {NewQuery, Organization, SavedQuery} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport EventView from 'app/utils/discover/eventView';\n\nexport function handleCreateQuery(\n  api: Client,\n  organization: Organization,\n  eventView: EventView,\n  // True if this is a brand new query being saved\n  // False if this is a modification from a saved query\n  isNewQuery: boolean = true\n): Promise<SavedQuery> {\n  const payload = eventView.toNewQuery();\n\n  trackAnalyticsEvent({\n    ...getAnalyticsCreateEventKeyName(isNewQuery, 'request'),\n    organization_id: parseInt(organization.id, 10),\n    ...extractAnalyticsQueryFields(payload),\n  });\n\n  const promise = createSavedQuery(api, organization.slug, payload);\n\n  promise\n    .then((savedQuery: SavedQuery) => {\n      addSuccessMessage(t('Query saved'));\n\n      trackAnalyticsEvent({\n        ...getAnalyticsCreateEventKeyName(isNewQuery, 'success'),\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n      });\n\n      return savedQuery;\n    })\n    .catch((err: Error) => {\n      addErrorMessage(t('Query not saved'));\n\n      trackAnalyticsEvent({\n        ...getAnalyticsCreateEventKeyName(isNewQuery, 'failed'),\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n        error:\n          (err && err.message) ||\n          `Could not save a ${isNewQuery ? 'new' : 'existing'} query`,\n      });\n    });\n\n  return promise;\n}\n\nconst EVENT_NAME_EXISTING_MAP = {\n  request: 'Discoverv2: Request to save a saved query as a new query',\n  success: 'Discoverv2: Successfully saved a saved query as a new query',\n  failed: 'Discoverv2: Failed to save a saved query as a new query',\n};\nconst EVENT_NAME_NEW_MAP = {\n  request: 'Discoverv2: Request to save a new query',\n  success: 'Discoverv2: Successfully saved a new query',\n  failed: 'Discoverv2: Failed to save a new query',\n};\n\nexport function handleUpdateQuery(\n  api: Client,\n  organization: Organization,\n  eventView: EventView\n): Promise<SavedQuery> {\n  const payload = eventView.toNewQuery();\n\n  if (!eventView.name) {\n    addErrorMessage(t('Please name your query'));\n    return Promise.reject();\n  }\n\n  trackAnalyticsEvent({\n    eventKey: 'discover_v2.update_query_request',\n    eventName: 'Discoverv2: Request to update a saved query',\n    organization_id: parseInt(organization.id, 10),\n    ...extractAnalyticsQueryFields(payload),\n  });\n\n  const promise = updateSavedQuery(api, organization.slug, payload);\n\n  promise\n    .then((savedQuery: SavedQuery) => {\n      addSuccessMessage(t('Query updated'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.update_query_success',\n        eventName: 'Discoverv2: Successfully updated a saved query',\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n      });\n      // NOTE: there is no need to convert _saved into an EventView and push it\n      //       to the browser history, since this.props.eventView already\n      //       derives from location.\n\n      return savedQuery;\n    })\n    .catch((err: Error) => {\n      addErrorMessage(t('Query not updated'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.update_query_failed',\n        eventName: 'Discoverv2: Failed to update a saved query',\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n        error: (err && err.message) || 'Failed to update a query',\n      });\n    });\n\n  return promise;\n}\n\n/**\n * Essentially the same as handleUpdateQuery, but specifically for changing the\n * name of the query\n */\nexport function handleUpdateQueryName(\n  api: Client,\n  organization: Organization,\n  eventView: EventView\n) {\n  const payload = eventView.toNewQuery();\n\n  trackAnalyticsEvent({\n    eventKey: 'discover_v2.update_query_name_request',\n    eventName: \"Discoverv2: Request to update a saved query's name\",\n    organization_id: parseInt(organization.id, 10),\n    ...extractAnalyticsQueryFields(payload),\n  });\n\n  const promise = updateSavedQuery(api, organization.slug, payload);\n\n  promise\n    .then(_saved => {\n      addSuccessMessage(t('Query name saved'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.update_query_name_success',\n        eventName: \"Discoverv2: Successfully updated a saved query's name\",\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n      });\n    })\n    .catch((err: Error) => {\n      addErrorMessage(t('Query name not saved'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.update_query_failed',\n        eventName: \"Discoverv2: Failed to update a saved query's name\",\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n        error: (err && err.message) || 'Failed to update a query name',\n      });\n    });\n\n  return promise;\n}\n\nexport function handleDeleteQuery(\n  api: Client,\n  organization: Organization,\n  eventView: EventView\n): Promise<void> {\n  trackAnalyticsEvent({\n    eventKey: 'discover_v2.delete_query_request',\n    eventName: 'Discoverv2: Request to delete a saved query',\n    organization_id: parseInt(organization.id, 10),\n    ...extractAnalyticsQueryFields(eventView.toNewQuery()),\n  });\n\n  const promise = deleteSavedQuery(api, organization.slug, eventView.id!);\n\n  promise\n    .then(() => {\n      addSuccessMessage(t('Query deleted'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.delete_query_success',\n        eventName: 'Discoverv2: Successfully deleted a saved query',\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(eventView.toNewQuery()),\n      });\n    })\n    .catch((err: Error) => {\n      addErrorMessage(t('Query not deleted'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.delete_query_failed',\n        eventName: 'Discoverv2: Failed to delete a saved query',\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(eventView.toNewQuery()),\n        error: (err && err.message) || 'Failed to delete query',\n      });\n    });\n\n  return promise;\n}\n\nexport function getAnalyticsCreateEventKeyName(\n  // True if this is a brand new query being saved\n  // False if this is a modification from a saved query\n  isNewQuery: boolean,\n  type: 'request' | 'success' | 'failed'\n) {\n  const eventKey = isNewQuery\n    ? 'discover_v2.save_new_query_' + type\n    : 'discover_v2.save_existing_query_' + type;\n\n  const eventName = isNewQuery ? EVENT_NAME_NEW_MAP[type] : EVENT_NAME_EXISTING_MAP[type];\n\n  return {\n    eventKey,\n    eventName,\n  };\n}\n\n/**\n * Takes in a DiscoverV2 NewQuery object and returns a Partial containing\n * the desired fields to populate into reload analytics\n */\nexport function extractAnalyticsQueryFields(payload: NewQuery): Partial<NewQuery> {\n  const {projects, fields, query} = payload;\n  return {\n    projects,\n    fields,\n    query,\n  };\n}\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"],"sourceRoot":""}