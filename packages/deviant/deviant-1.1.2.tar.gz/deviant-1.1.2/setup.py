# -*- coding: utf-8 -*-
from setuptools import setup

modules = \
['deviant']
setup_kwargs = {
    'name': 'deviant',
    'version': '1.1.2',
    'description': 'Модуль для работы с Deviant Api',
    'long_description': '# Deviant\n_Модуль, позволяющий обращаться к Deviant Api который позволяет добавлять в вашего бота ВК новый функционал_\n\n* Язык: Python\n* Разработчик: [DarsoX](https://vk.com/darsox)\n* Модуль: [Pypi](https://pypi.org/project/deviant/)\n* Поддержать автора: Z565980380935\n***\n![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken")  - Требуется Doken или Token\n\n> 1. [Установка модуля](#setup)\n>> 2. [Doken](#setup)\n>> 3. [Token](#setup)\n> 4. [StickersGet](#StickersGet) - Получение наборов стикеров юзера ![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken")\n> 5. [StickersInfoGet](#StickersInfoGet) - Получение информации о стикере ![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken")\n> 6. [StickersFullGet](#StickersFullGet ) - Получение наборов стикеров юзера 〔 Детально 〕 ![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken")\n> 7. [SystemInfo](#SystemInfo) - Получение информации о номере телефона, почте и 2FA по токену. ![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken")\n> 8. [AppsGet](#AppsGet) - Получение информации о приложениях пользователя вк\n> 9. [GroupsGet](#GroupsGet) - Получение информации о группах пользователя вк\n> 10. [BalaYandex](#BalaYandex) - Балабоба от яндекса\n> 11. [TranslatorEmj](#TranslatorEmj) - Переводчик текста в эмоджи\n> 12. [KeyGenerator](#KeyGenerator)- Генератор ключей\n> 13. [GetChatsLink](#GetChatsLink) - Получает ссылку на чат и информацию по нем. 〔 https://vk.com/slikkness 〕\n> 14. [GetTesterInfo](#GetTesterInfo) - Получение карточки тестировщика пользователя.\n> 15. [Ping](#Ping ) - Получение карточки тестировщика пользователя.\n\n\n***\n\n# <a name="setup"></a> Установка модуля:\n\n* Bash: `pip install deviant`\n\n* Pythonanywhere: `pip3 install --user deviant`\n\n* Requirements.txt: `deviant == 0.0.9`\n\n\n\n***\n## <a name="Doken"></a> Пример использования Doken:\n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\ndev.apps_get(1) \n~~~\nDoken можно получить тут: https://vk.com/app7440630\n\n## <a name="Token"></a> Пример использования Token:\n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(token = \'Ваш Token\')\ndev.apps_get(1) \n~~~\nToken можно получить тут: https://vkhost.github.io/\n\n***\n\n## ![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken") <a name="StickersGet"></a> StickersGet (Получение наборов стикеров юзера): \n* Метод: stickers_get(user_id)\n* Описание: Получение стикеров пользователя в вк.\n* Параметры: _user_id_ - ID пользователя вконтакте.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.stickers_get(1)\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|count - Количество наборов у пользователя.\n----|count_max - Всего наборов в вк.\n----|stickers - Массив с наборами пользователя.\n------|name - Название стикер-пака.\n------|price - Стоимость набора\n------|id - ID набора.\n----|rub - Общая цена наборов в рублях.\n----|uah- Общая цена наборов  в гривне.\n----|cost- Общая цена наборов  в голосах.\n~~~\n\n\n***\n\n## ![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken") <a name="StickersFullGet"></a> StickersFullGet (Получение наборов стикеров юзера 〔 Детально 〕):\n* Метод: stickers_full_get(user_id,type)\n* Описание: Получение стикеров пользователя в вк детальней, чем метод "StickersGet".\n* Параметр 1: _user_id_ - ID пользователя вконтакте.\n* Параметр 2: _type_ - число от 1 до 6.\n> 1 - Возвращает все стили и стикеры.\n> 2 - Возвращает только платные стикеры.\n> 3 - Возвращает только платные стили.\n> 4 - Возвращает только бесплатные стикеры.\n> 5 - Возвращает только бесплатные стили.\n> 6 - Возвращает ВСЕ.\n\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.stickers_full_get(1,1)\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|count - Массив с количествами.\n------|count_user_all - Количество Стикеров и Стилей пользователя.\n------|count_max - Количество Стикеров и Стилей в ВК.\n------|count_style- Количество стилей Пользователя.\n------|count_pack - Количество паков Пользователя.\n------|count_don_pack - Количество платных паков Пользователя.\n------|count_don_style - Количество платных стилей Пользователя.\n----|price - Массив с стоимостью.\n------|price_all_rub - Все стикеры и стили в рублях.\n------|price_all_vote- Все стикеры и стили в голосах.\n------|price_pack_rub - Все стикеры в рублях.\n------|price_pack_vote - Все стикеры в голосах.\n------|price_style_rub - Все стили в рублях.\n------|price_style_vote - Все стили в голосах.\n----|sticker = Массив с категориями стикеров.\n------|sticker_all - Массив со всеми наборами стикеров и стилями пользователя.\n--------|id - ID набора.\n--------|name - Название набора.\n--------|price - Цена в голосах.\n--------|rub - Цена в рублях.\n--------|style - является ли набор стилем.\n------|sticker_user_don - Массив со всеми платными наборами пользователя.\n--------|id - ID набора.\n--------|name - Название набора.\n--------|price - Цена в голосах.\n--------|rub - Цена в рублях.\n------|sticker_user_free - Массив со всеми бесплатными наборами пользователя.\n--------|id - ID набора.\n--------|name - Название набора.\n--------|price - Цена в голосах.\n--------|rub - Цена в рублях.\n------|style_user_don - Массив со всеми платными стилями пользователя.\n--------|id - ID набора.\n--------|name - Название набора.\n--------|price - Цена в голосах.\n--------|rub - Цена в рублях.\n------|style_user_free - Массив со всеми бесплатными стилями пользователя.\n--------|id - ID набора.\n--------|name - Название набора.\n--------|price - Цена в голосах.\n--------|rub - Цена в рублях.\n~~~\n\n\n\n\n***\n\n## ![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken") <a name="StickersInfoGet"></a> StickersInfoGet (Получение информации о стикере):\n* Метод: stickers_info_get(sticker_id)\n* Описание: Получает информацию о стикере.\n* Параметры: _sticker_id_ - ID стикера вконтакте.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.stickers_get(66)\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|sticker_pack - Массив с информацией о наборе стикера.\n------|id - ID набора.\n------|name - Название набора.\n------|description - Описание набора.\n------|author - Автор набора.\n------|stikers - Количество стикеров в наборе.\n------|value - Массив с информацией о покупке набора.\n--------|purchase - Тип покупки.\n--------|golos - Цена в голосах.\n--------|rub- Цена в рублях.\n----|sticker_info - Массив с информацией о стикере.\n------|id - ID стикера.\n------|tag - Ключевые слова стикера.\n~~~\n\n***\n\n## ![alt tag](https://github.com/DarsoX/Deviant/blob/main/DOKEN.png "Требуется Token/Doken") <a name="SystemInfo"></a> SystemInfo (Получение информации о номере телефона, почте и 2FA по токену.):\n* Метод: get_system_info()\n* Описание: Получает информации о номере телефона, почте и 2FA по токену пользователя.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.get_system_info()\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|2FA - Включена ли 2FA авторизация.\n----|phone - Привязанный номер телефона к странице.\n----|email - Привязанный email к странице.\n----|ping_vk - Время ответа сервера Вк.\n----|ping_deviant - Время ответа сервера Deviant.\n~~~\n\n\n***\n\n## <a name="AppsGet"></a> AppsGet (Получение информации о приложениях пользователя вк):\n* Метод: apps_get(user_id)\n* Описание: Получает информацию о приложениях которые создал пользователь в вк.\n* Параметры: _user_id_ - ID пользователя вконтакте.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.apps_get(66)\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|count - Количество приложений пользователя.\n----|apps - Массив с приложениями.\n------|name - Название приложения.\n------|users - Количество пользователей приложения.\n------|id - ID приложения в вк.\n~~~\n\n\n\n***\n\n## <a name="GroupsGet"></a> GroupsGet (Получение информации о группах пользователя вк):\n* Метод: groups_get(user_id)\n* Описание: Получает информацию о группах которые создал пользователь в вк.\n* Параметры: _user_id_ - ID пользователя вконтакте.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.groups_get(1)\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|count - Количество групп пользователя.\n----|groups - Массив с приложениями.\n------|name - Название группы.\n------|member - Количество участников группы.\n------|id - ID группы в вк.\n------|verified - Верификация группы.\n~~~\n\n***\n\n## <a name="BalaYandex"></a> BalaYandex (Балабоба от яндекса):\n* Метод: balayandex_get(text,style)\n* Описание: Функционал Балабоба от яндекса - генерирует текст за заданным предложением.\n* Параметр 1: _text_ - Ваше предложение, слово на которое должен запустится генератор.\n* Параметр 2: _style_ - Индекс стиля от 0 до 11. (Параметр не обязательный, если не указать будет "Без стиля")\n> 0. Без стиля (По стандарту) \n> 1. Теория заговора\n> 2. ТВ-Репортажи\n> 3. Тосты\n> 4. Пацанские цитаты\n> 5. Рекламные слоганы\n> 6. Короткие истории\n> 7. Подписи в инсту\n> 8. Википедия\n> 9. Синопсы Фильмов\n> 10. Гороскоп\n> 11. Народные мудрости\n\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.balayandex_get(\'Deviant\', 9)\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|text - Сгенерированный текст.\n----|key - Текст который вы передали.\n~~~\n\n\n\n***\n\n## <a name="TranslatorEmj"></a> TranslatorEmj (Переводчик текста в эмоджи):\n* Метод: translator_emj(text,lang)\n* Описание: Переводит текст с английского или русского в эмоджи.\n* Параметр 1: text - Слово или предложение, которое необходимо перевести.\n* Параметр 2: lang - Язык с которого нужно перевести, поддерживает только _ru_ и _en_\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.translator_emj(\'Привет\',\'ru\')\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|text - переведённый текст.\n~~~\n\n***\n\n## <a name="KeyGenerator"></a> KeyGenerator (Генератор ключей):\n* Метод: generator()\n* Описание: Генерирует случайный ключ.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.generator()\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|code- генерируемый текст\n~~~\n\n\n***\n\n## <a name="GetChatsLink"></a> GetChatsLink (Получает ссылку на чат и информацию по нем.):\n* Метод: get_chat_link()\n* Автор: https://vk.com/slikkness\n* Описание: Получает информацию о случайной беседе и ссылку на вход в нее.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.get_chat_link()\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|name - Название чата.\n----|user - Количество участников чата.\n----|creator - ID создателя чата.\n----|online_admin - Онлайн админ или нет.\n----|online_user - Количество частников в онлайне.\n----|bots - Массив с ботами в чате.\n------|name - Название бота.\n------|id - ID бота.\n----|link - Ссылка на чат.\n~~~\n\n***\n\n## <a name="GetTesterInfo"></a> GetTesterInfo (Проверяет, является ли пользователь тестером вк.):\n* Метод: get_tester()\n* Параметр 1: id - user_id пользователя вк.\n* Описание: Получает информации о карточке тестировщика пользователя.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.get_tester()\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|status - Статус пользователя в программе.\n----|ball - Количество баллов.\n----|reports  - Количество Репортов.\n----|top  - Место в рейтинге.\n~~~\n\n***\n\n## <a name="Ping"></a> Ping (Получает информацию о пинге):\n* Метод: get_ping()\n* Описание: Получает информации о пинге.\n* Пример: \n~~~python\nfrom deviant import Deviant\n\ndev = Deviant(doken = \'Ваш DOKEN\')\n\ndeviant_info = dev.get_ping()\nprint(deviant_info)\n~~~\n\n* Результат:\n~~~python\n--|deviant - Массив с результатом.\n----|ping_vk - Время ответа сервера Вк.\n----|ping_deviant - Время ответа сервера Deviant.\n~~~',
    'author': 'Deviant',
    'author_email': 'darsox.anime@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/DarsoX/Deviant/wiki/Documentation-Deviant',
    'py_modules': modules,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
